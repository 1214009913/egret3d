(function(global){function SignalBinding(signal,listener,isOnce,listenerContext,priority){this._listener=listener;this._isOnce=isOnce;this.context=listenerContext;this._signal=signal;this._priority=priority||0}SignalBinding.prototype={active:true,params:null,execute:function(paramsArr){var handlerReturn,params;if(this.active&&!!this._listener){params=this.params?this.params.concat(paramsArr):paramsArr;handlerReturn=this._listener.apply(this.context,params);if(this._isOnce){this.detach()}}return handlerReturn},detach:function(){return this.isBound()?this._signal.remove(this._listener,this.context):null},isBound:function(){return!!this._signal&&!!this._listener},isOnce:function(){return this._isOnce},getListener:function(){return this._listener},getSignal:function(){return this._signal},_destroy:function(){delete this._signal;delete this._listener;delete this.context},toString:function(){return"[SignalBinding isOnce:"+this._isOnce+", isBound:"+this.isBound()+", active:"+this.active+"]"}};function validateListener(listener,fnName){if(typeof listener!=="function"){throw new Error("listener is a required param of {fn}() and should be a Function.".replace("{fn}",fnName))}}function Signal(){this._bindings=[];this._prevParams=null;var self=this;this.dispatch=function(){Signal.prototype.dispatch.apply(self,arguments)}}Signal.prototype={VERSION:"1.0.0",memorize:false,_shouldPropagate:true,active:true,_registerListener:function(listener,isOnce,listenerContext,priority){var prevIndex=this._indexOfListener(listener,listenerContext),binding;if(prevIndex!==-1){binding=this._bindings[prevIndex];if(binding.isOnce()!==isOnce){throw new Error("You cannot add"+(isOnce?"":"Once")+"() then add"+(!isOnce?"":"Once")+"() the same listener without removing the relationship first.")}}else{binding=new SignalBinding(this,listener,isOnce,listenerContext,priority);this._addBinding(binding)}if(this.memorize&&this._prevParams){binding.execute(this._prevParams)}return binding},_addBinding:function(binding){var n=this._bindings.length;do{--n}while(this._bindings[n]&&binding._priority<=this._bindings[n]._priority);this._bindings.splice(n+1,0,binding)},_indexOfListener:function(listener,context){var n=this._bindings.length,cur;while(n--){cur=this._bindings[n];if(cur._listener===listener&&cur.context===context){return n}}return-1},has:function(listener,context){return this._indexOfListener(listener,context)!==-1},add:function(listener,listenerContext,priority){validateListener(listener,"add");return this._registerListener(listener,false,listenerContext,priority)},addOnce:function(listener,listenerContext,priority){validateListener(listener,"addOnce");return this._registerListener(listener,true,listenerContext,priority)},remove:function(listener,context){validateListener(listener,"remove");var i=this._indexOfListener(listener,context);if(i!==-1){this._bindings[i]._destroy();this._bindings.splice(i,1)}return listener},removeAll:function(){var n=this._bindings.length;while(n--){this._bindings[n]._destroy()}this._bindings.length=0},getNumListeners:function(){return this._bindings.length},halt:function(){this._shouldPropagate=false},dispatch:function(params){if(!this.active){return}var paramsArr=Array.prototype.slice.call(arguments),n=this._bindings.length,bindings;if(this.memorize){this._prevParams=paramsArr}if(!n){return}bindings=this._bindings.slice();this._shouldPropagate=true;do{n--}while(bindings[n]&&this._shouldPropagate&&bindings[n].execute(paramsArr)!==false)},forget:function(){this._prevParams=null},dispose:function(){this.removeAll();delete this._bindings;delete this._prevParams},toString:function(){return"[Signal active:"+this.active+" numListeners:"+this.getNumListeners()+"]"}};var signals=Signal;signals.Signal=Signal;global["signals"]=signals})(window);var __reflect=this&&this.__reflect||function(e,t,r){e.__class__=t,r?r.push(t):r=[t],e.__types__=e.__types__?r.concat(e.__types__):r},__decorate=this&&this.__decorate||function(e,t,r,n){var i,o=arguments.length,a=3>o?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,n);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(3>o?i(a):o>3?i(t,r,a):i(t,r))||a);return o>3&&a&&Object.defineProperty(t,r,a),a},__extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);r.prototype=t.prototype,e.prototype=new r},__awaiter=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))(function(i,o){function a(e){try{l(n.next(e))}catch(t){o(t)}}function s(e){try{l(n["throw"](e))}catch(t){o(t)}}function l(e){e.done?i(e.value):new r(function(t){t(e.value)}).then(a,s)}l((n=n.apply(e,t||[])).next())})},__generator=this&&this.__generator||function(e,t){function r(e){return function(t){return n([e,t])}}function n(r){if(i)throw new TypeError("Generator is already executing.");for(;l;)try{if(i=1,o&&(a=o[2&r[0]?"return":r[0]?"throw":"next"])&&!(a=a.call(o,r[1])).done)return a;switch(o=0,a&&(r=[0,a.value]),r[0]){case 0:case 1:a=r;break;case 4:return l.label++,{value:r[1],done:!1};case 5:l.label++,o=r[1],r=[0];continue;case 7:r=l.ops.pop(),l.trys.pop();continue;default:if(a=l.trys,!(a=a.length>0&&a[a.length-1])&&(6===r[0]||2===r[0])){l=0;continue}if(3===r[0]&&(!a||r[1]>a[0]&&r[1]<a[3])){l.label=r[1];break}if(6===r[0]&&l.label<a[1]){l.label=a[1],a=r;break}if(a&&l.label<a[2]){l.label=a[2],l.ops.push(r);break}a[2]&&l.ops.pop(),l.trys.pop();continue}r=t.call(e,l)}catch(n){r=[6,n],o=0}finally{i=a=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}var i,o,a,s,l={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:r(0),"throw":r(1),"return":r(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s},paper;!function(e){function t(e){e.__onRegister()}function r(e,r){if(!r)return function(r,n){var i=r.constructor;t(i),i.__serializeKeys[n]=e};var n=e.constructor;t(n),n.__serializeKeys[r]=null}function n(e,r){var n=e.constructor;t(n);var i=n.__deserializeIgnore;i.indexOf(r)<0&&i.push(r)}function i(e){t(e),e.__isSingleton?console.warn("Singleton component cannot allow multiple."):e.allowMultiple=!0}function o(e){return function(t){var r=t.requireComponents;r.indexOf(e)<0&&r.push(e)}}function a(e){t(e),e.executeInEditMode=!0}function s(e){var t=this;return function(r,n,i){var o=i.value;i.value=function(){for(var i=[],a=0;a<arguments.length;a++)i[a]=arguments[a];return console.warn(r.name+"."+n+"在"+e+"版本中已被废弃"),o.apply(t,i)}}}e.registerClass=t,e.serializedField=r,e.deserializedIgnore=n,e.allowMultiple=i,e.requireComponent=o,e.executeInEditMode=a,e.deprecated=s}(paper||(paper={}));var paper;!function(e){var t=1;e.createUUID=function(){return(t++).toString()};var r=function(){function t(){}return t.prototype.update=function(){return this.onUpdate&&this.onUpdate.call(this.onUpdateTarget||this,this),this},t.prototype.release=function(){return this._released?this:(e.disposeCollecter.releases.push(this),this._released=!0,this)},t}();e.BaseRelease=r,__reflect(r.prototype,"paper.BaseRelease");var n=function(){function t(){this.uuid=e.createUUID()}return t.__onRegister=function(){return this.__owner&&this.__owner===this?!1:(this.__deserializeIgnore=[],this.__serializeKeys={},this.__owner=this,!0)},__decorate([e.serializedField],t.prototype,"uuid",void 0),t}();e.BaseObject=n,__reflect(n.prototype,"paper.BaseObject",["paper.IUUID"])}(paper||(paper={}));var paper;!function(e){var t;!function(e){function t(){return function(e){e.__custom__=!0}}function r(e,t){return function(r,n){r.hasOwnProperty("__props__")||(r.__props__=[]),void 0!==e&&r.__props__.push(new i(n,e,t))}}function n(e){var t=[];for(var r in e)isNaN(Number(r))&&t.push({label:r,value:e[r]});return t}var i=function(){function e(e,t,r){this.name=e,this.editType=t,this.option=r}return e}();e.PropertyInfo=i,__reflect(i.prototype,"paper.editor.PropertyInfo");var o;!function(e){e.UINT="UINT",e.INT="INT",e.FLOAT="FLOAT",e.TEXT="TEXT",e.CHECKBOX="CHECKBOX",e.SIZE="SIZE",e.VECTOR2="VECTOR2",e.VECTOR3="VECTOR3",e.VECTOR4="VECTOR4",e.QUATERNION="QUATERNION",e.COLOR="COLOR",e.LIST="LIST",e.RECT="RECT",e.MATERIAL="MATERIAL",e.MATERIAL_ARRAY="MATERIAL_ARRAY",e.GAMEOBJECT="GAMEOBJECT",e.TRANSFROM="TRANSFROM",e.COMPONENT="COMPONENT",e.SOUND="SOUND",e.MESH="MESH",e.SHADER="SHADER",e.ARRAY="ARRAY",e.BUTTON="BUTTON",e.NESTED="NESTED",e.TEXTUREDESC="TEXTUREDESC",e.MAT3="MAT3"}(o=e.EditType||(e.EditType={})),e.custom=t,e.property=r,e.getItemsFromEnum=n}(t=e.editor||(e.editor={}))}(paper||(paper={}));var egret3d;!function(e){var t=function(e){function t(t,r){void 0===t&&(t=0),void 0===r&&(r=0);var n=e.call(this)||this;return n.x=t,n.y=r,n}return __extends(t,e),t.create=function(e,r){if(void 0===e&&(e=0),void 0===r&&(r=0),this._instances.length>0){var n=this._instances.pop().set(e,r);return n._released=!1,n}return(new t).set(e,r)},t.prototype.serialize=function(){return[this.x,this.y]},t.prototype.deserialize=function(e){return this.fromArray(e)},t.prototype.copy=function(e){return this.set(e.x,e.y)},t.prototype.clone=function(){return t.create(this.x,this.y)},t.prototype.set=function(e,t){return this.x=e,this.y=t,this},t.prototype.clear=function(){return this.x=0,this.y=0,this},t.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},t.prototype.normalize=function(e){e||(e=this);var t=e.x,r=e.y,n=Math.sqrt(t*t+r*r);return n>2.220446049250313e-16?(n=1/n,this.x=t*n,this.y=r*n):(this.x=1,this.y=0),this},t.prototype.add=function(e,t){return t||(t=e,e=this),this.x=e.x+t.x,this.y=e.y+t.y,this},t.prototype.subtract=function(e,t){return t||(t=e,e=this),this.x=e.x-t.x,this.y=e.y-t.y,this},t.prototype.addScalar=function(e,t){return t||(t=this),this.x=t.x+e,this.y=t.y+e,this},t.prototype.multiplyScalar=function(e,t){return t||(t=this),this.x=e*t.x,this.y=e*t.y,this},t.prototype.min=function(e,t){return t||(t=e,e=this),this.x=Math.min(e.x,t.x),this.y=Math.min(e.y,t.y),this},t.prototype.max=function(e,t){return t||(t=e,e=this),this.x=Math.max(e.x,t.x),this.y=Math.max(e.y,t.y),this},t.prototype.clamp=function(e,t,r){return r||(r=this),this.x=Math.max(e.x,Math.min(t.x,r.x)),this.y=Math.max(e.y,Math.min(t.y,r.y)),this},Object.defineProperty(t.prototype,"length",{get:function(){return Math.sqrt(this.sqrtLength)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"sqrtLength",{get:function(){return this.x*this.x+this.y*this.y},enumerable:!0,configurable:!0}),t.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r},t.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r},t.multiply=function(e,t,r){return r.x=e.x*t.x,r.y=e.y*t.y,r},t.dot=function(e,t){return e.x*t.x+e.y*t.y},t.scale=function(e,t){return e.x=e.x*t,e.y=e.y*t,e},t.getLength=function(e){return Math.sqrt(e.x*e.x+e.y*e.y)},t.getDistance=function(e,t){return this.subtract(e,t,r),this.getLength(r)},t.equal=function(e,t,r){return void 0===r&&(r=1e-5),Math.abs(e.x-t.x)>r?!1:Math.abs(e.y-t.y)>r?!1:!0},t.lerp=function(e,t,r,n){return n.x=e.x*(1-r)+t.x*r,n.y=e.y*(1-r)+t.y*r,n},t.ZERO=new t(0,0),t.ONE=new t(1,1),t.MINUS_ONE=new t(-1,-1),t._instances=[],t}(paper.BaseRelease);e.Vector2=t,__reflect(t.prototype,"egret3d.Vector2",["egret3d.IVector2","paper.ICCS","paper.ISerializable"]);var r=new t;e.helpVector2A=t.create()}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e[e.XYZ=0]="XYZ",e[e.XZY=1]="XZY",e[e.YXZ=2]="YXZ",e[e.YZX=3]="YZX",e[e.ZXY=4]="ZXY",e[e.ZYX=5]="ZYX"}(t=e.EulerOrder||(e.EulerOrder={}));var r=function(e){function t(t,r,n){void 0===t&&(t=0),void 0===r&&(r=0),void 0===n&&(n=0);var i=e.call(this)||this;return i.x=t,i.y=r,i.z=n,i}return __extends(t,e),t.create=function(e,r,n){if(void 0===e&&(e=0),void 0===r&&(r=0),void 0===n&&(n=0),this._instances.length>0){var i=this._instances.pop().set(e,r,n);return i._released=!1,i}return(new t).set(e,r,n)},t.prototype.serialize=function(){return[this.x,this.y,this.z]},t.prototype.deserialize=function(e){return this.fromArray(e)},t.prototype.copy=function(e){return this.set(e.x,e.y,e.z)},t.prototype.clone=function(){return t.create(this.x,this.y,this.z)},t.prototype.set=function(e,t,r){return this.x=e,this.y=t,this.z=r,this},t.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},t.prototype.fromMatrixPosition=function(e){var t=e.rawData;return this.x=t[12],this.y=t[13],this.z=t[14],this.fromArray(e.rawData,12)},t.prototype.fromMatrixColumn=function(e,t){return this.fromArray(e.rawData,4*t)},t.prototype.clear=function(){return this.x=0,this.y=0,this.z=0,this},t.prototype.equal=function(e,t){return void 0===t&&(t=2.220446049250313e-16),Math.abs(this.x-e.x)<=t&&Math.abs(this.y-e.y)<=t&&Math.abs(this.z-e.z)<=t?!0:!1},t.prototype.normalize=function(e,r){void 0===r&&(r=t.FORWARD),e||(e=this);var n=e.x,i=e.y,o=e.z,a=Math.sqrt(n*n+i*i+o*o);return a>2.220446049250313e-16?(a=1/a,this.x=n*a,this.y=i*a,this.z=o*a):this.copy(r),this},t.prototype.negate=function(e){return e||(e=this),this.x=-e.x,this.y=-e.y,this.z=-e.z,this},t.prototype.fromSphericalCoords=function(e,t,r){e.hasOwnProperty("x")&&(r=e.z,t=e.y,e=e.x);var n=Math.sin(t)*e;return this.x=n*Math.sin(r),this.y=Math.cos(t)*e,this.z=n*Math.cos(r),this},t.prototype.applyMatrix3=function(e,t){t||(t=this);var r=t.x,n=t.y,i=t.z,o=e.rawData;return this.x=o[0]*r+o[3]*n+o[6]*i,this.y=o[1]*r+o[4]*n+o[7]*i,this.z=o[2]*r+o[5]*n+o[8]*i,this},t.prototype.applyMatrix=function(e,t){t||(t=this);var r=t.x,n=t.y,i=t.z,o=e.rawData,a=o[3]*r+o[7]*n+o[11]*i+o[15];return-2.220446049250313e-16>a||a>2.220446049250313e-16?(a=1/a,this.x=(o[0]*r+o[4]*n+o[8]*i+o[12])*a,this.y=(o[1]*r+o[5]*n+o[9]*i+o[13])*a,this.z=(o[2]*r+o[6]*n+o[10]*i+o[14])*a):(this.x=0,this.y=0,this.z=0),this},t.prototype.applyDirection=function(e,t){t||(t=this);var r=t.x,n=t.y,i=t.z,o=e.rawData;return this.x=o[0]*r+o[4]*n+o[8]*i,this.y=o[1]*r+o[5]*n+o[9]*i,this.z=o[2]*r+o[6]*n+o[10]*i,this.normalize()},t.prototype.applyQuaternion=function(e,t){t||(t=this);var r=t.x,n=t.y,i=t.z,o=e.x,a=e.y,s=e.z,l=e.w,c=l*r+a*i-s*n,u=l*n+s*r-o*i,p=l*i+o*n-a*r,d=-o*r-a*n-s*i;return this.x=c*l+d*-o+u*-s-p*-a,this.y=u*l+d*-a+p*-o-c*-s,this.z=p*l+d*-s+c*-a-u*-o,this},t.prototype.addScalar=function(e,t){return t||(t=this),this.x=t.x+e,this.y=t.y+e,this.z=t.z+e,this},t.prototype.multiplyScalar=function(e,t){return t||(t=this),this.x=e*t.x,this.y=e*t.y,this.z=e*t.z,this},t.prototype.add=function(e,t){return t||(t=e,e=this),this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},t.prototype.subtract=function(e,t){return t||(t=e,e=this),this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},t.prototype.multiply=function(e,t){return t||(t=e,e=this),this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},t.prototype.divide=function(e,t){return t||(t=e,e=this),this.x=e.x/t.x,this.y=e.y/t.y,this.z=e.z/t.z,this},t.prototype.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z},t.prototype.cross=function(e,t){t||(t=e,e=this);var r=e.x,n=e.y,i=e.z,o=t.x,a=t.y,s=t.z;return this.x=n*s-i*a,this.y=i*o-r*s,this.z=r*a-n*o,this},t.prototype.lerp=function(e,t,r){if("number"==typeof e)if(r){var n=e;e=t,t=r,r=n}else r=e,e=this;else"number"==typeof t&&(r=t,t=e,e=this);return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this},t.prototype.min=function(e,t){return t||(t=e,e=this),this.x=Math.min(e.x,t.x),this.y=Math.min(e.y,t.y),this.z=Math.min(e.z,t.z),this},t.prototype.max=function(e,t){return t||(t=e,e=this),this.x=Math.max(e.x,t.x),this.y=Math.max(e.y,t.y),this.z=Math.max(e.z,t.z),this},t.prototype.clamp=function(e,t,r){return r||(r=this),this.x=Math.max(e.x,Math.min(t.x,r.x)),this.y=Math.max(e.y,Math.min(t.y,r.y)),this.z=Math.max(e.z,Math.min(t.z,r.z)),this},t.prototype.reflect=function(e,t){return t||(t=this),this.subtract(t,n.multiplyScalar(2*t.dot(e),e))},t.prototype.getAngle=function(e){var t=this.squaredLength*e.squaredLength,r=this.dot(e)/Math.sqrt(t);return Math.acos(Math.max(-1,Math.min(1,r)))},t.prototype.getSquaredDistance=function(e){return n.subtract(e,this).squaredLength},t.prototype.getDistance=function(e){return n.subtract(e,this).length},t.prototype.toArray=function(e,t){return void 0===t&&(t=0),e||(e=[]),e[0+t]=this.x,e[1+t]=this.y,e[2+t]=this.z,e},Object.defineProperty(t.prototype,"length",{get:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"squaredLength",{get:function(){return this.x*this.x+this.y*this.y+this.z*this.z},enumerable:!0,configurable:!0}),t.set=function(e,t,r,n){return n.x=e,n.y=t,n.z=r,n},t.normalize=function(e){var r=t.getLength(e);return r>Number.MIN_VALUE?(e.x=e.x/r,e.y=e.y/r,e.z=e.z/r):(e.x=1,e.y=0,e.z=0),e},t.copy=function(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t},t.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r.z=e.z+t.z,r},t.multiply=function(e,t,r){return r.x=e.x*t.x,r.y=e.y*t.y,r.z=e.z*t.z,r},t.scale=function(e,t){return e.x=e.x*t,e.y=e.y*t,e.z=e.z*t,e},t.cross=function(e,t,r){return r.x=e.y*t.z-e.z*t.y,r.y=e.z*t.x-e.x*t.z,r.z=e.x*t.y-e.y*t.x,r},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z},t.lerp=function(e,t,r,n){return n.x=e.x*(1-r)+t.x*r,n.y=e.y*(1-r)+t.y*r,n.z=e.z*(1-r)+t.z*r,n},t.equal=function(e,t,r){return void 0===r&&(r=1e-5),Math.abs(e.x-t.x)>r?!1:Math.abs(e.y-t.y)>r?!1:Math.abs(e.z-t.z)>r?!1:!0},t.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r.z=e.z-t.z,r},t.getSqrLength=function(e){return e.x*e.x+e.y*e.y+e.z*e.z},t.getLength=function(e){return Math.sqrt(this.getSqrLength(e))},t.getDistance=function(e,t){return this.getLength(this.subtract(e,t,n))},t.ZERO=new t(0,0,0),t.ONE=new t(1,1,1),t.MINUS_ONE=new t(-1,-1,-1),t.UP=new t(0,1,0),t.DOWN=new t(0,-1,0),t.LEFT=new t(-1,0,0),t.RIGHT=new t(1,0,0),t.FORWARD=new t(0,0,1),t.BACK=new t(0,0,-1),t._instances=[],t}(paper.BaseRelease);e.Vector3=r,__reflect(r.prototype,"egret3d.Vector3",["egret3d.IVector3","egret3d.IVector2","paper.ICCS","paper.ISerializable"]);var n=r.create();e.helpVector3A=r.create(),e.helpVector3B=r.create(),e.helpVector3C=r.create(),e.helpVector3D=r.create(),e.helpVector3E=r.create(),e.helpVector3F=r.create(),e.helpVector3G=r.create(),e.helpVector3H=r.create()}(egret3d||(egret3d={}));var paper;!function(e){var t=null,r=function(r){function n(){var n=r.call(this)||this;if(n.hideFlags=0,n.gameObject=null,n.extras=2===e.Application.playerMode?{}:void 0,n._enabled=!0,!t)throw new Error("Component instantiation through constructor is not allowed.");return n.gameObject=t,t=null,n}return __extends(n,r),n.__onRegister=function(){return e.BaseObject.__onRegister.call(this)?(this.__isSingleton?this._allSingletonComponents:this._allComponents).indexOf(this)>=0?(console.warn("Register component class again.",egret.getQualifiedClassName(this)),!1):(this.requireComponents?this.requireComponents=this.requireComponents.concat():this.requireComponents=[],this.onComponentEnabled=new signals.Signal,this.onComponentDisabled=new signals.Signal,this.__isSingleton?(this.__index=this._allSingletonComponents.length+300,this._allSingletonComponents.push(this)):(this.__index=this._allComponents.length,this._allComponents.push(this)),!0):!1},n.create=function(e,r){return t=r,new e},n.prototype._dispatchEnabledEvent=function(e){var t=this.constructor;e?t.onComponentEnabled.dispatch(this):t.onComponentDisabled.dispatch(this)},n.prototype.initialize=function(e){},n.prototype.uninitialize=function(){},Object.defineProperty(n.prototype,"isDestroyed",{get:function(){return!this.gameObject},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"enabled",{get:function(){return this._enabled},set:function(e){if(this._enabled!==e){var t=this.isActiveAndEnabled;this._enabled=e;var r=this.isActiveAndEnabled;r!==t&&this._dispatchEnabledEvent(r)}},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"isActiveAndEnabled",{get:function(){return this._enabled&&(this.gameObject._activeDirty?this.gameObject.activeInHierarchy:this.gameObject._activeInHierarchy)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"transform",{get:function(){return this.gameObject.transform},enumerable:!0,configurable:!0}),n.executeInEditMode=!1,n.allowMultiple=!1,n.requireComponents=null,n.onComponentEnabled=null,n.onComponentDisabled=null,n.__isSingleton=!1,n.__index=-1,n._allComponents=[],n._allSingletonComponents=[],__decorate([e.serializedField],n.prototype,"hideFlags",void 0),__decorate([e.serializedField],n.prototype,"extras",void 0),__decorate([e.serializedField],n.prototype,"_enabled",void 0),__decorate([e.editor.property("CHECKBOX")],n.prototype,"enabled",null),n}(e.BaseObject);e.BaseComponent=r,__reflect(r.prototype,"paper.BaseComponent")}(paper||(paper={}));var paper;!function(e){var t=function(e){function t(t){void 0===t&&(t="");var r=e.call(this)||this;return r.name="",r._isBuiltin=!1,r.name=t,r}return __extends(t,e),t.register=function(e){this._assets[e.name]?this._assets[e.name]!==e&&(console.warn("Replace existing asset.",e.name),this._assets[e.name]=e):this._assets[e.name]=e},t.find=function(e){var t=this._assets[e];return t?t:RES.getRes(e)},t.prototype.dispose=function(e){return this._isBuiltin?(console.warn("Cannot dispose builtin asset.",this.name),!1):(delete t._assets[this.name],this.name="",!0)},t._assets={},t}(e.BaseObject);e.Asset=t,__reflect(t.prototype,"paper.Asset")}(paper||(paper={}));var egret3d;!function(e){var t=function(e){function t(t,r,n,i){void 0===t&&(t=0),void 0===r&&(r=0),void 0===n&&(n=0),void 0===i&&(i=1);var o=e.call(this)||this;return o.x=t,o.y=r,o.z=n,o.w=i,o}return __extends(t,e),t.create=function(e,r,n,i){if(void 0===e&&(e=0),void 0===r&&(r=0),void 0===n&&(n=0),void 0===i&&(i=1),this._instances.length>0){var o=this._instances.pop().set(e,r,n,i);return o._released=!1,o}return(new t).set(e,r,n,i)},t.prototype.serialize=function(){return[this.x,this.y,this.z,this.w]},t.prototype.deserialize=function(e){return this.fromArray(e)},t.prototype.copy=function(e){return this.set(e.x,e.y,e.z,e.w)},t.prototype.clone=function(){return t.create(this.x,this.y,this.z,this.w)},t.prototype.set=function(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this},t.prototype.clear=function(){return this.x=0,this.y=0,this.z=0,this.w=1,this},t.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},t.prototype.equal=function(e,t){return void 0===t&&(t=1e-6),Math.abs(this.x-e.x)<=t&&Math.abs(this.y-e.y)<=t&&Math.abs(this.z-e.z)<=t&&Math.abs(this.w-e.w)<=t?!0:!1},t.prototype.normalize=function(e){e||(e=this);var t=e.x,r=e.y,n=e.z,i=e.w,o=Math.sqrt(t*t+r*r+n*n+i*i);return o>2.220446049250313e-16?(o=1/o,this.x=t*o,this.y=r*o,this.z=n*o,this.w=i*o):(this.x=0,this.y=0,this.z=0,this.w=1),this},t.prototype.inverse=function(e){return e||(e=this),this.x=-1*e.x,this.y=-1*e.y,this.z=-1*e.z,this.w=e.w,this},t.prototype.multiplyScalar=function(e,t){return t||(t=this),this.x=e*t.x,this.y=e*t.y,this.z=e*t.z,this.w=e*t.w,this},t.prototype.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},t.prototype.lerp=function(e,t,r){if("number"==typeof e)if(r){var n=e;e=t,t=r,r=n}else r=e,e=this;else"number"==typeof t&&(r=t,t=e,e=this);return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this},t.prototype.toArray=function(e,t){return void 0===t&&(t=0),e||(e=[]),e[0+t]=this.x,e[1+t]=this.y,e[2+t]=this.z,e[3+t]=this.w,e},Object.defineProperty(t.prototype,"length",{get:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"squaredLength",{get:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},enumerable:!0,configurable:!0}),t._instances=[],t}(paper.BaseRelease);e.Vector4=t,__reflect(t.prototype,"egret3d.Vector4",["egret3d.IVector4","egret3d.IVector3","egret3d.IVector2","paper.ICCS","paper.ISerializable"])}(egret3d||(egret3d={}));var paper;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.frustumCulled=!0,e._localBoundingBoxDirty=!0,e._boundingSphereDirty=!0,e._receiveShadows=!1,e._castShadows=!1,e._lightmapIndex=-1,e._lightmapScaleOffset=egret3d.Vector4.create(),e._boundingSphere=egret3d.Sphere.create(),e._localBoundingBox=egret3d.Box.create(),e._materials=[egret3d.DefaultMaterials.MESH_BASIC],e}return __extends(r,t),r.prototype._recalculateSphere=function(){var e=this.localBoundingBox,t=this.gameObject.transform.localToWorldMatrix;this._boundingSphere.set(e.center,e.boundingSphereRadius),this._boundingSphere.center.applyMatrix(t),this._boundingSphere.radius*=t.maxScaleOnAxis},r.prototype.uninitialize=function(){t.prototype.uninitialize.call(this),this._materials.length=0},Object.defineProperty(r.prototype,"receiveShadows",{get:function(){return this._receiveShadows},set:function(e){e!==this._receiveShadows&&(this._receiveShadows=e)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"castShadows",{get:function(){return this._castShadows},set:function(e){e!==this._castShadows&&(this._castShadows=e)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"lightmapIndex",{get:function(){return this._lightmapIndex},set:function(e){e!==this._lightmapIndex&&(this._lightmapIndex=e)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"lightmapScaleOffset",{get:function(){return this._lightmapScaleOffset},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"localBoundingBox",{get:function(){return this._localBoundingBoxDirty&&(this.recalculateLocalBox(),this._localBoundingBoxDirty=!1),this._localBoundingBox},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"boundingSphere",{get:function(){return this._boundingSphereDirty&&(this._recalculateSphere(),this._boundingSphereDirty=!1),this._boundingSphere},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"materials",{get:function(){return this._materials},set:function(e){if(e!==this._materials){this._materials.length=0;for(var t=0,n=e;t<n.length;t++){var i=n[t];i||console.warn("Invalid material."),this._materials.push(i||egret3d.DefaultMaterials.MISSING)}r.onMaterialsChanged.dispatch(this)}},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"material",{get:function(){return this._materials.length>0?this._materials[0]:null},set:function(e){var t=!1;e?this._materials.length>0?this._materials[0]!==e&&(this._materials[0]=e,t=!0):(this._materials.push(e),t=!0):this._materials.length>0&&(this._materials.splice(0,1),t=!0),t&&r.onMaterialsChanged.dispatch(this)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"aabb",{get:function(){return this.localBoundingBox},enumerable:!0,configurable:!0}),r.onMaterialsChanged=new signals.Signal,__decorate([e.serializedField,e.editor.property("CHECKBOX")],r.prototype,"frustumCulled",void 0),__decorate([e.serializedField],r.prototype,"_receiveShadows",void 0),__decorate([e.serializedField],r.prototype,"_castShadows",void 0),__decorate([e.serializedField],r.prototype,"_lightmapIndex",void 0),__decorate([e.serializedField],r.prototype,"_lightmapScaleOffset",void 0),__decorate([e.serializedField],r.prototype,"_materials",void 0),__decorate([e.editor.property("CHECKBOX")],r.prototype,"receiveShadows",null),__decorate([e.editor.property("CHECKBOX")],r.prototype,"castShadows",null),__decorate([e.editor.property("INT",{minimum:-1})],r.prototype,"lightmapIndex",null),__decorate([e.editor.property("MATERIAL_ARRAY")],r.prototype,"materials",null),r}(e.BaseComponent);e.BaseRenderer=t,__reflect(t.prototype,"paper.BaseRenderer",["egret3d.IRaycast"])}(paper||(paper={}));var egret3d;!function(e){var t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r=function(r){function s(e,n){void 0===n&&(n=0);var i=r.call(this)||this;return i.rawData=null,e&&e instanceof ArrayBuffer?i.fromBuffer(e,n):(i.rawData=new Float32Array(16),i.fromArray(e||t)),i}return __extends(s,r),s.create=function(e,t){if(void 0===t&&(t=0),this._instances.length>0){var r=this._instances.pop();return r._released=!1,e?e instanceof ArrayBuffer?r.fromBuffer(e,t):r.fromArray(e,t):r.identity(),r}return new s(e,t)},s.prototype.serialize=function(){return this.rawData},s.prototype.deserialize=function(e){return this.fromArray(e)},s.prototype.copy=function(e){return this.fromArray(e.rawData)},s.prototype.clone=function(){return s.create(this.rawData)},s.prototype.set=function(e,t,r,n,i,o,a,s,l,c,u,p,d,h,f,_){var m=this.rawData;return m[0]=e,m[4]=t,m[8]=r,m[12]=n,m[1]=i,m[5]=o,m[9]=a,m[13]=s,m[2]=l,m[6]=c,m[10]=u,m[14]=p,m[3]=d,m[7]=h,m[11]=f,m[15]=_,this},s.prototype.identity=function(){return this.rawData[0]=1,this.rawData[1]=0,this.rawData[2]=0,this.rawData[3]=0,this.rawData[4]=0,this.rawData[5]=1,this.rawData[6]=0,this.rawData[7]=0,this.rawData[8]=0,this.rawData[9]=0,this.rawData[10]=1,this.rawData[11]=0,this.rawData[12]=0,this.rawData[13]=0,this.rawData[14]=0,this.rawData[15]=1,this},s.prototype.fromArray=function(e,t){void 0===t&&(t=0);for(var r=0;16>r;++r)this.rawData[r]=e[r+t];return this},s.prototype.fromBuffer=function(e,t){return void 0===t&&(t=0),this.rawData=new Float32Array(e,t,16),this},s.prototype.fromTranslate=function(e,t){return void 0===t&&(t=!1),t||this.identity(),this.rawData[12]=e.x,this.rawData[13]=e.y,this.rawData[14]=e.z,this},s.prototype.fromRotation=function(t,r){return void 0===r&&(r=!1),this.compose(r?n.fromArray(this.rawData,12):e.Vector3.ZERO,t,e.Vector3.ONE)},s.prototype.fromEuler=function(e,t,r){void 0===t&&(t=2),void 0===r&&(r=!1);var n=Math.cos,i=Math.sin,o=e.x,a=e.y,s=e.z,l=n(o),c=i(o),u=n(a),p=i(a),d=n(s),h=i(s),f=this.rawData;switch(t){case 0:var _=l*d,m=l*h,v=c*d,g=c*h;f[0]=u*d,f[4]=-u*h,f[8]=p,f[1]=m+v*p,f[5]=_-g*p,f[9]=-c*u,f[2]=g-_*p,f[6]=v+m*p,f[10]=l*u;break;case 1:var y=l*u,b=l*p,x=c*u,T=c*p;f[0]=u*d,f[4]=-h,f[8]=p*d,f[1]=y*h+T,f[5]=l*d,f[9]=b*h-x,f[2]=x*h-b,f[6]=c*d,f[10]=T*h+y;break;case 2:var C=u*d,S=u*h,E=p*d,M=p*h;f[0]=C+M*c,f[4]=E*c-S,f[8]=l*p,f[1]=l*h,f[5]=l*d,f[9]=-c,f[2]=S*c-E,f[6]=M+C*c,f[10]=l*u;break;case 3:var y=l*u,b=l*p,x=c*u,T=c*p;f[0]=u*d,f[4]=T-y*h,f[8]=x*h+b,f[1]=h,f[5]=l*d,f[9]=-c*d,f[2]=-p*d,f[6]=b*h+x,f[10]=y-T*h;break;case 4:var C=u*d,S=u*h,E=p*d,M=p*h;f[0]=C-M*c,f[4]=-l*h,f[8]=E+S*c,f[1]=S+E*c,f[5]=l*d,f[9]=M-C*c,f[2]=-l*p,f[6]=c,f[10]=l*u;break;case 5:var _=l*d,m=l*h,v=c*d,g=c*h;f[0]=u*d,f[4]=v*p-m,f[8]=_*p+g,f[1]=u*h,f[5]=g*p+_,f[9]=m*p-v,f[2]=-p,f[6]=c*u,f[10]=l*u}return f[3]=0,f[7]=0,f[11]=0,r||(f[12]=0,f[13]=0,f[14]=0,f[15]=1),this},s.prototype.fromScale=function(e,t){return void 0===t&&(t=!1),t&&n.fromArray(this.rawData,12),this.identity(),this.rawData[0]=e.x,this.rawData[5]=e.y,this.rawData[10]=e.z,t&&(this.rawData[12]=n.x,this.rawData[13]=n.y,this.rawData[14]=n.z),this},s.prototype.fromRotationX=function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1)},s.prototype.fromRotationY=function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1)},s.prototype.fromRotationZ=function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1)},s.prototype.fromAxis=function(e,t){var r=Math.cos(t),n=Math.sin(t),i=1-r,o=e.x,a=e.y,s=e.z,l=i*o,c=i*a;return this.set(l*o+r,l*a-n*s,l*s+n*a,0,l*a+n*s,c*a+r,c*s-n*o,0,l*s-n*a,c*s+n*o,i*s*s+r,0,0,0,0,1)},s.prototype.fromProjection=function(e,t,r,n,i,o,l){var c=a;if(l=1-l,i>0){var u=Math.tan(.5*e),p=t*u,d=2*p,h=o*d,f=-.5*h,_=-t*u,m=2*-_,v=m/o,g=.5*v,y=p+(g-p)*l,b=f+(_-f)*l,x=h+(m-h)*l,T=d+(v-d)*l;s.perspectiveProjectLH(b,b+x,y,y-T,t,r,this)}if(1>i){var h=n*o,d=n,m=n,v=n/o,x=h+(m-h)*l,T=d+(v-d)*l;s.orthographicProjectLH(x,T,t,r,c)}return 0===i?this.copy(c):1===i||this.lerp(c,this,i),this},s.prototype.fromAxises=function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1)},s.prototype.compose=function(e,t,r){var n=t.x,i=t.y,o=t.z,a=t.w,s=r.x,l=r.y,c=r.z,u=n+n,p=i+i,d=o+o,h=n*u,f=n*p,_=n*d,m=i*p,v=i*d,g=o*d,y=a*u,b=a*p,x=a*d,T=this.rawData;return T[0]=(1-(m+g))*s,T[1]=(f+x)*s,T[2]=(_-b)*s,T[4]=(f-x)*l,T[5]=(1-(h+g))*l,T[6]=(v+y)*l,T[8]=(_+b)*c,T[9]=(v-y)*c,T[10]=(1-(h+m))*c,T[12]=e.x,T[13]=e.y,T[14]=e.z,T[3]=T[7]=T[11]=0,T[15]=1,this},s.prototype.decompose=function(e,t,r){void 0===e&&(e=null),void 0===t&&(t=null),void 0===r&&(r=null);var i=this.rawData;if(e&&(e.x=i[12],e.y=i[13],e.z=i[14]),t||r){var o=n,s=o.set(i[0],i[1],i[2]).length,l=o.set(i[4],i[5],i[6]).length,c=o.set(i[8],i[9],i[10]).length,u=this.determinant;if(0>u&&(s=-s),t){var p=a;p.copy(this);var d=1/s,h=1/l,f=1/c;p.rawData[0]*=d,p.rawData[1]*=d,p.rawData[2]*=d,p.rawData[4]*=h,p.rawData[5]*=h,p.rawData[6]*=h,p.rawData[8]*=f,p.rawData[9]*=f,p.rawData[10]*=f,t.fromMatrix(p)}r&&(r.x=s,r.y=l,r.z=c)}return this},s.prototype.extractRotation=function(e){e||(e=this);var t=this.rawData,r=e.rawData,i=n,o=1/i.fromMatrixColumn(e,0).length,a=1/i.fromMatrixColumn(e,1).length,s=1/i.fromMatrixColumn(e,2).length;return t[0]=r[0]*o,t[1]=r[1]*o,t[2]=r[2]*o,t[3]=0,t[4]=r[4]*a,t[5]=r[5]*a,t[6]=r[6]*a,t[7]=0,t[8]=r[8]*s,t[9]=r[9]*s,t[10]=r[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},s.prototype.transpose=function(e){e||(e=this);var t=e.rawData,r=this.rawData,n=0;return n=t[1],r[1]=t[4],r[4]=n,n=t[2],r[2]=t[8],r[8]=n,n=t[6],r[6]=t[9],r[9]=n,n=t[3],r[3]=t[12],r[12]=n,n=t[7],r[7]=t[13],r[13]=n,n=t[11],r[11]=t[14],r[14]=n,this},s.prototype.inverse=function(e){e||(e=this);var t=e.rawData,r=this.rawData,n=t[0],i=t[1],o=t[2],a=t[3],s=t[4],l=t[5],c=t[6],u=t[7],p=t[8],d=t[9],h=t[10],f=t[11],_=t[12],m=t[13],v=t[14],g=t[15],y=d*v*u-m*h*u+m*c*f-l*v*f-d*c*g+l*h*g,b=_*h*u-p*v*u-_*c*f+s*v*f+p*c*g-s*h*g,x=p*m*u-_*d*u+_*l*f-s*m*f-p*l*g+s*d*g,T=_*d*c-p*m*c-_*l*h+s*m*h+p*l*v-s*d*v,C=n*y+i*b+o*x+a*T;if(0===C)return console.warn("Cannot invert matrix, determinant is 0."),this.identity();var S=1/C;return r[0]=y*S,r[1]=(m*h*a-d*v*a-m*o*f+i*v*f+d*o*g-i*h*g)*S,r[2]=(l*v*a-m*c*a+m*o*u-i*v*u-l*o*g+i*c*g)*S,r[3]=(d*c*a-l*h*a-d*o*u+i*h*u+l*o*f-i*c*f)*S,r[4]=b*S,r[5]=(p*v*a-_*h*a+_*o*f-n*v*f-p*o*g+n*h*g)*S,r[6]=(_*c*a-s*v*a-_*o*u+n*v*u+s*o*g-n*c*g)*S,r[7]=(s*h*a-p*c*a+p*o*u-n*h*u-s*o*f+n*c*f)*S,r[8]=x*S,r[9]=(_*d*a-p*m*a-_*i*f+n*m*f+p*i*g-n*d*g)*S,r[10]=(s*m*a-_*l*a+_*i*u-n*m*u-s*i*g+n*l*g)*S,r[11]=(p*l*a-s*d*a-p*i*u+n*d*u+s*i*f-n*l*f)*S,r[12]=T*S,r[13]=(p*m*o-_*d*o+_*i*h-n*m*h-p*i*v+n*d*v)*S,r[14]=(_*l*o-s*m*o-_*i*c+n*m*c+s*i*v-n*l*v)*S,r[15]=(s*d*o-p*l*o+p*i*c-n*d*c-s*i*h+n*l*h)*S,this},s.prototype.multiplyScalar=function(e,t){t||(t=this);var r=t.rawData,n=this.rawData;return n[0]=r[0]*e,n[1]=r[1]*e,n[2]=r[2]*e,n[3]=r[3]*e,n[4]=r[4]*e,n[5]=r[5]*e,n[6]=r[6]*e,n[7]=r[7]*e,n[8]=r[8]*e,n[9]=r[9]*e,n[10]=r[10]*e,n[11]=r[11]*e,n[12]=r[12]*e,n[13]=r[13]*e,n[14]=r[14]*e,n[15]=r[15]*e,this},s.prototype.multiply=function(e,t){t||(t=e,e=this);var r=e.rawData,n=t.rawData,i=this.rawData,o=r[0],a=r[4],s=r[8],l=r[12],c=r[1],u=r[5],p=r[9],d=r[13],h=r[2],f=r[6],_=r[10],m=r[14],v=r[3],g=r[7],y=r[11],b=r[15],x=n[0],T=n[4],C=n[8],S=n[12],E=n[1],M=n[5],A=n[9],R=n[13],w=n[2],O=n[6],L=n[10],P=n[14],D=n[3],I=n[7],z=n[11],U=n[15];return i[0]=o*x+a*E+s*w+l*D,i[4]=o*T+a*M+s*O+l*I,i[8]=o*C+a*A+s*L+l*z,i[12]=o*S+a*R+s*P+l*U,i[1]=c*x+u*E+p*w+d*D,i[5]=c*T+u*M+p*O+d*I,i[9]=c*C+u*A+p*L+d*z,i[13]=c*S+u*R+p*P+d*U,i[2]=h*x+f*E+_*w+m*D,i[6]=h*T+f*M+_*O+m*I,i[10]=h*C+f*A+_*L+m*z,i[14]=h*S+f*R+_*P+m*U,i[3]=v*x+g*E+y*w+b*D,i[7]=v*T+g*M+y*O+b*I,i[11]=v*C+g*A+y*L+b*z,i[15]=v*S+g*R+y*P+b*U,this},s.prototype.premultiply=function(e){return this.multiply(e,this)},s.prototype.lerp=function(e,t,r){if("number"==typeof t&&(r=t,t=e,e=this),0===r){for(var n=0;16>n;n++)this.rawData[n]=e.rawData[n];return this}if(1===r){for(var n=0;16>n;n++)this.rawData[n]=t.rawData[n];return this}for(var n=0;16>n;n++){var i=e.rawData[n];this.rawData[n]=i+(t.rawData[n]-i)*r
}return this},s.prototype.lookAt=function(e,t,r){return this.lookRotation(o.subtract(t,e),r),this},s.prototype.lookRotation=function(t,r){var a=o.normalize(t),s=n.cross(r,a).normalize(n,e.Vector3.RIGHT),l=i.cross(a,s),c=this.rawData;return c[0]=s.x,c[4]=l.x,c[8]=a.x,c[1]=s.y,c[5]=l.y,c[9]=a.y,c[2]=s.z,c[6]=l.z,c[10]=a.z,this},s.prototype.toArray=function(e,t){void 0===t&&(t=0),e||(e=[]);for(var r=0;16>r;++r)e[r+t]=this.rawData[r];return e},s.prototype.toEuler=function(t,r){void 0===r&&(r=2),t||(t=e.Vector3.create());var n=this.rawData,i=n[0],o=n[4],a=n[8],s=n[1],l=n[5],c=n[9],u=n[2],p=n[6],d=n[10];switch(r){case 0:t.y=Math.asin(e.math.clamp(a,-1,1)),Math.abs(a)<.999999?(t.x=Math.atan2(-c,d),t.z=Math.atan2(-o,i)):(t.x=Math.atan2(p,l),t.z=0);break;case 1:t.z=Math.asin(-e.math.clamp(o,-1,1)),Math.abs(o)<.999999?(t.x=Math.atan2(p,l),t.y=Math.atan2(a,i)):(t.x=Math.atan2(-c,d),t.y=0);break;case 2:t.x=Math.asin(-e.math.clamp(c,-1,1)),Math.abs(c)<.999999?(t.y=Math.atan2(a,d),t.z=Math.atan2(s,l)):(t.y=Math.atan2(-u,i),t.z=0);break;case 3:t.z=Math.asin(e.math.clamp(s,-1,1)),Math.abs(s)<.999999?(t.x=Math.atan2(-c,l),t.y=Math.atan2(-u,i)):(t.x=0,t.y=Math.atan2(a,d));break;case 4:t.x=Math.asin(e.math.clamp(p,-1,1)),Math.abs(p)<.999999?(t.y=Math.atan2(-u,d),t.z=Math.atan2(-o,l)):(t.y=0,t.z=Math.atan2(s,i));break;case 5:t.y=Math.asin(-e.math.clamp(u,-1,1)),Math.abs(u)<.999999?(t.x=Math.atan2(p,d),t.z=Math.atan2(s,i)):(t.x=0,t.z=Math.atan2(-o,l))}return t},Object.defineProperty(s.prototype,"determinant",{get:function(){var e=this.rawData,t=e[0],r=e[4],n=e[8],i=e[12],o=e[1],a=e[5],s=e[9],l=e[13],c=e[2],u=e[6],p=e[10],d=e[14],h=e[3],f=e[7],_=e[11],m=e[15];return h*(+i*s*u-n*l*u-i*a*p+r*l*p+n*a*d-r*s*d)+f*(+t*s*d-t*l*p+i*o*p-n*o*d+n*l*c-i*s*c)+_*(+t*l*u-t*a*d-i*o*u+r*o*d+i*a*c-r*l*c)+m*(-n*a*c-t*s*u+t*a*p+n*o*u-r*o*p+r*s*c)},enumerable:!0,configurable:!0}),Object.defineProperty(s.prototype,"maxScaleOnAxis",{get:function(){var e=this.rawData,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,n))},enumerable:!0,configurable:!0}),s.prototype.transformVector3=function(e,t){var r=e.x*this.rawData[0]+e.y*this.rawData[4]+e.z*this.rawData[8]+this.rawData[12],n=e.x*this.rawData[1]+e.y*this.rawData[5]+e.z*this.rawData[9]+this.rawData[13],i=e.x*this.rawData[2]+e.y*this.rawData[6]+e.z*this.rawData[10]+this.rawData[14],o=e.x*this.rawData[3]+e.y*this.rawData[7]+e.z*this.rawData[11]+this.rawData[15];return t||(t=e),t.x=r/o,t.y=n/o,t.z=i/o,t},s.prototype.transformNormal=function(e,t){var r=e.x*this.rawData[0]+e.y*this.rawData[4]+e.z*this.rawData[8],n=e.x*this.rawData[1]+e.y*this.rawData[5]+e.z*this.rawData[9],i=e.x*this.rawData[2]+e.y*this.rawData[6]+e.z*this.rawData[10];return t||(t=e),t.x=r,t.y=n,t.z=i,t},s.perspectiveProjectLH=function(e,t,r,n,i,o,a){var s=2*i/(t-e),l=2*i/(r-n);return a.rawData[0]=s,a.rawData[1]=a.rawData[2]=a.rawData[3]=0,a.rawData[4]=a.rawData[6]=a.rawData[7]=0,a.rawData[5]=l,a.rawData[8]=a.rawData[9]=0,a.rawData[10]=(o+i)/(o-i),a.rawData[11]=1,a.rawData[12]=a.rawData[13]=a.rawData[15]=0,a.rawData[14]=-2*(i*o)/(o-i),a},s.orthographicProjectLH=function(e,t,r,n,i){var o=2/e,a=2/t,s=2/(n-r),l=(r+n)/(r-n);return i.rawData[0]=o,i.rawData[1]=0,i.rawData[2]=0,i.rawData[3]=0,i.rawData[4]=0,i.rawData[5]=a,i.rawData[6]=0,i.rawData[7]=0,i.rawData[8]=0,i.rawData[9]=0,i.rawData[10]=s,i.rawData[11]=0,i.rawData[12]=0,i.rawData[13]=0,i.rawData[14]=l,i.rawData[15]=1,i},s.IDENTITY=new s,s._instances=[],s}(paper.BaseRelease);e.Matrix4=r,__reflect(r.prototype,"egret3d.Matrix4",["paper.ICCS","paper.ISerializable"]);var n=e.Vector3.create(),i=e.Vector3.create(),o=e.Vector3.create(),a=r.create();e.helpMatrixA=r.create(),e.helpMatrixB=r.create(),e.helpMatrixC=r.create(),e.helpMatrixD=r.create()}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e[e.Box=0]="Box",e[e.Sphere=1]="Sphere",e[e.Cylinder=2]="Cylinder",e[e.Cone=3]="Cone",e[e.Capsule=4]="Capsule",e[e.ConvexHull=5]="ConvexHull"}(t=e.ColliderType||(e.ColliderType={}));var r=function(t){function r(){var r=t.call(this)||this;return r.subMeshIndex=-1,r.triangleIndex=-1,r.distance=0,r.position=e.Vector3.create(),r.textureCoordA=e.Vector2.create(),r.textureCoordB=e.Vector2.create(),r.normal=null,r.transform=null,r.collider=null,r.rigidbody=null,r}return __extends(r,t),r.create=function(){if(this._instances.length>0){var e=this._instances.pop();return e._released=!1,e}return new r},r.prototype.onClear=function(){this.subMeshIndex=-1,this.triangleIndex=-1,this.distance=0,this.position.set(0,0,0),this.textureCoordA.set(0,0),this.textureCoordB.set(0,0),this.normal=null,this.transform=null,this.collider=null,this.rigidbody=null},r._instances=[],r}(paper.BaseRelease);e.RaycastInfo=r,__reflect(r.prototype,"egret3d.RaycastInfo")}(egret3d||(egret3d={}));var paper;!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._raw=null,t}return __extends(t,e),t.prototype.parse=function(e){this._raw=e},t.prototype.dispose=function(){return e.prototype.dispose.call(this)?(this._raw=null,!0):!1},t.prototype.caclByteLength=function(){return 0},t}(e.Asset);e.BasePrefabAsset=t,__reflect(t.prototype,"paper.BasePrefabAsset");var r=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.create=function(t,n,i,o,a){var s=e.Asset.find(t);if(s&&s instanceof r){if(void 0!==n&&null!==n){if(n instanceof e.Scene){var l=s.createInstance(n);return l&&l.transform.setLocalPosition(0,0,0),l}var l=s.createInstance(a||null);return l&&l.transform.setLocalPosition(n,i,o),l}var l=s.createInstance();return l&&l.transform.setLocalPosition(0,0,0),l}return console.warn("The prefab don't exists.",t),null},r.prototype.createInstance=function(t,r){if(!this._raw)return null;var n=2===e.Application.playerMode,i=new e.Deserializer,o=i.deserialize(this._raw,r,n,t);return o&&n&&(o.extras.prefab||(o.extras.prefab=this)),o},r}(t);e.Prefab=r,__reflect(r.prototype,"paper.Prefab")}(paper||(paper={}));var egret3d;!function(e){var t=function(t){function r(){var r=t.call(this)||this;return r.a=e.Vector3.create(),r.b=e.Vector3.create(),r.c=e.Vector3.create(),r}return __extends(r,t),r.create=function(t,n,i){if(void 0===t&&(t=e.Vector3.ZERO),void 0===n&&(n=e.Vector3.ZERO),void 0===i&&(i=e.Vector3.ZERO),this._instances.length>0){var o=this._instances.pop().set(t,n,i);return o._released=!1,o}return(new r).set(t,n,i)},r.getNormal=function(t,r,n,i){i.subtract(r,n),i.cross(e.helpVector3A.subtract(t,r));var o=i.squaredLength;return o>0?i.multiplyScalar(1/Math.sqrt(o)):i.set(0,0,1)},r.prototype.serialize=function(){return[this.a.x,this.a.y,this.a.z,this.b.x,this.b.y,this.b.z,this.c.x,this.c.y,this.c.z]},r.prototype.deserialize=function(e){return this.fromArray(e)},r.prototype.copy=function(e){return this.set(e.a,e.b,e.c)},r.prototype.clone=function(){return r.create(this.a,this.b,this.c)},r.prototype.set=function(t,r,n){return void 0===t&&(t=e.Vector3.ZERO),void 0===r&&(r=e.Vector3.ZERO),void 0===n&&(n=e.Vector3.ZERO),this.a.copy(t),this.b.copy(r),this.c.copy(n),this},r.prototype.fromArray=function(e,t,r,n){void 0===t&&(t=0),void 0===r&&(r=-1),void 0===n&&(n=-1),this.a.fromArray(e,t),this.b.fromArray(e,r>=0?r:t+3),this.c.fromArray(e,n>=0?n:t+6)},r.prototype.getArea=function(){return e.helpVector3A.subtract(this.c,this.b),e.helpVector3B.subtract(this.a,this.b),.5*e.helpVector3A.cross(e.helpVector3B).length},r.prototype.getCenter=function(t){return t||(t=e.Vector3.create()),t.add(this.a,this.b).add(this.c).multiplyScalar(1/3)},r.prototype.getNormal=function(t){return t||(t=e.Vector3.create()),r.getNormal(this.a,this.b,this.c,t)},r.prototype.getClosestPointToPoint=function(t,r){r||(r=e.Vector3.create());var n,i,o=e.helpVector3A,a=e.helpVector3B,s=e.helpVector3C,l=e.helpVector3D,c=e.helpVector3E,u=e.helpVector3F,p=this.a,d=this.b,h=this.c;o.subtract(d,p),a.subtract(h,p),l.subtract(t,p);var f=o.dot(l),_=a.dot(l);if(0>=f&&0>=_)return r.copy(p);c.subtract(t,d);var m=o.dot(c),v=a.dot(c);if(m>=0&&m>=v)return r.copy(d);var g=f*v-m*_;if(0>=g&&f>=0&&0>=m)return n=f/(f-m),r.multiplyScalar(n,o).add(p);u.subtract(t,h);var y=o.dot(u),b=a.dot(u);if(b>=0&&b>=y)return r.copy(h);var x=y*_-f*b;if(0>=x&&_>=0&&0>=b)return i=_/(_-b),r.multiplyScalar(i,a).add(p);var T=m*b-y*v;if(0>=T&&v-m>=0&&y-b>=0)return s.subtract(h,d),i=(v-m)/(v-m+(y-b)),r.multiplyScalar(i,s).add(d);var C=1/(T+x+g);return n=x*C,i=g*C,r.add(p,a.multiplyScalar(i).add(o.multiplyScalar(n)))},r.prototype.raycast=function(t,r){var n=e.helpVector3A,i=e.helpVector3B,o=e.helpVector3C,a=e.helpVector3D,s=e.helpVector3E,l=this.a,c=this.b,u=this.c;n.subtract(c,l),i.subtract(u,l),o.cross(t.direction,i);var p=o.dot(n);if(0===p)return!1;var d=1/p;a.subtract(t.origin,l);var h=o.dot(a)*d;if(0>h||h>1)return!1;s.cross(a,n);var f=s.dot(t.direction)*d;return 0>f||h+f>1?!1:(r&&(r.textureCoordA.x=h,r.textureCoordA.y=f,t.getPointAt(r.distance=s.dot(i)*d,r.position),r.normal&&this.getNormal(r.normal)),!0)},r._instances=[],r}(paper.BaseRelease);e.Triangle=t,__reflect(t.prototype,"egret3d.Triangle",["paper.ICCS","paper.ISerializable","egret3d.IRaycast"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.buffers=[],e.config=null,e}return __extends(r,t),r._createConfig=function(){var e={version:"4",asset:{version:"2.0"},extensions:{},extensionsRequired:["paper"],extensionsUsed:["paper"]};return e},r.parseFromBinary=function(t){var r=0,n={config:{},buffers:[]};if(1179937895!==t[r++]||2!==t[r++])return void console.assert(!1,"Nonsupport glTF data.");if(t[r++]!==t.byteLength)return void console.assert(!1,"Error glTF data.");for(var i=0,o=0;r<t.length;){if(i=t[r++],o=t[r++],i%4&&console.assert(!1,"Error glTF data."),1313821514===o){var a=new Uint8Array(t.buffer,4*r+t.byteOffset,i/Uint8Array.BYTES_PER_ELEMENT),s=e.io.BinReader.utf8ArrayToString(a);n.config=JSON.parse(s)}else{if(5130562!==o)return void console.assert(!1,"Nonsupport glTF data.");var l=new Uint32Array(t.buffer,4*r+t.byteOffset,i/Uint32Array.BYTES_PER_ELEMENT);n.buffers.push(l)}r+=i/4}return n},r.createMeshConfig=function(){var e=this._createConfig();return e.buffers=[{byteLength:0}],e.bufferViews=[{buffer:0,byteOffset:0,byteLength:0,target:34962}],e.accessors=[],e.meshes=[{primitives:[{attributes:{}}],extensions:{paper:{}}}],e},r.createGLTFExtensionsConfig=function(){var e=this._createConfig();return e.materials=[],e.extensions={KHR_techniques_webgl:{shaders:[],techniques:[],programs:[]},paper:{}},e},r.createTechnique=function(t){var r={name:t.name,attributes:{},uniforms:{}};for(var n in t.attributes){var i=t.attributes[n];r.attributes[n]={semantic:i.semantic}}for(var n in t.uniforms){var o=t.uniforms[n],a=void 0;a=35678!==o.type||o.value?Array.isArray(o.value)?o.value?o.value.concat():[]:o.value?o.value:[]:e.DefaultTextures.WHITE;var s=r.uniforms[n]={type:o.type,value:a};o.semantic&&(s.semantic=o.semantic)}return r},r.copyTechniqueStates=function(e,t){if(e.enable&&e.enable.length>0&&(t||(t={}),t.enable=e.enable.concat()),e.functions)for(var r in e.functions)t||(t={}),t.functions||(t.functions={}),Array.isArray(e.functions[r])?t.functions[r]=e.functions[r].concat():t.functions[r]=e.functions[r];return t},r.prototype.dispose=function(){return t.prototype.dispose.call(this)?(this.buffers.length=0,this.config=null,!0):!1},r.prototype.caclByteLength=function(){return 0},r.prototype.createTypeArrayFromBufferView=function(e,t){var r=this.buffers[e.buffer],n=r.byteOffset+(e.byteOffset||0);switch(t){case 5120:return new Int8Array(r.buffer,n,e.byteLength/Int8Array.BYTES_PER_ELEMENT);case 5121:return new Uint8Array(r.buffer,n,e.byteLength/Uint8Array.BYTES_PER_ELEMENT);case 5122:return new Int16Array(r.buffer,n,e.byteLength/Int16Array.BYTES_PER_ELEMENT);case 5123:return new Uint16Array(r.buffer,n,e.byteLength/Uint16Array.BYTES_PER_ELEMENT);case 5124:return new Int32Array(r.buffer,n,e.byteLength/Int32Array.BYTES_PER_ELEMENT);case 5125:return new Uint32Array(r.buffer,n,e.byteLength/Uint32Array.BYTES_PER_ELEMENT);case 5126:return new Float32Array(r.buffer,n,e.byteLength/Float32Array.BYTES_PER_ELEMENT);default:throw new Error}},r.prototype.createTypeArrayFromAccessor=function(e,t,r){void 0===t&&(t=0),void 0===r&&(r=0);var n=this.getAccessorTypeCount(e.type),i=n*Math.min(e.count-t,r||e.count),o=this.getBufferView(e),a=this.buffers[o.buffer],s=a.byteOffset+(o.byteOffset||0)+(e.byteOffset||0);switch(t>0&&(s+=t*n*this.getComponentTypeCount(e.componentType)),e.componentType){case 5120:return new Int8Array(a.buffer,s,i);case 5121:return new Uint8Array(a.buffer,s,i);case 5122:return new Int16Array(a.buffer,s,i);case 5123:return new Uint16Array(a.buffer,s,i);case 5124:return new Int32Array(a.buffer,s,i);case 5125:return new Uint32Array(a.buffer,s,i);case 5126:return new Float32Array(a.buffer,s,i);default:throw new Error}},r.prototype.getComponentTypeCount=function(e){switch(e){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:return 4;case 5126:return 4;default:throw new Error}},r.prototype.getAccessorTypeCount=function(e){switch(e){case"SCALAR":return 1;case"VEC2":return 2;case"VEC3":return 3;case"VEC4":case"MAT2":return 4;case"MAT3":return 9;case"MAT4":return 16;default:throw new Error}},r.prototype.getMeshAttributeType=function(e){switch(e){case"POSITION":case"NORMAL":return"VEC3";case"TEXCOORD_0":case"TEXCOORD_1":return"VEC2";case"TANGENT":case"COLOR_0":case"COLOR_1":case"JOINTS_0":case"WEIGHTS_0":return"VEC4";default:throw new Error}},r.prototype.getBufferLength=function(e){return this.getAccessorTypeCount(e.type)*this.getComponentTypeCount(e.componentType)*e.count},r.prototype.getBufferOffset=function(e){var t=this.getBufferView(e);return(t.byteOffset||0)+(e.byteOffset||0)},r.prototype.getBuffer=function(e){var t=this.getBufferView(e);return this.buffers[t.buffer]},r.prototype.getBufferView=function(e){return this.config.bufferViews[e.bufferView||0]},r.prototype.getAccessor=function(e){return this.config.accessors[e]},r.prototype.getNode=function(e){return this.config.nodes[e]},r.prototype.getAnimationClip=function(e){if(!this.config.animations||0===this.config.animations.length)return null;var t=this.config.animations[0];if(0===t.extensions.paper.clips.length)return null;if(!e)return t.extensions.paper.clips[0];for(var r=0,n=this.config.animations;r<n.length;r++)for(var i=n[r],o=0,a=i.extensions.paper.clips;o<a.length;o++){var s=a[o];if(s.name===e)return s}return null},r}(paper.Asset);e.GLTFAsset=t,__reflect(t.prototype,"egret3d.GLTFAsset")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){var t=e.call(this)||this;return t.rawData=null,t.rawData=new Float32Array([1,0,0,0,1,0,0,0,1]),t}return __extends(t,e),t.create=function(){if(this._instances.length>0){var e=this._instances.pop().identity();return e._released=!1,e}return new t},t.prototype.serialize=function(){return this.rawData},t.prototype.deserialize=function(e){return this.fromArray(e)},t.prototype.copy=function(e){return this.fromArray(e.rawData),this},t.prototype.clone=function(){var e=new t;return e.copy(this),e},t.prototype.set=function(e,t,r,n,i,o,a,s,l){var c=this.rawData;return c[0]=e,c[1]=n,c[2]=a,c[3]=t,c[4]=i,c[5]=s,c[6]=r,c[7]=o,c[8]=l,this},t.prototype.identity=function(){var e=this.rawData;return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,this},t.prototype.fromArray=function(e,t){void 0===t&&(t=0);for(var r=0;9>r;++r)this.rawData[r]=e[r+t];return this},t.prototype.fromBuffer=function(e,t){return void 0===t&&(t=0),this.rawData=new Float32Array(e,t,9),this},t.prototype.fromScale=function(e){var t=this.rawData;return t[0]=e.x,t[1]=0,t[2]=0,t[3]=0,t[4]=e.y,t[5]=0,t[6]=0,t[7]=0,t[8]=e.z,this},t.prototype.fromUVTransform=function(e,t,r,n,i,o,a){var s=Math.cos(i),l=Math.sin(i);return this.set(r*s,r*l,-r*(s*o+l*a)+o+e,-n*l,n*s,-n*(-l*o+s*a)+a+t,0,0,1)},t.prototype.fromMatrix4=function(e){var t=e.rawData;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},t.prototype.inverse=function(e){e||(e=this);var t=e.rawData,r=this.rawData,n=t[0],i=t[1],o=t[2],a=t[3],s=t[4],l=t[5],c=t[6],u=t[7],p=t[8],d=p*s-l*u,h=l*c-p*a,f=u*a-s*c,_=n*d+i*h+o*f;if(0===_)return this.identity();var m=1/_;return r[0]=d*m,r[1]=(o*u-p*i)*m,r[2]=(l*i-o*s)*m,r[3]=h*m,r[4]=(p*n-o*c)*m,r[5]=(o*a-l*n)*m,r[6]=f*m,r[7]=(i*c-u*n)*m,r[8]=(s*n-i*a)*m,this},t.prototype.getNormalMatrix=function(e){return this.fromMatrix4(e).inverse().transpose()},t.prototype.transpose=function(){var e=0,t=this.rawData;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},t.prototype.multiply=function(e,t){t||(t=e,e=this);var r=e.rawData,n=t.rawData,i=this.rawData,o=r[0],a=r[3],s=r[6],l=r[1],c=r[4],u=r[7],p=r[2],d=r[5],h=r[8],f=n[0],_=n[3],m=n[6],v=n[1],g=n[4],y=n[7],b=n[2],x=n[5],T=n[8];return i[0]=o*f+a*v+s*b,i[3]=o*_+a*g+s*x,i[6]=o*m+a*y+s*T,i[1]=l*f+c*v+u*b,i[4]=l*_+c*g+u*x,i[7]=l*m+c*y+u*T,i[2]=p*f+d*v+h*b,i[5]=p*_+d*g+h*x,i[8]=p*m+d*y+h*T,this},t.prototype.premultiply=function(e){return this.multiply(e,this)},t.prototype.toArray=function(e,t){void 0===t&&(t=0),e||(e=[]);for(var r=0;9>r;++r)e[r+t]=this.rawData[r];return e},Object.defineProperty(t.prototype,"determinant",{get:function(){var e=this.rawData,t=e[0],r=e[1],n=e[2],i=e[3],o=e[4],a=e[5],s=e[6],l=e[7],c=e[8];return t*o*c-t*a*l-r*i*c+r*a*s+n*i*l-n*o*s},enumerable:!0,configurable:!0}),t.IDENTITY=new t,t._instances=[],t}(paper.BaseRelease);e.Matrix3=t,__reflect(t.prototype,"egret3d.Matrix3",["paper.ICCS","paper.ISerializable"]),e.helpMatrix3A=t.create()}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.caclByteLength=function(){return 0},t}(paper.Asset);e.Texture=t,__reflect(t.prototype,"egret3d.Texture")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){var t=e.call(this)||this;return t.r=1,t.g=1,t.b=1,t.a=1,t}return __extends(t,e),t.create=function(e,r,n,i){if(void 0===e&&(e=1),void 0===r&&(r=1),void 0===n&&(n=1),void 0===i&&(i=1),this._instances.length>0){var o=this._instances.pop().set(e,r,n,i);return o._released=!1,o}return(new t).set(e,r,n,i)},t.prototype.serialize=function(){return[this.r,this.g,this.b,this.a]},t.prototype.deserialize=function(e){return this.fromArray(e)},t.prototype.clone=function(){return t.create(this.r,this.g,this.b,this.a)},t.prototype.copy=function(e){return this.set(e.r,e.g,e.b,e.a)},t.prototype.set=function(e,t,r,n){return this.r=e,this.g=t,this.b=r,void 0!==n&&(this.a=n),this},t.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.r=e[0+t],this.g=e[1+t],this.b=e[2+t],this.a=e[3+t],this},t.prototype.fromHex=function(e){return this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},t.prototype.multiply=function(e,t){return t||(t=e),e=this,this.r=e.r*t.r,this.g=e.g*t.g,this.b=e.b*t.b,this.a=e.a*t.a,this},t.prototype.scale=function(e,t){return t||(t=this),this.r=t.r*e,this.g=t.g*e,this.b=t.b*e,this.a=t.a*e,this},t.prototype.lerp=function(e,t,r){return r||(r=t,t=this),this.r=e*(r.r-t.r)+t.r,this.g=e*(r.g-t.g)+t.g,this.b=e*(r.b-t.b)+t.b,this.a=e*(r.a-t.a)+t.a,this},t.ZERO=(new t).set(0,0,0,0),t.BLACK=(new t).set(0,0,0,1),t.GRAY=(new t).set(.5,.5,.5,1),t.WHITE=(new t).set(1,1,1,1),t.RED=(new t).set(1,0,0,1),t.GREEN=(new t).set(0,1,0,1),t.BLUE=(new t).set(0,0,1,1),t.YELLOW=(new t).set(1,1,0,1),t.INDIGO=(new t).set(0,1,1,1),t.PURPLE=(new t).set(1,0,1,1),t._instances=[],t}(paper.BaseRelease);e.Color=t,__reflect(t.prototype,"egret3d.Color",["egret3d.IColor","paper.ICCS","paper.ISerializable"])}(egret3d||(egret3d={}));var paper;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype.createInstance=function(t){if(void 0===t&&(t=!1),!this._raw)return null;var r=(2===e.Application.playerMode,new e.Deserializer),n=r.deserialize(this._raw,t);return n},r}(e.BasePrefabAsset);e.RawScene=t,__reflect(t.prototype,"paper.RawScene")}(paper||(paper={}));var paper;!function(e){var t=function(){function t(){this._preSystems=[],this._systems=[]}return t.getInstance=function(){return this._instance||(this._instance=new t),this._instance},t.prototype._getSystemInsertIndex=function(e){var t=-1,r=this._systems.length;if(r>0){if(e<this._systems[0].order)return 0;if(e>=this._systems[r-1].order)return r}for(var n=0;r-1>n;++n)if(this._systems[n].order<=e&&e<this._systems[n+1].order){t=n+1;break}return 0>t?this._systems.length:t},t.prototype._checkRegister=function(e){var t=this.getSystem(e);return t?(console.warn("The system has been registered.",egret.getQualifiedClassName(e)),t):t},t.prototype._preRegisterSystems=function(){this._preSystems.sort(function(e,t){return e.order-t.order});for(var e=0,t=this._preSystems;e<t.length;e++){var r=t[e];this.register(r.systemClass,r.order)}this._preSystems.length=0},t.prototype.update=function(){for(var e=0,t=this._systems;e<t.length;e++){var r=t[e];r&&r.enabled&&!r._started&&(r._started=!0,r.onStart&&r.onStart())}for(var n=0,i=this._systems;n<i.length;n++){var r=i[n];r&&r.update()}for(var o=0,a=this._systems;o<a.length;o++){var r=a[o];r&&r.lateUpdate()}},t.prototype.preRegister=function(e,t){return void 0===t&&(t=4e3),this._systems.length>0?(this.register(e,t),this):(this._preSystems.unshift({systemClass:e,order:t}),this)},t.prototype.register=function(t,r,n){void 0===r&&(r=4e3);var i=this._checkRegister(t);return i?i:(i=e.BaseSystem.create(t,r),this._systems.splice(this._getSystemInsertIndex(r),0,i),i.initialize(n),i)},t.prototype.getSystem=function(e){for(var t=0,r=this._systems;t<r.length;t++){var n=r[t];if(n&&n.constructor===e)return n}return null},t.prototype.getOrRegisterSystem=function(e,t){void 0===t&&(t=4e3);var r=this.getSystem(e);return r||(r=this.register(e,t)),r},Object.defineProperty(t.prototype,"systems",{get:function(){return this._systems},enumerable:!0,configurable:!0}),t._instance=null,t}();e.SystemManager=t,__reflect(t.prototype,"paper.SystemManager")}(paper||(paper={}));var paper;!function(e){var t=function(){function t(){this._scenes=[],this._globalScene=null,this._editorScene=null}return t.getInstance=function(){return this._instance||(this._instance=new t),this._instance},t.prototype.addScene=function(e,t){this._scenes.indexOf(e)>=0&&console.warn("Add the scene again.",e.name),t?this._scenes.unshift(e):this._scenes.push(e)},t.prototype.removeScene=function(e){if(e===this._globalScene||e===this._editorScene)return console.warn("Cannot dispose global scene."),!1;var t=this._scenes.indexOf(e);return 0>t?(console.warn("Remove scene error.",e.name),!1):(this._scenes.splice(t,1),!0)},t.prototype.unloadAllScene=function(e){for(var t=this._scenes.length;t--;){var r=this._scenes[t];e&&e.indexOf(r)>=0||r.destroy()}},t.prototype.getScene=function(e){for(var t=0,r=this._scenes;t<r.length;t++){var n=r[t];if(n.name===e)return n}return null},Object.defineProperty(t.prototype,"scenes",{get:function(){return this._scenes},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"globalScene",{get:function(){return this._globalScene||(this._globalScene=e.Scene.createEmpty("Global",!1),this._scenes.pop()),this._globalScene},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"editorScene",{get:function(){return this._editorScene||(this._editorScene=e.Scene.createEmpty("Editor Only",!1),this._scenes.pop()),this._editorScene},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"activeScene",{get:function(){return 0===this._scenes.length&&e.Scene.createEmpty(),this._scenes[0]},set:function(e){if(!(this._scenes.length<=1||this._scenes[0]===e||this._globalScene===e)){var t=this._scenes.indexOf(e);0>t&&console.warn("Active scene error.",e.name),this._scenes.splice(t,1),this._scenes.unshift(e)}},enumerable:!0,configurable:!0}),t.prototype.createScene=function(t,r){return void 0===r&&(r=!0),e.Scene.createEmpty(t,r)},t.prototype.loadScene=function(t,r){return void 0===r&&(r=!0),e.Scene.create(t,r)},t.prototype.unloadScene=function(e){e.destroy()},t.prototype.getActiveScene=function(){return this.activeScene},t._instance=null,t}();e.SceneManager=t,__reflect(t.prototype,"paper.SceneManager")}(paper||(paper={}));var egret3d;!function(e){var t=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return __extends(n,t),n.create=function(e,t,r,i){if(void 0===e&&(e=0),void 0===t&&(t=0),void 0===r&&(r=0),void 0===i&&(i=1),this._instances.length>0){var o=this._instances.pop().set(e,t,r,i);return o._released=!1,o}return(new n).set(e,t,r,i)},n.prototype.clone=function(){return n.create(this.x,this.y,this.z,this.w)},n.prototype.fromMatrix=function(e){var t=e.rawData,r=t[0],n=t[4],i=t[8],o=t[1],a=t[5],s=t[9],l=t[2],c=t[6],u=t[10],p=r+a+u,d=0;return p>0?(d=.5/Math.sqrt(p+1),this.w=.25/d,this.x=(c-s)*d,this.y=(i-l)*d,this.z=(o-n)*d):r>a&&r>u?(d=2*Math.sqrt(1+r-a-u),this.w=(c-s)/d,this.x=.25*d,this.y=(n+o)/d,this.z=(i+l)/d):a>u?(d=2*Math.sqrt(1+a-r-u),this.w=(i-l)/d,this.x=(n+o)/d,this.y=.25*d,this.z=(s+c)/d):(d=2*Math.sqrt(1+u-r-a),this.w=(o-n)/d,this.x=(i+l)/d,this.y=(s+c)/d,this.z=.25*d),this},n.prototype.fromEuler=function(e,t){void 0===t&&(t=2);var r=e.x,n=e.y,i=e.z,o=Math.cos,a=Math.sin,s=o(.5*r),l=o(.5*n),c=o(.5*i),u=a(.5*r),p=a(.5*n),d=a(.5*i);switch(t){case 0:this.x=u*l*c+s*p*d,this.y=s*p*c-u*l*d,this.z=s*l*d+u*p*c,this.w=s*l*c-u*p*d;break;case 1:this.x=u*l*c-s*p*d,this.y=s*p*c-u*l*d,this.z=s*l*d+u*p*c,this.w=s*l*c+u*p*d;break;case 2:this.x=u*l*c+s*p*d,this.y=s*p*c-u*l*d,this.z=s*l*d-u*p*c,this.w=s*l*c+u*p*d;break;case 3:this.x=u*l*c+s*p*d,this.y=s*p*c+u*l*d,this.z=s*l*d-u*p*c,this.w=s*l*c-u*p*d;break;case 4:this.x=u*l*c-s*p*d,this.y=s*p*c+u*l*d,this.z=s*l*d+u*p*c,this.w=s*l*c-u*p*d;break;case 5:this.x=u*l*c-s*p*d,this.y=s*p*c+u*l*d,this.z=s*l*d-u*p*c,this.w=s*l*c+u*p*d}return this},n.prototype.fromAxis=function(e,t){var r=.5*t,n=Math.sin(r);return this.x=e.x*n,this.y=e.y*n,this.z=e.z*n,this.w=Math.cos(r),this},n.prototype.fromVectors=function(t,r){var n=t.dot(r)+1,i=e.helpVector3A;return 2.220446049250313e-16>n?(n=0,Math.abs(t.x)>Math.abs(t.z)?i.set(-t.y,t.x,0):i.set(0,-t.z,t.y)):i.cross(t,r),this.x=i.x,this.y=i.y,this.z=i.z,this.w=n,this.normalize()},n.prototype.multiply=function(e,t){t||(t=e,e=this);var r=e.x,n=e.y,i=e.z,o=e.w,a=t.x,s=t.y,l=t.z,c=t.w;return this.x=r*c+o*a+n*l-i*s,this.y=n*c+o*s+i*a-r*l,this.z=i*c+o*l+r*s-n*a,this.w=o*c-r*a-n*s-i*l,this},n.prototype.premultiply=function(e){return this.multiply(e,this)},n.prototype.lerp=function(e,t,r){if("number"==typeof e)if(r){var n=e;e=t,t=r,r=n}else r=e,e=this;else"number"==typeof t&&(r=t,t=e,e=this);var i=e.x,o=e.y,a=e.z,s=e.w,l=t.x,c=t.y,u=t.z,p=t.w;return 0>i*l+o*c+a*u+s*p?(this.x=i+(-l-i)*r,this.y=o+(-c-o)*r,this.z=a+(-u-a)*r,this.w=s+(-p-s)*r):(this.x=i+(l-i)*r,this.y=o+(c-o)*r,this.z=a+(u-a)*r,this.w=s+(p-s)*r),this.normalize()},n.prototype.slerp=function(e,t,r){if("number"==typeof e)if(r){var n=e;e=t,t=r,r=n}else r=e,e=this;else"number"==typeof t&&(r=t,t=e,e=this);if(0===e)return this.copy(t);if(1===e)return this.copy(r);var i=e.x,o=e.y,a=e.z,s=e.w,l=t.x,c=t.y,u=t.z,p=t.w,d=s*p+i*l+o*c+a*u;if(0>d?(this.w=-p,this.x=-l,this.y=-c,this.z=-u,d=-d):(this.w=p,this.x=l,this.y=c,this.z=u),d>=1)return this.w=s,this.x=i,this.y=o,this.z=a,this;var h=1-d*d;if(2.220446049250313e-16>h)return this.lerp(e,this);var f=Math.sqrt(h),_=Math.atan2(f,d),m=Math.sin((1-e)*_)/f,v=Math.sin(e*_)/f;return this.w=s*m+this.w*v,this.x=i*m+this.x*v,this.y=o*m+this.y*v,this.z=a*m+this.z*v,this},n.prototype.lookAt=function(t,r,n){return this.fromMatrix(e.helpMatrixA.lookAt(t,r,n))},n.prototype.lookRotation=function(t,r){return this.fromMatrix(e.helpMatrixA.lookRotation(t,r))},n.prototype.getAngle=function(t){return 2*Math.acos(Math.abs(e.math.clamp(this.dot(t),-1,1)))},n.prototype.toEuler=function(t,n){return void 0===n&&(n=2),t||(t=e.Vector3.create()),r.fromRotation(this).toEuler(t,n)},n.IDENTITY=new n,n._instances=[],n}(e.Vector4);e.Quaternion=t,__reflect(t.prototype,"egret3d.Quaternion");var r=e.Matrix4.create()}(egret3d||(egret3d={}));var paper;!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.__isSingleton=!0,t}(e.BaseComponent);e.SingletonComponent=t,__reflect(t.prototype,"paper.SingletonComponent")}(paper||(paper={}));var egret3d;!function(e){var t=[e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create()],r=function(r){function n(){var t=r.call(this)||this;return t._dirtyRadius=!0,t._dirtyCenter=!0,t._dirtySize=!0,t._boundingSphereRadius=0,t._minimum=e.Vector3.create(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t._maximum=e.Vector3.create(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),t._center=e.Vector3.create(),t._size=e.Vector3.create(),t}return __extends(n,r),n.create=function(e,t){if(void 0===e&&(e=null),void 0===t&&(t=null),this._instances.length>0){var r=this._instances.pop().set(e,t);return r._released=!1,r}return(new n).set(e,t)},n.prototype.serialize=function(){return[this._minimum.x,this._minimum.y,this._minimum.z,this._maximum.x,this._maximum.y,this._maximum.z]},n.prototype.deserialize=function(e){return this.fromArray(e)},n.prototype.clone=function(){return n.create(this.minimum,this.maximum)},n.prototype.copy=function(e){return this.set(e.minimum,e.maximum)},n.prototype.clear=function(){return this._minimum.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._maximum.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),this._dirtyCenter=!0,this._dirtyRadius=!0,this._dirtySize=!0,this},n.prototype.set=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=null),e&&e!==this._minimum&&this._minimum.copy(e),t&&t!==this._maximum&&this._maximum.copy(t),this._dirtyCenter=!0,this._dirtyRadius=!0,this._dirtySize=!0,this},n.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this._minimum.fromArray(e,t),this._maximum.fromArray(e,t+3),this._dirtyCenter=!0,this._dirtyRadius=!0,this._dirtySize=!0,this},n.prototype.fromPoints=function(e){this.clear();for(var t=0,r=e;t<r.length;t++){var n=r[t];this.add(n)}return this},n.prototype.applyMatrix=function(e,r){if(r||(r=this),r.isEmpty)return r!==this&&this.copy(r),this;var n=r.minimum,i=r.maximum;return t[0].set(n.x,n.y,n.z).applyMatrix(e),t[1].set(n.x,n.y,i.z).applyMatrix(e),t[2].set(n.x,i.y,n.z).applyMatrix(e),t[3].set(n.x,i.y,i.z).applyMatrix(e),t[4].set(i.x,n.y,n.z).applyMatrix(e),t[5].set(i.x,n.y,i.z).applyMatrix(e),t[6].set(i.x,i.y,n.z).applyMatrix(e),t[7].set(i.x,i.y,i.z).applyMatrix(e),this.fromPoints(t),this},n.prototype.add=function(e,t){t||(t=this);var r=t.minimum,i=t.maximum;return e instanceof n?(this._minimum.min(e._minimum,r),this._maximum.max(e._maximum,i)):(this._minimum.min(e,r),this._maximum.max(e,i)),this._dirtyRadius=!0,this._dirtyCenter=!0,this._dirtySize=!0,this},n.prototype.expand=function(e,t){t||(t=this);var r=t.minimum,n=t.maximum;return"number"==typeof e?(this._minimum.addScalar(-e,r),this._maximum.addScalar(e,n)):(this._minimum.subtract(e,r),this._maximum.add(e,n)),this._dirtyRadius=!0,this._dirtyCenter=!0,this._dirtySize=!0,this},n.prototype.translate=function(e,t){t||(t=this);var r=t.minimum,n=t.maximum;return"number"==typeof e?(this._minimum.addScalar(e,r),this._maximum.addScalar(e,n)):(this._minimum.add(e,r),this._maximum.add(e,n)),this._dirtyRadius=!0,this._dirtyCenter=!0,this._dirtySize=!0,this},n.prototype.getClosestPointToPoint=function(t,r){return r||(r=e.Vector3.create()),r.clamp(this._minimum,this._maximum,t)},n.prototype.getDistance=function(t){return e.helpVector3A.clamp(this._minimum,this._maximum,t).subtract(t).length},n.prototype.contains=function(e){var t=this._minimum,r=this._maximum;if(e instanceof n){var i=e.minimum,o=e.maximum;return t.x<=i.x&&o.x<=r.x&&t.y<=i.y&&o.y<=r.y&&t.z<=i.z&&o.z<=r.z}return e.x>t.x&&e.x<r.x&&e.y>t.y&&e.y<r.y&&e.z>t.z&&e.z<r.z
},n.prototype.raycast=function(e,t){var r,n,i,o,a,s,l=0,c=e.origin,u=e.direction,p=this.minimum,d=this.maximum,h=1/u.x,f=1/u.y,_=1/u.z;if(h>=0?(r=(p.x-c.x)*h,n=(d.x-c.x)*h):(r=(d.x-c.x)*h,n=(p.x-c.x)*h),f>=0?(i=(p.y-c.y)*f,o=(d.y-c.y)*f):(i=(d.y-c.y)*f,o=(p.y-c.y)*f),r>o||i>n)return!1;if((i>r||r!==r)&&(r=i,l=1),(n>o||n!==n)&&(n=o),_>=0?(a=(p.z-c.z)*_,s=(d.z-c.z)*_):(a=(d.z-c.z)*_,s=(p.z-c.z)*_),r>s||a>n)return!1;if((a>r||r!==r)&&(r=a,l=2),(n>s||n!==n)&&(n=s),0>n)return!1;if(t){var m=t.normal;if(e.getPointAt(t.distance=r>=0?r:n,t.position),m)switch(l){case 0:m.set(h>0?-1:1,0,0);break;case 1:m.set(0,f>0?-1:1,0);break;case 2:m.set(0,0,_>0?-1:1)}}return!0},Object.defineProperty(n.prototype,"isEmpty",{get:function(){return this._maximum.x<this._minimum.x||this._maximum.y<this._minimum.y||this._maximum.z<this._minimum.z},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"boundingSphereRadius",{get:function(){return this._dirtyRadius&&(e.helpVector3A.subtract(this._maximum,this._minimum).multiplyScalar(.5),this._boundingSphereRadius=e.helpVector3A.length,this._dirtyRadius=!1),this._boundingSphereRadius},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"minimum",{get:function(){return this._minimum},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"maximum",{get:function(){return this._maximum},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"size",{get:function(){return this._dirtySize&&(this._size.subtract(this._maximum,this._minimum),this._dirtySize=!1),this._size},set:function(t){var r=this.center,n=this._size.copy(t),i=e.helpVector3A.copy(n).multiplyScalar(.5);this._minimum.copy(r).subtract(i),this._maximum.copy(r).add(i),this._dirtyRadius=!0},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"center",{get:function(){return this._dirtyCenter&&(this._center.add(this._maximum,this._minimum).multiplyScalar(.5),this._dirtyCenter=!1),this._center},set:function(t){var r=this.size,n=this._center.copy(t),i=e.helpVector3A.copy(r).multiplyScalar(.5);this._minimum.copy(n).subtract(i),this._maximum.copy(n).add(i)},enumerable:!0,configurable:!0}),n.ONE=(new n).set(e.Vector3.MINUS_ONE.clone().multiplyScalar(.5),e.Vector3.ONE.clone().multiplyScalar(.5)),n._instances=[],__decorate([paper.editor.property("VECTOR3",{minimum:0})],n.prototype,"size",null),__decorate([paper.editor.property("VECTOR3")],n.prototype,"center",null),n}(paper.BaseRelease);e.Box=r,__reflect(r.prototype,"egret3d.Box",["paper.ICCS","paper.ISerializable","egret3d.IRaycast"]),e.helpAABBA=r.create()}(egret3d||(egret3d={}));var paper;!function(e){var t=!1,r=function(){function r(r){if(void 0===r&&(r=-1),this.order=-1,this.deltaTime=0,this._started=!0,this._locked=!1,this._enabled=!0,this._startTime=0,this._interests=[],this._groups=[],this._clock=e.GameObject.globalGameObject.getOrAddComponent(e.Clock),!t)throw new Error("Create an instance of a system is not allowed.");t=!1,this.order=r}return r.create=function(e,r){return t=!0,new e(r)},r.prototype.initialize=function(t){if(this._interests.length>0){var r=void 0;r=Array.isArray(this._interests[0])?this._interests:[this._interests];for(var n=0,i=r;n<i.length;n++){for(var o=i[n],a=0,s=o;a<s.length;a++){var l=s[a];if(l.listeners)for(var c=0,u=l.listeners;c<u.length;c++){var p=u[c];p.type.add(p.listener,this)}}this._groups.push(e.GameObjectGroup.create(o))}}this.onAwake&&this.onAwake(t),this.onEnable&&this.onEnable()},r.prototype.uninitialize=function(){if(this.onDestroy&&this.onDestroy(),this._interests.length>0){var e=void 0;e=Array.isArray(this._interests[0])?this._interests:[this._interests];for(var t=0,r=e;t<r.length;t++)for(var n=r[t],i=0,o=n;i<o.length;i++){var a=o[i];if(a.listeners)for(var s=0,l=a.listeners;s<l.length;s++){var c=l[s];c.type.remove(c.listener)}}}},r.prototype.update=function(){if(this._enabled&&this._started){this._locked=!0;for(var e=0,t=this._groups;e<t.length;e++){var r=t[e];if(this.onAddGameObject)for(var n=0,i=r._addedGameObjects;n<i.length;n++){var o=i[n];o&&this.onAddGameObject(o,r)}if(this.onAddComponent)for(var a=0,s=r._addedComponents;a<s.length;a++){var l=s[a];l&&this.onAddComponent(l,r)}}this.onUpdate&&this.onUpdate(this._clock.deltaTime),this._locked=!1}},r.prototype.lateUpdate=function(){this._enabled&&this._started&&(this._locked=!0,this.onLateUpdate&&this.onLateUpdate(this._clock.deltaTime),this._locked=!1)},Object.defineProperty(r.prototype,"enabled",{get:function(){return this._enabled},set:function(e){return this._locked?void console.warn("Cannot change the enabled value when the system is updating.",egret.getQualifiedClassName(this)):void(this._enabled!==e&&(this._enabled=e,this._enabled?this.onEnable&&this.onEnable():this.onDisable&&this.onDisable()))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"groups",{get:function(){return this._groups},enumerable:!0,configurable:!0}),r}();e.BaseSystem=r,__reflect(r.prototype,"paper.BaseSystem")}(paper||(paper={}));var egret3d;!function(e){function t(e){return 0===e||e!==e?e:e>0?1:-1}function r(e,t,r,n,i){var o=e.x,a=e.y,s=e.z,l=t.x,c=t.y,u=t.z,p=r.x,d=r.y,h=r.z,f=n.x,_=n.y,m=n.z,v=p*o+d*a+h*s;if(0===v)return null;var g=((l-f)*o+(c-_)*a+(u-m)*s)/v;return i.x=f+p*g,i.y=_+d*g,i.z=m+h*g,i}function n(){}function i(t){for(var r=e.helpVector3A,n=e.helpVector3B,i=e.helpVector3C,o=e.helpVector3H,a=e.helpVector3A,s=0,l=t.length-3;l>=s;s+=3){a.fromArray(t,s);var c=o.x*Math.abs(a.x)+o.y*Math.abs(a.y)+o.z*Math.abs(a.z),u=r.dot(a),p=n.dot(a),d=i.dot(a);if(Math.max(-Math.max(u,p,d),Math.min(u,p,d))>c)return!1}return!0}function o(t,r){if(r.isEmpty)return!1;var n=e.helpVector3A,o=e.helpVector3B,a=e.helpVector3C,s=e.helpVector3D,l=e.helpVector3E,c=e.helpVector3F,u=e.helpVector3G,p=e.helpVector3H;p.subtract(r.maximum,r.center),n.subtract(t.a,u),o.subtract(t.b,u),a.subtract(t.c,u),s.subtract(o,n),l.subtract(a,o),c.subtract(n,a);var d=[0,-s.z,s.y,0,-l.z,l.y,0,-c.z,c.y,s.z,0,-s.x,l.z,0,-l.x,c.z,0,-c.x,-s.y,s.x,0,-l.y,l.x,0,-c.y,c.x,0];return i(d)?(d=[1,0,0,0,1,0,0,0,1],i(d)?(e.helpVector3A.cross(s,l),d=[e.helpVector3A.x,e.helpVector3A.y,e.helpVector3A.z],i(d)):!1):!1}function a(e,t){var r,n,i=t.minimum,o=t.maximum;return e.normal.x>0?(r=e.normal.x*i.x,n=e.normal.x*o.x):(r=e.normal.x*o.x,n=e.normal.x*i.x),e.normal.y>0?(r+=e.normal.y*i.y,n+=e.normal.y*o.y):(r+=e.normal.y*o.y,n+=e.normal.y*i.y),e.normal.z>0?(r+=e.normal.z*i.z,n+=e.normal.z*o.z):(r+=e.normal.z*o.z,n+=e.normal.z*i.z),r<=e.constant&&n>=e.constant}function s(e,t){return Math.abs(e.getDistance(t.center))<=t.radius}function l(t,r){return e.helpVector3A.copy(r.center).clamp(t.minimum,t.maximum),e.helpVector3A.getSquaredDistance(r.center)<=r.radius*r.radius}function c(e,t){var r=e.minimum,n=e.maximum,i=t.minimum,o=t.maximum;return n.x<i.x||r.x>o.x||n.y<i.y||r.y>o.y||n.z<i.z||r.z>o.z?!1:!0}function u(e,t){var r=e.radius+t.radius;return e.center.getSquaredDistance(t.center)<=r*r}function p(e){return 0===(e&e-1)&&0!==e}var d;!function(e){function t(e,t){return(e%t+t)%t}function r(e,t,r){return void 0===t&&(t=0),void 0===r&&(r=1),t>e?t:e>r?r:e}function n(e,t,r){return e+(t-e)*r}e.euclideanModulo=t,e.clamp=r,e.lerp=n}(d=e.math||(e.math={}));var h;!function(e){e[e.RAD_DEG=57.29577951308232]="RAD_DEG",e[e.DEG_RAD=.017453292519943295]="DEG_RAD",e[e.EPSILON=2.220446049250313e-16]="EPSILON"}(h=e.Const||(e.Const={})),e.sign=t,e.calPlaneLineIntersectPoint=r,e.triangleIntersectsPlane=n,e.triangleIntersectsAABB=o,e.planeIntersectsAABB=a,e.planeIntersectsSphere=s,e.aabbIntersectsSphere=l,e.aabbIntersectsAABB=c,e.sphereIntersectsSphere=u,e.isPowerOfTwo=p}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.cullingMask=16777215,r.intensity=1,r.color=e.Color.create(1,1,1,1),r.castShadows=!1,r.shadow=e.LightShadow.create(),r}return __extends(r,t),__decorate([paper.serializedField],r.prototype,"cullingMask",void 0),__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:0})],r.prototype,"intensity",void 0),__decorate([paper.serializedField,paper.editor.property("COLOR")],r.prototype,"color",void 0),__decorate([paper.serializedField,paper.editor.property("CHECKBOX")],r.prototype,"castShadows",void 0),__decorate([paper.serializedField,paper.editor.property("NESTED")],r.prototype,"shadow",void 0),r}(paper.BaseComponent);e.BaseLight=t,__reflect(t.prototype,"egret3d.BaseLight")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype.recalculateLocalBox=function(){this._localBoundingBox.clear();var t=this.gameObject.getComponent(e.MeshFilter);if(t&&t.mesh)for(var r=t.mesh.getVertices(),n=e.helpVector3A,i=0,o=r.length;o>i;i+=3)n.set(r[i],r[i+1],r[i+2]),this._localBoundingBox.add(n)},r.prototype.raycast=function(t,r,n){var i=this.gameObject.getComponent(e.MeshFilter);if(!i||!i.enabled||!i.mesh)return!1;var o=!1,a=void 0,s=this.gameObject.transform,l=s.worldToLocalMatrix,c=e.helpRay.applyMatrix(l,t),u=this.localBoundingBox;if(r&&(r===!0?o=!0:(o=n||!1,a=r)),o?u.raycast(c)&&i.mesh.raycast(c,a):u.raycast(c,a)){if(a){var p=s.localToWorldMatrix;a.position.applyMatrix(p),a.distance=t.origin.getDistance(a.position);var d=a.normal;d&&d.applyMatrix3(e.helpMatrix3A.fromMatrix4(l).transpose()).normalize()}return!0}return!1},r}(paper.BaseRenderer);e.MeshRenderer=t,__reflect(t.prototype,"egret3d.MeshRenderer")}(egret3d||(egret3d={}));var paper;!function(e){var t;!function(e){e[e.None=0]="None",e[e.NotEditable=1]="NotEditable",e[e.Hide=2]="Hide",e[e.HideAndDontSave=3]="HideAndDontSave"}(t=e.HideFlags||(e.HideFlags={}));var r;!function(e){e.NoName="NoName",e.Global="Global",e.MainCamera="Main Camera",e.EditorCamera="Editor Camera",e.EditorOnly="Editor Only",e.MissingPrefab="Missing Prefab"}(r=e.DefaultNames||(e.DefaultNames={}));var n;!function(e){e.Untagged="",e.Respawn="Respawn",e.Finish="Finish",e.EditorOnly="EditorOnly",e.MainCamera="MainCamera",e.Player="Player",e.GameController="GameController",e.Global="Global"}(n=e.DefaultTags||(e.DefaultTags={}));var i;!function(e){e[e.Begin=0]="Begin",e[e.Enable=1e3]="Enable",e[e.Start=2e3]="Start",e[e.FixedUpdate=3e3]="FixedUpdate",e[e.Update=4e3]="Update",e[e.Animation=5e3]="Animation",e[e.LaterUpdate=6e3]="LaterUpdate",e[e.Renderer=7e3]="Renderer",e[e.Draw=8e3]="Draw",e[e.Disable=9e3]="Disable",e[e.End=1e4]="End"}(i=e.SystemOrder||(e.SystemOrder={}));var o;!function(e){e[e.Background=1e3]="Background",e[e.Geometry=2e3]="Geometry",e[e.AlphaTest=2450]="AlphaTest",e[e.Transparent=3e3]="Transparent",e[e.Overlay=4e3]="Overlay"}(o=e.RenderQueue||(e.RenderQueue={}));var a;!function(e){e[e.Default=2]="Default",e[e.UI=4]="UI",e[e.UserLayer1=8]="UserLayer1",e[e.UserLayer2=16]="UserLayer2",e[e.UserLayer3=32]="UserLayer3",e[e.UserLayer4=64]="UserLayer4",e[e.UserLayer5=128]="UserLayer5",e[e.UserLayer6=240]="UserLayer6",e[e.UserLayer7=256]="UserLayer7",e[e.UserLayer8=512]="UserLayer8",e[e.UserLayer9=1024]="UserLayer9",e[e.UserLayer10=2048]="UserLayer10",e[e.UserLayer11=3840]="UserLayer11",e[e.UserLayer12=4096]="UserLayer12",e[e.UserLayer13=8192]="UserLayer13",e[e.UserLayer14=16384]="UserLayer14",e[e.UserLayer15=32768]="UserLayer15",e[e.UserLayer16=61440]="UserLayer16",e[e.UserLayer17=65536]="UserLayer17",e[e.UserLayer18=131072]="UserLayer18",e[e.UserLayer19=262144]="UserLayer19",e[e.UserLayer20=524288]="UserLayer20",e[e.UserLayer21=983040]="UserLayer21",e[e.UserLayer22=1048576]="UserLayer22",e[e.UserLayer23=2097152]="UserLayer23",e[e.UserLayer24=4194304]="UserLayer24",e[e.UserLayer25=8388608]="UserLayer25",e[e.UserLayer26=15728640]="UserLayer26"}(a=e.Layer||(e.Layer={}));var s;!function(e){e[e.Everything=16777215]="Everything",e[e.Nothing=1]="Nothing",e[e.Default=2]="Default",e[e.UI=4]="UI",e[e.UserLayer1=8]="UserLayer1",e[e.UserLayer2=16]="UserLayer2",e[e.UserLayer3=32]="UserLayer3",e[e.UserLayer4=64]="UserLayer4",e[e.UserLayer5=128]="UserLayer5",e[e.UserLayer6=240]="UserLayer6",e[e.UserLayer7=256]="UserLayer7",e[e.UserLayer8=512]="UserLayer8",e[e.UserLayer9=1024]="UserLayer9",e[e.UserLayer10=2048]="UserLayer10",e[e.UserLayer11=3840]="UserLayer11",e[e.UserLayer12=4096]="UserLayer12",e[e.UserLayer13=8192]="UserLayer13",e[e.UserLayer14=16384]="UserLayer14",e[e.UserLayer15=32768]="UserLayer15",e[e.UserLayer16=61440]="UserLayer16",e[e.UserLayer17=65536]="UserLayer17",e[e.UserLayer18=131072]="UserLayer18",e[e.UserLayer19=262144]="UserLayer19",e[e.UserLayer20=524288]="UserLayer20",e[e.UserLayer21=983040]="UserLayer21",e[e.UserLayer22=1048576]="UserLayer22",e[e.UserLayer23=2097152]="UserLayer23",e[e.UserLayer24=4194304]="UserLayer24",e[e.UserLayer25=8388608]="UserLayer25",e[e.UserLayer26=15728640]="UserLayer26"}(s=e.CullingMask||(e.CullingMask={}))}(paper||(paper={}));var egret3d;!function(e){var t=e.Vector3.create(),r=e.Vector3.create(),n=e.Vector3.create(),i=e.Matrix4.create(),o=e.Triangle.create(),a=e.Triangle.create(),s=e.RaycastInfo.create(),l=["POSITION","NORMAL","TEXCOORD_0"],c=function(c){function u(t,r,n,i,o){var a=c.call(this,"string"==typeof n?n:"")||this;if(a._drawMode=35044,a._vertexCount=0,a._attributeNames=[],a._customAttributeTypes={},a._glTFMesh=null,a._rawVertices=null,a._skinnedVertices=null,"number"==typeof t){t=t||3,r=r||0,a.config=e.GLTFAsset.createMeshConfig();var s=a.config.buffers[0],u=a.config.bufferViews[0],p=a.config.accessors,d=a.config.meshes[0].primitives[0].attributes,h=!1;if(i)for(var f in i)h=!0,a._customAttributeTypes[f]=i[f];for(var _=0,m=n||l;_<m.length;_++){var v=m[_],g=h?a._customAttributeTypes[v]||a.getMeshAttributeType(v):a.getMeshAttributeType(v),y=u.byteLength;u.byteLength+=t*a.getAccessorTypeCount(g)*Float32Array.BYTES_PER_ELEMENT,d[v]=p.length,p.push({bufferView:0,byteOffset:y,count:t,normalized:"NORMAL"===v||"TANGENT"===v,componentType:5126,type:g})}s.byteLength=u.byteLength,a.buffers[0]=new Float32Array(u.byteLength/Float32Array.BYTES_PER_ELEMENT),a._drawMode=o||35044,r>0?a.addSubMesh(r,0):a.config.meshes[0].primitives[0].material=0}else{a.config=t;for(var b=0,x=r;b<x.length;b++){var s=x[b];a.buffers.push(s)}a.name=n}a._glTFMesh=a.config.meshes[0],a._vertexCount=a.getAccessor(a._glTFMesh.primitives[0].attributes.POSITION||0).count;for(var f in a._glTFMesh.primitives[0].attributes)a._attributeNames.push(f);return a}return __extends(u,c),u.prototype.clone=function(){for(var t=new e.Mesh(this.vertexCount,0,this._attributeNames,this._customAttributeTypes,this.drawMode),r=0,n=this._glTFMesh.primitives;r<n.length;r++){var i=n[r];if(void 0!==i.indices){var o=this.getAccessor(i.indices);t.addSubMesh(o.count,i.material,i.mode)}}for(var a=0,s=0,l=this.config.bufferViews;s<l.length;s++)for(var c=l[s],u=t.config.bufferViews[a++],p=this.createTypeArrayFromBufferView(c,5125),d=t.createTypeArrayFromBufferView(u,5125),h=0,f=p.length;f>h;++h)d[h]=p[h];return t},u.prototype.raycast=function(e,l,c){for(var u=0,p=t,d=r,h=n,f=o,_=a,m=s,v=this.getVertices(),g=c?this.getAttributes("JOINTS_0"):null,y=c?this.getAttributes("WEIGHTS_0"):null,b=!1,x=0,T=this._glTFMesh.primitives;x<T.length;x++){var C=T[x],S=void 0!==C.indices?this.getIndices(u):null,E=v;if(c&&!this._rawVertices){this._skinnedVertices||(this._skinnedVertices=new Float32Array(v.length)),E=this._skinnedVertices;for(var M=0,A=S;M<A.length;M++){var R=A[M],w=3*R,O=4*R;p.fromArray(v,w),d.clear();for(var L=0;4>L;++L){var P=y[O+L];0>=P||d.add(h.applyMatrix(i.fromArray(c,16*g[O+L]),p).multiplyScalar(P))}d.toArray(E,w)}}switch(C.mode){case 0:break;case 1:break;case 2:break;case 3:break;case 6:break;case 5:break;case 4:default:if(S){for(var L=0,D=S.length;D>L;L+=3)if(f.fromArray(E,3*S[L],3*S[L+1],3*S[L+2]),l)f.raycast(e,m)&&(!b||l.distance>m.distance)&&(l.subMeshIndex=u,l.triangleIndex=L/3,l.distance=m.distance,l.position.copy(m.position),l.textureCoordA.copy(m.textureCoordA),l.textureCoordB.copy(m.textureCoordB),b=!0,l.normal&&_.copy(f));else if(f.raycast(e))return!0}else for(var L=0,D=E.length;D>L;L+=9)if(f.fromArray(E,L),l)f.raycast(e,m)&&(!b||l.distance>m.distance)&&(l.subMeshIndex=u,l.triangleIndex=L/9,l.distance=m.distance,l.position.copy(m.position),l.textureCoordA.copy(m.textureCoordA),l.textureCoordB.copy(m.textureCoordB),b=!0,l.normal&&_.copy(f));else if(f.raycast(e))return!0}u++}if(b&&l.normal){var I=this.getNormals(),S=this.getIndices();S?l.normal.fromArray(I,3*S[3*l.triangleIndex]):l.normal.fromArray(I,9*l.triangleIndex)}return b},u.prototype.addSubMesh=function(e,t,r){void 0===t&&(t=0);var n=this.config.accessors,i=this.config.meshes[0].primitives,o=this.buffers.length===i.length+1?i.length:0,a=this.config.bufferViews[o+1]={buffer:o+1,byteOffset:0,byteLength:e*this.getAccessorTypeCount("SCALAR")*Uint16Array.BYTES_PER_ELEMENT,target:34963},s=i[o]=i[o]||{attributes:i[0].attributes};return s.indices=n.length,s.material=t,s.mode=r,n.push({bufferView:o+1,byteOffset:0,count:e,componentType:5123,type:"SCALAR"}),this.buffers[o+1]=new Uint16Array(a.byteLength/Uint16Array.BYTES_PER_ELEMENT),this.config.buffers[o+1]={byteLength:a.byteLength},i.length-1},u.prototype.getVertices=function(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),this.getAttributes("POSITION",e,t)},u.prototype.getUVs=function(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),this.getAttributes("TEXCOORD_0",e,t)},u.prototype.getColors=function(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),this.getAttributes("COLOR_0",e,t)},u.prototype.getNormals=function(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),this.getAttributes("NORMAL",e,t)},u.prototype.getTangents=function(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),this.getAttributes("TANGENT",e,t)},u.prototype.getAttributes=function(e,t,r){void 0===t&&(t=0),void 0===r&&(r=0);var n=this._glTFMesh.primitives[0].attributes[e];return void 0===n?null:this.createTypeArrayFromAccessor(this.getAccessor(n),t,r)},u.prototype.setAttributes=function(e,t,r){void 0===r&&(r=0);var n=this.getAttributes(e,r);if(n)for(var i=0,o=Math.min(t.length,n.length);o>i;i++)n[i]=t[i];return n},u.prototype.getIndices=function(e){if(void 0===e&&(e=0),e>=0&&e<this._glTFMesh.primitives.length){var t=this._glTFMesh.primitives[e].indices;return void 0===t?null:this.createTypeArrayFromAccessor(this.getAccessor(t))}return console.warn("Error arguments."),null},u.prototype.setIndices=function(e,t,r){void 0===t&&(t=0),void 0===r&&(r=0);var n=this.getIndices(t);if(n)for(var i=0,o=Math.min(e.length,n.length);o>i;i++)n[i]=e[r+i];return n},Object.defineProperty(u.prototype,"drawMode",{get:function(){return this._drawMode},set:function(e){this._drawMode=e},enumerable:!0,configurable:!0}),Object.defineProperty(u.prototype,"subMeshCount",{get:function(){return this._glTFMesh.primitives.length},enumerable:!0,configurable:!0}),Object.defineProperty(u.prototype,"vertexCount",{get:function(){return this._vertexCount},enumerable:!0,configurable:!0}),Object.defineProperty(u.prototype,"attributeNames",{get:function(){return this._attributeNames},enumerable:!0,configurable:!0}),Object.defineProperty(u.prototype,"glTFMesh",{get:function(){return this._glTFMesh},enumerable:!0,configurable:!0}),u}(e.GLTFAsset);e.BaseMesh=c,__reflect(c.prototype,"egret3d.BaseMesh",["egret3d.IRaycast"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e[e.Directional=11]="Directional",e[e.Point=15]="Point",e[e.Spot=18]="Spot"}(t||(t={}));var r=e.Vector3.create(),n=function(){function t(t){this.cameraPosition=new Float32Array(3),this.cameraForward=new Float32Array(3),this.cameraUp=new Float32Array(3),this.camera=null,this.drawCall=null,this.lightmapUV=1,this.lightmapIntensity=1,this.lightmapScaleOffset=new Float32Array(4),this.lightmap=null,this.lightCount=0,this.directLightCount=0,this.pointLightCount=0,this.spotLightCount=0,this.directLightArray=new Float32Array(0),this.pointLightArray=new Float32Array(0),this.spotLightArray=new Float32Array(0),this.lightShadowCameraNear=0,this.lightShadowCameraFar=0,this.directShadowMaps=[],this.pointShadowMaps=[],this.spotShadowMaps=[],this.directShadowMatrix=new Float32Array(0),this.spotShadowMatrix=new Float32Array(0),this.pointShadowMatrix=new Float32Array(0),this.matrix_mv=e.Matrix4.create(),this.matrix_mvp=e.Matrix4.create(),this.matrix_mv_inverse=e.Matrix3.create(),this.fogDensity=0,this.fogNear=0,this.fogFar=0,this.fogColor=new Float32Array(3),this._postProcessingCamera=null,this._postProcessDrawCall=e.DrawCall.create(),this.opaqueCalls=[],this.transparentCalls=[],this.shadowCalls=[],this._drawCallCollecter=paper.GameObject.globalGameObject.getComponent(e.DrawCallCollecter),this.camera=t;var r="PostProcessing Camera",n=paper.GameObject.globalGameObject.transform.find(r),i=null;if(n)i=n.gameObject,this._postProcessingCamera=i.getComponent(e.Camera);else{i=paper.GameObject.create(r,"",paper.Scene.globalScene),i.parent=paper.GameObject.globalGameObject;var o=i.addComponent(e.Camera);o.enabled=!1,o.opvalue=0,o.size=1,o.near=.01,o.far=1,this._postProcessingCamera=o}this._postProcessDrawCall.matrix=e.Matrix4.IDENTITY,this._postProcessDrawCall.subMeshIndex=0,this._postProcessDrawCall.mesh=e.DefaultMeshes.FULLSCREEN_QUAD,this._postProcessDrawCall.mesh._createBuffer()}return t.prototype._sortOpaque=function(e,t){var r=e.material,n=t.material;return r.renderQueue!==n.renderQueue?r.renderQueue-n.renderQueue:r._glTFTechnique.program!==n._glTFTechnique.program?r._glTFTechnique.program-n._glTFTechnique.program:r._id!==n._id?r._id-n._id:e.zdist-t.zdist},t.prototype._sortFromFarToNear=function(e,t){return e.material.renderQueue===t.material.renderQueue?t.zdist-e.zdist:e.material.renderQueue-t.material.renderQueue},t.prototype.shadowFrustumCulling=function(e){this.shadowCalls.length=0;for(var t=0,r=this._drawCallCollecter.drawCalls;t<r.length;t++){var n=r[t],i=n.renderer;!i.castShadows||0===(e.cullingMask&i.gameObject.layer)||i.frustumCulled&&!e.testFrustumCulling(i)||this.shadowCalls.push(n)}this.shadowCalls.sort(this._sortFromFarToNear)},t.prototype.frustumCulling=function(){var e=this.camera,t=e.gameObject.transform.position;this.opaqueCalls.length=0,this.transparentCalls.length=0;for(var r=0,n=this._drawCallCollecter.drawCalls;r<n.length;r++){var i=n[r],o=i.renderer;0===(e.cullingMask&o.gameObject.layer)||o.frustumCulled&&!e.testFrustumCulling(o)||(i.material.renderQueue>=3e3?this.transparentCalls.push(i):this.opaqueCalls.push(i),i.zdist=o.gameObject.transform.position.getDistance(t))}this.opaqueCalls.sort(this._sortOpaque),this.transparentCalls.sort(this._sortFromFarToNear)},t.prototype.blit=function(t,r,n){void 0===r&&(r=null),void 0===n&&(n=null),r||(r=e.DefaultMaterials.COPY,r.setTexture(t));var i=this._postProcessingCamera,o=this._postProcessDrawCall,a=paper.GameObject.globalGameObject.getComponent(e.WebGLRenderState);o.material=r,a.updateViewport(i.viewport,n),a.clearBuffer(16640,e.Color.WHITE),i.projectionMatrix.identity(),a.draw(i,o)},t.prototype.updateCameraTransform=function(){var e=this.camera.gameObject.transform.localToWorldMatrix.rawData;(this.cameraPosition[0]!==e[12]||this.cameraPosition[1]!==e[13]||this.cameraPosition[2]!==e[14])&&(this.cameraPosition[0]=e[12],this.cameraPosition[1]=e[13],this.cameraPosition[2]=e[14]),(this.cameraUp[0]!==e[4]||this.cameraUp[1]!==e[5]||this.cameraUp[2]!==e[6])&&(this.cameraUp[0]=e[4],this.cameraUp[1]=e[5],this.cameraUp[2]=e[6]),(this.cameraForward[0]!==e[8]||this.cameraForward[1]!==e[9]||this.cameraForward[2]!==e[10])&&(this.cameraForward[0]=-e[8],this.cameraForward[1]=-e[9],this.cameraForward[2]=-e[10])},t.prototype.updateLights=function(t){for(var n=0,i=0,o=0,a=0,s=0,l=t;s<l.length;s++){var c=l[s];c instanceof e.DirectionalLight?i++:c instanceof e.PointLight?o++:c instanceof e.SpotLight&&a++,n++}this.directLightArray.length!==11*i&&(this.directLightArray=new Float32Array(11*i)),this.pointLightArray.length!==15*o&&(this.pointLightArray=new Float32Array(15*o)),this.spotLightArray.length!==18*a&&(this.spotLightArray=new Float32Array(18*a)),this.directShadowMatrix.length!==16*i&&(this.directShadowMatrix=new Float32Array(16*i)),this.pointShadowMatrix.length!==16*o&&(this.pointShadowMatrix=new Float32Array(16*o)),this.spotShadowMatrix.length!==16*a&&(this.spotShadowMatrix=new Float32Array(16*a)),this.directShadowMaps.length=i,this.pointShadowMaps.length=o,this.spotShadowMaps.length=a,this.lightCount=n,this.directLightCount=i,this.pointLightCount=o,this.spotLightCount=a;for(var u=0,p=0,d=0,h=0,f=this.directLightArray,_=this.camera.transform.worldToLocalMatrix,m=0,v=t;m<v.length;m++){var c=v[m];switch(c.constructor){case e.DirectionalLight:c.gameObject.transform.getForward(r),r.applyDirection(_),f=this.directLightArray,h=11*u,f[h++]=-r.x,f[h++]=-r.y,f[h++]=-r.z,f[h++]=c.color.r*c.intensity,f[h++]=c.color.g*c.intensity,f[h++]=c.color.b*c.intensity;break;case e.PointLight:var g=c.gameObject.transform.position.clone().release();g.applyMatrix(_),f=this.pointLightArray,h=15*p,f[h++]=g.x,f[h++]=g.y,f[h++]=g.z,f[h++]=c.color.r*c.intensity,f[h++]=c.color.g*c.intensity,f[h++]=c.color.b*c.intensity;var y=c.distance;f[h++]=y,f[h++]=0===y?0:c.decay;break;case e.SpotLight:var g=c.gameObject.transform.position.clone().release();g.applyMatrix(_),c.gameObject.transform.getForward(r),r.applyDirection(_),f=this.spotLightArray,h=18*d,f[h++]=g.x,f[h++]=g.y,f[h++]=g.z,f[h++]=-r.x,f[h++]=-r.y,f[h++]=-r.z,f[h++]=c.color.r*c.intensity,f[h++]=c.color.g*c.intensity,f[h++]=c.color.b*c.intensity;var y=c.distance;f[h++]=y,f[h++]=0===y?0:c.decay,f[h++]=Math.cos(c.angle),f[h++]=Math.cos(c.angle*(1-c.penumbra))}if(c.castShadows);else switch(f[h++]=0,f[h++]=0,f[h++]=0,f[h++]=0,c.constructor){case e.DirectionalLight:this.directShadowMaps[u++]=null;break;case e.PointLight:f[h++]=0,f[h++]=0,this.pointShadowMaps[p++]=null;break;case e.SpotLight:this.spotShadowMaps[d++]=null}}},t.prototype.updateDrawCall=function(t){var r=t.renderer,n=r?r.gameObject.scene:this.camera.gameObject.scene,i=this.camera.transform.worldToLocalMatrix,o=this.camera.worldToClipMatrix,a=t.matrix;this.drawCall=t,this.matrix_mv.multiply(i,a),this.matrix_mvp.multiply(o,a),this.matrix_mv_inverse.getNormalMatrix(this.matrix_mv);var s="";r&&r.lightmapIndex>=0&&n.lightmaps.length>r.lightmapIndex&&(this.lightmapUV=t.mesh.glTFMesh.primitives[t.subMeshIndex].attributes.TEXCOORD_1?1:0,this.lightmapIntensity=n.lightmapIntensity,r.lightmapScaleOffset.toArray(this.lightmapScaleOffset),this.lightmap=n.lightmaps[r.lightmapIndex],s+="#define USE_LIGHTMAP \n"),this.lightCount>0&&(this.directLightCount>0&&(s+="#define NUM_DIR_LIGHTS "+this.directLightCount+"\n"),this.pointLightCount>0&&(s+="#define NUM_POINT_LIGHTS "+this.pointLightCount+"\n"),this.spotLightCount>0&&(s+="#define NUM_SPOT_LIGHTS "+this.spotLightCount+"\n"),r&&r.receiveShadows&&(s+="#define USE_SHADOWMAP \n",s+="#define SHADOWMAP_TYPE_PCF \n"));var l=n.fog;return 0!==l.mode&&(this.fogColor[0]=l.color.r,this.fogColor[1]=l.color.g,this.fogColor[2]=l.color.b,s+="#define USE_FOG \n",2===l.mode?(this.fogDensity=l.density,s+="#define FOG_EXP2 \n"):(this.fogNear=l.near,this.fogFar=l.far)),r&&r.constructor===e.SkinnedMeshRenderer&&!r.forceCPUSkin&&(s+="#define USE_SKINNING \n"+("#define MAX_BONES "+Math.min(e.SkinnedMeshRendererSystem.maxBoneCount,r.bones.length)+" \n")),s},t}();e.CameraRenderContext=n,__reflect(n.prototype,"egret3d.CameraRenderContext")}(egret3d||(egret3d={}));var paper;!function(e){var t=function(t){function r(r){var n=t.call(this)||this;return n.name="",n.extras=2===e.Application.playerMode?{}:void 0,n.lightmapIntensity=1,n.ambientColor=egret3d.Color.create(.2,.2,.25,1),n.fog=egret3d.Fog.create(),n.lightmaps=[],n._gameObjects=[],n.name=r,n}return __extends(r,t),r.createEmpty=function(t,n){void 0===t&&(t="NoName"),void 0===n&&(n=!0);var i=new r(t);return e.Application.sceneManager.addScene(i,n),i},r.create=function(t,r){void 0===r&&(r=!0);var n=e.Application.sceneManager.getScene(t);if(n)return console.warn("The scene with the same name already exists."),n;var i=e.Asset.find(t);if(i&&i instanceof e.RawScene){var o=i.createInstance();if(o)return r&&2!==e.Application.playerMode&&egret3d.combine(o.gameObjects),o}else console.warn("The scene don't exists.",t);return null},Object.defineProperty(r,"globalScene",{get:function(){return e.Application.sceneManager.globalScene},enumerable:!0,configurable:!0}),Object.defineProperty(r,"editorScene",{get:function(){return e.Application.sceneManager.editorScene},enumerable:!0,configurable:!0}),Object.defineProperty(r,"activeScene",{get:function(){return e.Application.sceneManager.activeScene},set:function(t){e.Application.sceneManager.activeScene=t},enumerable:!0,configurable:!0}),r.prototype.addGameObject=function(e){this._gameObjects.indexOf(e)>=0&&console.warn("Add game object error.",e.path),this._gameObjects.push(e)},r.prototype.removeGameObject=function(e){var t=this._gameObjects.indexOf(e);0>t&&console.warn("Remove game object error.",e.path),this._gameObjects.splice(t,1)},r.prototype.uninitialize=function(){this.lightmapIntensity=1,this.ambientColor.set(.2,.2,.25,1),this.lightmaps.length=0},r.prototype.destroy=function(){if(!e.Application.sceneManager.removeScene(this))return!1;for(var t=this._gameObjects.length;t--;){var r=this._gameObjects[t];r&&!r.transform.parent&&r.destroy()}return this._gameObjects.length=0,e.disposeCollecter.scenes.push(this),!0},r.prototype.find=function(e){var t=e.indexOf("/");if(t>0)for(var r=e.slice(0,t),n=0,i=this._gameObjects;n<i.length;n++){var o=i[n];if(o.name===r){var a=o.transform.find(e.slice(t+1));return a?a.gameObject:null}}else for(var s=0,l=this._gameObjects;s<l.length;s++){var o=l[s];if(o.name===e)return o}return null},r.prototype.findWithTag=function(e){for(var t=0,r=this._gameObjects;t<r.length;t++){var n=r[t];if(n.tag===e)return n}return null},r.prototype.findGameObjectsWithTag=function(e){for(var t=[],r=0,n=this._gameObjects;r<n.length;r++){var i=n[r];i.tag===e&&t.push(i)}return t},r.prototype.getRootGameObjects=function(){for(var e=[],t=0,r=this._gameObjects;t<r.length;t++){var n=r[t];n.transform.parent||e.push(n)}return e},Object.defineProperty(r.prototype,"gameObjectCount",{get:function(){return this._gameObjects.length},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"gameObjects",{get:function(){return this._gameObjects},enumerable:!0,configurable:!0}),__decorate([e.serializedField],r.prototype,"name",void 0),__decorate([e.serializedField],r.prototype,"extras",void 0),__decorate([e.serializedField,e.editor.property("FLOAT",{minimum:0})],r.prototype,"lightmapIntensity",void 0),__decorate([e.serializedField,e.editor.property("COLOR")],r.prototype,"ambientColor",void 0),__decorate([e.serializedField,e.editor.property("NESTED")],r.prototype,"fog",void 0),__decorate([e.serializedField],r.prototype,"lightmaps",void 0),__decorate([e.serializedField,e.deserializedIgnore],r.prototype,"gameObjects",null),r}(e.BaseObject);e.Scene=t,__reflect(t.prototype,"paper.Scene")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.missingObject=null,e}return __extends(r,t),Object.defineProperty(r.prototype,"missingClass",{get:function(){return this.missingObject?this.missingObject["class"]:""},enumerable:!0,configurable:!0}),__decorate([e.editor.property("TEXT",{readonly:!0})],r.prototype,"missingClass",null),__decorate([e.serializedField],r.prototype,"missingObject",void 0),r}(e.BaseComponent);e.MissingComponent=t,__reflect(t.prototype,"paper.MissingComponent")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e._isReseted=!1,e._isStarted=!1,e}return __extends(r,t),r.prototype._dispatchEnabledEvent=function(e){t.prototype._dispatchEnabledEvent.call(this,e),e?r.onComponentEnabled.dispatch(this):r.onComponentDisabled.dispatch(this)},r.prototype.initialize=function(r){t.prototype.initialize.call(this,r),(2!==e.Application.playerMode||this.constructor.executeInEditMode)&&this.onAwake&&this.onAwake(r)},r.prototype.uninitialize=function(){(2!==e.Application.playerMode||this.constructor.executeInEditMode)&&this.onDestroy&&this.onDestroy(),t.prototype.uninitialize.call(this)
},r}(e.BaseComponent);e.Behaviour=t,__reflect(t.prototype,"paper.Behaviour")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.maxFixedSubSteps=3,e.fixedDeltaTime=.02,e.timeScale=1,e._frameCount=0,e._beginTime=0,e._lastTime=0,e._delayTime=0,e._unscaledTime=0,e._unscaledDeltaTime=0,e._fixedTime=0,e}return __extends(r,t),r.prototype.initialize=function(){t.prototype.initialize.call(this),e.Time=e.clock=this,this._beginTime=.001*this.now},r.prototype.update=function(e){0!==this._unscaledTime&&(this._lastTime=this._unscaledTime,this._fixedTime<this.fixedDeltaTime||(this._fixedTime<this.fixedDeltaTime*this.maxFixedSubSteps?this._fixedTime%=this.fixedDeltaTime:this._fixedTime-=this.fixedDeltaTime*this.maxFixedSubSteps));var t=e||.001*this.now;this._frameCount+=1,this._unscaledTime=t-this._beginTime,this._unscaledDeltaTime=this._unscaledTime-this._lastTime,this._fixedTime+=this._unscaledDeltaTime},Object.defineProperty(r.prototype,"frameCount",{get:function(){return this._frameCount},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"now",{get:function(){return Date.now?Date.now():(new Date).getTime()},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"time",{get:function(){return this._unscaledTime*this.timeScale},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"fixedTime",{get:function(){return this._fixedTime},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"deltaTime",{get:function(){return this._unscaledDeltaTime*this.timeScale},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"unscaledTime",{get:function(){return this._unscaledTime},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"unscaledDeltaTime",{get:function(){return this._unscaledDeltaTime},enumerable:!0,configurable:!0}),r}(e.SingletonComponent);e.Clock=t,__reflect(t.prototype,"paper.Clock"),e.clock=null,e.Time=null}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.scenes=[],e.gameObjects=[],e.parentChangedGameObjects=[],e.components=[],e.releases=[],e}return __extends(r,t),r.prototype.initialize=function(){t.prototype.initialize.call(this),e.disposeCollecter=this},r.prototype.clear=function(){this.scenes.length=0,this.gameObjects.length=0,this.parentChangedGameObjects.length=0,this.components.length=0,this.releases.length=0},r}(e.SingletonComponent);e.DisposeCollecter=t,__reflect(t.prototype,"paper.DisposeCollecter"),e.disposeCollecter=null}(paper||(paper={}));var paper;!function(e){var t;!function(e){e[e.Extends=1]="Extends",e[e.Exculde=2]="Exculde",e[e.Unessential=4]="Unessential"}(t=e.InterestType||(e.InterestType={}));var r=function(){function t(t){this.locked=!1,this._isRemoved=!1,this._isBehaviour=!1,this._bufferedGameObjects=[],this._addedGameObjects=[],this._gameObjects=[],this._bufferedComponents=[],this._addedComponents=[],this._behaviourComponents=[],this._interestConfig=null,this._isBehaviour=1===t.length&&void 0!==t[0].type&&0!==t[0].type,this._interestConfig=t;for(var r=0,n=this._interestConfig;r<n.length;r++){var i=n[r],o=i.type&&0!==(4&i.type);if(Array.isArray(i.componentClass))for(var a=0,s=i.componentClass;a<s.length;a++){var l=s[a];this._addListener(l,o)}else this._addListener(i.componentClass,o)}for(var c=0,u=e.Application.sceneManager.scenes;c<u.length;c++)for(var p=u[c],d=0,h=p.gameObjects;d<h.length;d++){var f=h[d];this._addGameObject(f)}}return t.create=function(e){e=Array.isArray(e)?e:[e];for(var r=0,n=this._groups;r<n.length;r++){var i=n[r];if(i._interestConfig.length===e.length){for(var o=!0,a=0,s=e.length;s>a;++a){var l=e[a],c=i._interestConfig[a];if(l.type!==c.type){o=!1;break}if(Array.isArray(l.componentClass)&&Array.isArray(c.componentClass)){if(l.componentClass.length!==c.componentClass.length){o=!1;break}}else if(l.componentClass!==c.componentClass){o=!1;break}}if(o)return i}}var u=new t(e);return this._groups.push(u),u},t.update=function(){for(var e=0,t=this._groups;e<t.length;e++){var r=t[e];r._update()}},t.prototype._addListener=function(t,r){e.registerClass(t),t.onComponentDisabled.add(this._onRemoveUnessentialComponent,this),r||(t.onComponentEnabled.add(this._onAddComponent,this),t.onComponentDisabled.add(this._onRemoveComponent,this)),t.onComponentEnabled.add(this._onAddUnessentialComponent,this)},t.prototype._onAddComponent=function(e){this._addGameObject(e.gameObject)},t.prototype._onAddUnessentialComponent=function(e){var t=e.gameObject;e.isActiveAndEnabled&&(!this._isBehaviour&&this._bufferedGameObjects.indexOf(t)<0&&this._gameObjects.indexOf(t)<0||this._bufferedComponents.indexOf(e)>=0||this._behaviourComponents.indexOf(e)>=0||this._bufferedComponents.push(e))},t.prototype._onRemoveUnessentialComponent=function(t){var r=t.gameObject,n=this._bufferedComponents.indexOf(t);if(n>=0)return void this._bufferedComponents.splice(n,1);if(this._isBehaviour){if(n=this._behaviourComponents.indexOf(t),0>n)return;this._isRemoved=!0,this._behaviourComponents[n]=null,n=this._addedComponents.indexOf(t),n>=0&&(this._addedComponents[n]=null)}else{if(this._gameObjects.indexOf(r)<0)return;n=this._addedComponents.indexOf(t),n>=0&&(this._addedComponents[n]=null)}for(var i=0,o=e.Application.systemManager.systems;i<o.length;i++){var a=o[i];!a.onRemoveComponent||a.groups.indexOf(this)<0||a.onRemoveComponent(t,this)}},t.prototype._onRemoveComponent=function(e){this._removeGameObject(e.gameObject)},t.prototype._addGameObject=function(e){if(e.activeInHierarchy&&!(this._bufferedGameObjects.indexOf(e)>=0||this._gameObjects.indexOf(e)>=0)){for(var t=0,r=this._interestConfig;t<r.length;t++){var n=r[t];if(!(n.type&&4&n.type)){var i=n.type&&0!==(1&n.type),o=n.type&&0!==(2&n.type),a=null;if(Array.isArray(n.componentClass))for(var s=0,l=n.componentClass;s<l.length;s++){var c=l[s];if(a=e.getComponent(c,i),a&&a.isActiveAndEnabled)break;a=null}else a=e.getComponent(n.componentClass,i),a&&!a.isActiveAndEnabled&&(a=null);if(o?a:!a)return}}this._bufferedGameObjects.push(e)}},t.prototype._removeGameObject=function(t){var r=this._bufferedGameObjects.indexOf(t);if(r>=0)this._bufferedGameObjects.splice(r,1);else if(r=this._gameObjects.indexOf(t),r>=0){this.locked&&(this.locked=!1,this._gameObjects=this._gameObjects.concat()),this._gameObjects.splice(r,1),r=this._addedGameObjects.indexOf(t),r>=0&&(this._addedGameObjects[r]=null);for(var n=0,i=e.Application.systemManager.systems;n<i.length;n++){var o=i[n];!o.onRemoveGameObject||o.groups.indexOf(this)<0||o.onRemoveGameObject(t,this)}}},t.prototype._update=function(){if(this.locked=!1,this._addedGameObjects.length>0&&(this._addedGameObjects.length=0),this._addedComponents.length>0&&(this._addedComponents.length=0),this._isRemoved){var t=0,r=0;this._isRemoved=!1;for(var n=0,i=this._behaviourComponents;n<i.length;n++){var o=i[n];o?r>0&&(this._behaviourComponents[t-r]=o,this._behaviourComponents[t]=null):r++,t++}r>0&&(this._behaviourComponents.length-=r)}if(this._bufferedGameObjects.length>0){for(var a=0,s=this._bufferedGameObjects;a<s.length;a++){var l=s[a];l&&(this._addedGameObjects.push(l),this._gameObjects.push(l))}this._bufferedGameObjects.length=0}if(this._bufferedComponents.length>0){for(var c=0,u=this._bufferedComponents;c<u.length;c++){var o=u[c];o&&(this._addedComponents.push(o),o instanceof e.Behaviour&&(o.gameObject.getComponent(egret3d.Camera)?this._behaviourComponents.unshift(o):this._behaviourComponents.push(o)))}this._bufferedComponents.length=0}},t.prototype.hasGameObject=function(e){return this._gameObjects.indexOf(e)>=0},Object.defineProperty(t.prototype,"gameObjects",{get:function(){return this._gameObjects},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"components",{get:function(){return this._behaviourComponents},enumerable:!0,configurable:!0}),t._groups=[],t}();e.GameObjectGroup=r,__reflect(r.prototype,"paper.GameObjectGroup")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(r,n,i){void 0===r&&(r="NoName"),void 0===n&&(n=""),void 0===i&&(i=null);var o=t.call(this)||this;return o.isStatic=!1,o.hideFlags=0,o.layer=2,o.name="",o.tag="",o.transform=null,o.renderer=null,o.extras=2===e.Application.playerMode?{}:void 0,o._activeSelf=!0,o._activeInHierarchy=!0,o._activeDirty=!0,o._components=[],o._beforeRenderBehaviors=[],o._cachedComponents=[],o._scene=null,o.name=r,o.tag=n,o._addToScene(i||e.Application.sceneManager.activeScene),o.addComponent(egret3d.Transform),o}return __extends(r,t),r.create=function(e,t,n){void 0===e&&(e="NoName"),void 0===t&&(t=""),void 0===n&&(n=null);var i;return i=new r(e,t,n)},Object.defineProperty(r,"globalGameObject",{get:function(){return this._globalGameObject||(this._globalGameObject=r.create("Global","Global",e.Application.sceneManager.globalScene),this._globalGameObject.dontDestroy=!0),this._globalGameObject},enumerable:!0,configurable:!0}),r.prototype._destroy=function(){this._scene.removeGameObject(this);for(var t=0,r=this.transform.children;t<r.length;t++){var n=r[t];n.gameObject._destroy()}for(var i=0,o=this._components;i<o.length;i++){var a=o[i];a&&this._removeComponent(a,null)}this._components.length=0,this._scene=null,e.disposeCollecter.gameObjects.push(this)},r.prototype._addToScene=function(e){this._scene&&this._scene.removeGameObject(this),this._scene=e,this._scene.addGameObject(this)},r.prototype._canRemoveComponent=function(t){if(t===this.transform)return console.warn("Cannot remove the transform component from a game object."),!1;for(var r=0,n=this._components;r<n.length;r++){var i=n[r];if(i){i.constructor===e.GroupComponent&&(i=i.components[0]);var o=i.constructor.requireComponents;if(o&&o.indexOf(t.constructor)>=0)return console.warn("Cannot remove the "+egret.getQualifiedClassName(t)+" component from the game object ("+this.path+"), because it is required from the "+egret.getQualifiedClassName(i)+" component."),!1}}return!0},r.prototype._removeComponent=function(t,r){if(t.enabled=!1,t.gameObject=null,t===this.renderer&&(this.renderer=null),e.disposeCollecter.components.push(t),r)r.removeComponent(t),0===r.components.length&&this._removeComponent(r,null);else if(t.constructor===e.GroupComponent){r=t,delete this._components[r.componentIndex];for(var n=0,i=r.components;n<i.length;n++){var o=i[n];this._removeComponent(o,r)}}else delete this._components[t.constructor.__index];this.transform&&t.hasOwnProperty("onTransformChange")&&this.transform.unregisterObserver(t),t instanceof e.Behaviour&&t.onBeforeRender&&this._beforeRenderBehaviors.splice(this._beforeRenderBehaviors.indexOf(t),1)},r.prototype._getComponent=function(e){var t=e.__index;return 0>t?null:this._components[t]},r.prototype._activeInHierarchyDirty=function(t){this._activeDirty=!0;var r=this.activeInHierarchy;if(r!==t)for(var n=0,i=this._components;n<i.length;n++){var o=i[n];if(o&&(o.enabled&&o._dispatchEnabledEvent(r),o.constructor===e.GroupComponent))for(var a=0,s=o.components;a<s.length;a++){var l=s[a];l.enabled&&l._dispatchEnabledEvent(r)}}for(var c=0,u=this.transform.children;c<u.length;c++){var p=u[c];p.gameObject._activeInHierarchyDirty(t)}},r.prototype.uninitialize=function(){this.isStatic=!1,this.hideFlags=0,this.layer=2,this.name="",this.tag="",this.transform=null,this.renderer=null,this.extras&&(this.extras={}),this._activeSelf=!0,this._activeInHierarchy=!0,this._activeDirty=!0,this._cachedComponents.length=0,this._scene=null},r.prototype.destroy=function(){if(this.isDestroyed)return console.warn("The game object has been destroyed."),!1;if(this===r._globalGameObject)return console.warn("Cannot destroy global game object."),!1;var e=this.transform.parent;return e&&e._children.splice(e._children.indexOf(this.transform),1),this._destroy(),!0},r.prototype.addComponent=function(t,n){if(e.registerClass(t),t.__isSingleton&&this!==r._globalGameObject)return r.globalGameObject.getOrAddComponent(t,n);var i=t.__index,o=this._components[i];if(!t.allowMultiple&&o)return console.warn("Cannot add the "+egret.getQualifiedClassName(t)+" component to the game object ("+this.path+") again."),o;if(t.requireComponents)for(var a=0,s=t.requireComponents;a<s.length;a++){var l=s[a];this.getOrAddComponent(l)}var c=e.BaseComponent.create(t,this);if(t===egret3d.Transform?this.transform=c:c instanceof e.BaseRenderer?this.renderer=c:c instanceof e.Behaviour&&c.onBeforeRender&&this._beforeRenderBehaviors.push(c),o)if(o.constructor===e.GroupComponent)o.addComponent(c);else{e.registerClass(e.GroupComponent);var u=e.BaseComponent.create(e.GroupComponent,this);u.initialize(),u.componentIndex=i,u.componentClass=t,u.addComponent(o),u.addComponent(c),this._components[i]=u}else this._components[i]=c;return n?c.initialize(n):c.initialize(),c.isActiveAndEnabled&&c._dispatchEnabledEvent(!0),c},r.prototype.removeComponent=function(t,n){if(void 0===n&&(n=!1),t instanceof e.BaseComponent){var i=t.constructor;if(i.__isSingleton&&this!==r._globalGameObject)return void r.globalGameObject.removeComponent(t,n);if(!this._canRemoveComponent(t))return;this._removeComponent(t,null)}else{if(t.__isSingleton&&this!==r._globalGameObject)return r.globalGameObject.removeComponent(t,n);if(n)for(var o=0,a=this._components;o<a.length;o++){var s=a[o];if(s){var l=null;if(s.constructor===e.GroupComponent&&(l=s,s=l.components[0]),l){if(!(l.components[0]instanceof t)||1===l.components.length&&!this._canRemoveComponent(l.components[0]))continue}else if(!(s instanceof t&&this._canRemoveComponent(s)))continue;this._removeComponent(s,l)}}else{var s=this._getComponent(t);if(!s)return;var l=null;if(s.constructor===e.GroupComponent&&(l=s,s=l.components[0]),l){if(1===l.components.length&&!this._canRemoveComponent(l.components[0]))return}else if(!this._canRemoveComponent(s))return;this._removeComponent(s,l)}}},r.prototype.removeAllComponents=function(t,n){if(void 0===n&&(n=!1),t){if(t.__isSingleton&&this!==r._globalGameObject)return void r.globalGameObject.removeAllComponents(t,n);if(n)for(var i=0,o=this._components;i<o.length;i++){var a=o[i];if(a){if(a.constructor===e.GroupComponent){var s=a;if(!(s.components[0]instanceof t&&this._canRemoveComponent(s.components[0])))continue}else if(!this._canRemoveComponent(a))continue;this._removeComponent(a,null)}}else{var a=this._getComponent(t);if(!a)return;if(a.constructor===e.GroupComponent){var s=a;if(!this._canRemoveComponent(s.components[0]))return}else if(!this._canRemoveComponent(a))return;this._removeComponent(a,null)}}else for(var l=0,c=this._components;l<c.length;l++){var a=c[l];a&&a.constructor!==egret3d.Transform&&this._removeComponent(a,null)}},r.prototype.getComponent=function(t,n){if(void 0===n&&(n=!1),t.__isSingleton&&this!==r._globalGameObject)return r.globalGameObject.getComponent(t,n);if(n){for(var i=0,o=this._components;i<o.length;i++){var a=o[i];if(a)if(a.constructor===e.GroupComponent){var s=a;if(s.components[0]instanceof t)return s.components[0]}else if(a instanceof t)return a}return null}var l=t.__index;if(0>l)return null;var c=this._components[l];return c?c.constructor===e.GroupComponent?c.components[0]:c:null},r.prototype.getComponents=function(t,n){if(void 0===n&&(n=!1),t.__isSingleton&&this!==r._globalGameObject)return r.globalGameObject.getComponents(t,n);var i=[];if(n)for(var o=0,a=this._components;o<a.length;o++){var s=a[o];if(s)if(s.constructor===e.GroupComponent&&s.components[0]instanceof t)for(var l=0,c=s.components;l<c.length;l++){var u=c[l];i.push(u)}else s instanceof t&&i.push(s)}else{var s=this._getComponent(t);if(s)if(s.constructor===e.GroupComponent&&s.components[0]instanceof t)for(var p=0,d=s.components;p<d.length;p++){var u=d[p];i.push(u)}else s instanceof t&&i.push(s)}return i},r.prototype.getComponentInParent=function(e,t){void 0===t&&(t=!1);for(var r=null,n=this.transform.parent;!r&&n;)r=n.gameObject.getComponent(e,t),n=n.parent;return r},r.prototype.getComponentInChildren=function(e,t){void 0===t&&(t=!1);var r=this.getComponent(e,t);if(!r)for(var n=0,i=this.transform.children;n<i.length;n++){var o=i[n];if(r=o.gameObject.getComponentInChildren(e,t))break}return r},r.prototype.getComponentsInChildren=function(t,r,n){void 0===r&&(r=!1),void 0===n&&(n=null),n=n||[];for(var i=0,o=this._components;i<o.length;i++){var a=o[i];if(a)if(a.constructor===e.GroupComponent){var s=a;if(r?s.components[0]instanceof t:s.componentClass===t)for(var l=0,c=s.components;l<c.length;l++){var u=c[l];n.push(u)}}else(r?a instanceof t:a.constructor===t)&&n.push(a)}for(var p=0,d=this.transform.children;p<d.length;p++){var h=d[p];h.gameObject.getComponentsInChildren(t,r,n)}return n},r.prototype.getOrAddComponent=function(e,t,r){return void 0===t&&(t=!1),this.getComponent(e,t)||this.addComponent(e,r)},r.prototype.sendMessage=function(t,r,n){void 0===n&&(n=!0);for(var i=0,o=this._components;i<o.length;i++){var a=o[i];a&&a.isActiveAndEnabled&&a instanceof e.Behaviour&&t in a&&a[t](r)}},r.prototype.sendMessageUpwards=function(e,t,r){void 0===r&&(r=!0),this.sendMessage(e,t,r);var n=this.transform.parent;n&&n.gameObject.activeInHierarchy&&n.gameObject.sendMessage(e,t,r)},r.prototype.broadcastMessage=function(e,t,r){void 0===r&&(r=!0),this.sendMessage(e,t,r);for(var n=0,i=this.transform.children;n<i.length;n++){var o=i[n];o.gameObject.activeInHierarchy&&o.gameObject.broadcastMessage(e,t,r)}},Object.defineProperty(r.prototype,"isDestroyed",{get:function(){return!this._scene},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"dontDestroy",{get:function(){return this._scene===e.Application.sceneManager.globalScene},set:function(t){if(this.dontDestroy!==t){if(this.transform.parent&&this.transform.parent.gameObject.dontDestroy!==t&&(this.transform.parent=null),t)this._addToScene(e.Application.sceneManager.globalScene);else{if(this===r._globalGameObject)return void console.warn("Cannot change the `dontDestroy` value of the global game object.",this.name,this.uuid);this._addToScene(e.Application.sceneManager.activeScene)}for(var n=0,i=this.transform.children;n<i.length;n++){var o=i[n];o.gameObject.dontDestroy=t}}},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"activeSelf",{get:function(){return this._activeSelf},set:function(e){if(this._activeSelf!==e){var t=this.transform.parent;if(!t||t.gameObject.activeInHierarchy){var r=this._activeSelf;this._activeSelf=e,this._activeInHierarchyDirty(r)}else this._activeSelf=e}},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"activeInHierarchy",{get:function(){if(this._activeDirty){var e=this.transform.parent;!e||e.gameObject.activeInHierarchy?this._activeInHierarchy=this._activeSelf:this._activeInHierarchy=!1,this._activeDirty=!1}return this._activeInHierarchy},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"path",{get:function(){var e=this.name;if(this.transform){for(var t=this.transform.parent;t;)e=t.gameObject.name+"/"+e,t=t.parent;return this._scene.name+"/"+e}return e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"components",{get:function(){this._cachedComponents.length=0;for(var t=0,r=this._components;t<r.length;t++){var n=r[t];if(n)if(n.constructor===e.GroupComponent)for(var i=0,o=n.components;i<o.length;i++){var a=o[i];this._cachedComponents.push(a)}else this._cachedComponents.push(n)}return this._cachedComponents},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"parent",{get:function(){return this.transform.parent?this.transform.parent.gameObject:null},set:function(e){this.transform.parent=e?e.transform:null},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"scene",{get:function(){return this._scene},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"globalGameObject",{get:function(){return r.globalGameObject},enumerable:!0,configurable:!0}),r.find=function(t,r){return void 0===r&&(r=null),(r||e.Application.sceneManager.activeScene).find(t)},r.findWithTag=function(t,r){return void 0===r&&(r=null),(r||e.Application.sceneManager.activeScene).findWithTag(t)},r.findGameObjectsWithTag=function(t,r){return void 0===r&&(r=null),(r||e.Application.sceneManager.activeScene).findGameObjectsWithTag(t)},r.raycast=function(e,t,r,n,i){return void 0===r&&(r=0),void 0===n&&(n=16777215),void 0===i&&(i=!1),egret3d.raycastAll(e,t,r,n,i)},r._instances=[],r._globalGameObject=null,__decorate([e.serializedField,e.editor.property("CHECKBOX")],r.prototype,"isStatic",void 0),__decorate([e.serializedField],r.prototype,"hideFlags",void 0),__decorate([e.serializedField,e.editor.property("LIST",{listItems:e.editor.getItemsFromEnum(e.Layer)})],r.prototype,"layer",void 0),__decorate([e.serializedField,e.editor.property("TEXT")],r.prototype,"name",void 0),__decorate([e.serializedField,e.editor.property("LIST",{listItems:e.editor.getItemsFromEnum(e.DefaultTags)})],r.prototype,"tag",void 0),__decorate([e.serializedField],r.prototype,"extras",void 0),__decorate([e.serializedField],r.prototype,"_activeSelf",void 0),__decorate([e.editor.property("CHECKBOX")],r.prototype,"activeSelf",null),__decorate([e.serializedField,e.deserializedIgnore],r.prototype,"components",null),r}(e.BaseObject);e.GameObject=t,__reflect(t.prototype,"paper.GameObject")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r}return __extends(r,t),r.prototype.onAddComponent=function(t){if(t){if(2===e.Application.playerMode){if(!t.constructor.executeInEditMode)return;t._isReseted||(t._isReseted=!0,t.onReset&&t.onReset())}t.onEnable&&t.onEnable()}},r}(e.BaseSystem);e.EnableSystem=t,__reflect(t.prototype,"paper.EnableSystem")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r}return __extends(r,t),r.prototype.onAddComponent=function(t){t&&!t._isStarted&&(2!==e.Application.playerMode||t.constructor.executeInEditMode)&&(t._isStarted=!0,t.onStart&&t.onStart())},r}(e.BaseSystem);e.StartSystem=t,__reflect(t.prototype,"paper.StartSystem")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r}return __extends(r,t),r.prototype.onUpdate=function(){for(var e=0,t=this._clock.fixedTime,r=Math.min(Math.floor(t/this._clock.fixedDeltaTime),this._clock.maxFixedSubSteps),n=this._groups[0].components;t>=this._clock.fixedDeltaTime&&e++<this._clock.maxFixedSubSteps;){for(var i=0,o=n;i<o.length;i++){var a=o[i];a&&a.onFixedUpdate&&a.onFixedUpdate(e,r)}t-=this._clock.fixedDeltaTime}},r}(e.BaseSystem);e.FixedUpdateSystem=t,__reflect(t.prototype,"paper.FixedUpdateSystem")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r}return __extends(r,t),r.prototype.onUpdate=function(t){var r=this._groups[0].components;if(2===e.Application.playerMode)for(var n=0,i=r;n<i.length;n++){var o=i[n];o&&o.constructor.executeInEditMode&&o.onUpdate&&o.onUpdate(t)}else for(var a=0,s=r;a<s.length;a++){var o=s[a];o&&o.onUpdate&&o.onUpdate(t)}},r}(e.BaseSystem);e.UpdateSystem=t,__reflect(t.prototype,"paper.UpdateSystem")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r._laterCalls=[],r}return __extends(r,t),r.prototype.onUpdate=function(t){var r=this._groups[0].components;if(2===e.Application.playerMode)for(var n=0,i=r;n<i.length;n++){var o=i[n];o&&o.constructor.executeInEditMode&&o.onLateUpdate&&o.onLateUpdate(t)}else for(var a=0,s=r;a<s.length;a++){var o=s[a];o&&o.onLateUpdate&&o.onLateUpdate(t)}if(egret.ticker.update(),this._laterCalls.length>0){for(var l=0,c=this._laterCalls;l<c.length;l++){var u=c[l];u()}this._laterCalls.length=0}},r.prototype.callLater=function(e){this._laterCalls.push(e)},r}(e.BaseSystem);e.LateUpdateSystem=t,__reflect(t.prototype,"paper.LateUpdateSystem")}(paper||(paper={}));var paper;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Behaviour,type:5,isBehaviour:!0}],r._disposeCollecter=e.GameObject.globalGameObject.getOrAddComponent(e.DisposeCollecter),r}return __extends(r,t),r.prototype.onRemoveComponent=function(t){t&&(2!==e.Application.playerMode||t.constructor.executeInEditMode)&&t.onDisable&&t.onDisable()},r.prototype.onUpdate=function(){for(var e=0,t=this._disposeCollecter.scenes;e<t.length;e++){var r=t[e];r.uninitialize()}for(var n=0,i=this._disposeCollecter.gameObjects;n<i.length;n++){var o=i[n];o.uninitialize()}for(var a=0,s=this._disposeCollecter.components;a<s.length;a++){var l=s[a];l.uninitialize()}for(var c=0,u=this._disposeCollecter.releases;c<u.length;c++){var p=u[c],d=p.constructor._instances;p.onClear&&p.onClear(),d.push(p)}this._disposeCollecter.clear()},r}(e.BaseSystem);e.DisableSystem=t,__reflect(t.prototype,"paper.DisableSystem")}(paper||(paper={}));var paper;!function(e){e.serializeClassMap={0:"paper.Scene",1:"paper.GameObject",2:"egret3d.AniPlayer",3:"egret3d.BoxCollider",4:"egret3d.Camera",5:"egret3d.MeshFilter",6:"egret3d.MeshRenderer",7:"egret3d.particle.ParticleComponent",8:"egret3d.particle.ParticleRenderer",9:"egret3d.SkinnedMeshRenderer",10:"egret3d.SphereCollider",11:"egret3d.Transform",12:"egret3d.Shader",15:"egret3d.AnimationClip",16:"egret3d.TPoseInfo",17:"egret3d.PoseBoneMatrix",18:"egret3d.Texture",19:"egret3d.Texture",20:"egret3d.Vector2",21:"egret3d.Vector3",22:"egret3d.Vector4",23:"egret3d.Quaternion",24:"egret3d.Color",25:"egret3d.Gradient",26:"egret3d.Curve",27:"egret3d.Keyframe",28:"egret3d.Rect",29:"egret3d.MainModule",30:"egret3d.EmissionModule",31:"egret3d.ShapeModule",32:"egret3d.VelocityOverLifetimeModule",33:"egret3d.RotationOverLifetimeModule",34:"egret3d.ColorOverLifetimeModule",35:"egret3d.SizeOverLifetimeModule",36:"egret3d.MinMaxCurve",37:"egret3d.MinMaxGradient",38:"egret3d.alphaKey",39:"egret3d.colorKey",40:"egret3d.Animation",41:"egret3d.GLTFAsset",13:"paper.Compatible",14:"paper.Compatible"};var t=function(){function e(){}return e.prototype.serialize=function(){throw new Error("Never")},e.prototype.deserialize=function(e,t){if(!t)throw new Error("Never");return t.getAssetOrComponent(e._glTFAsset)},e}();e.Compatible=t,__reflect(t.prototype,"paper.Compatible",["paper.ISerializable"])}(paper||(paper={}));var paper;!function(e){function t(e,r){void 0===r&&(r=null);var n=e.__serializeKeys;if(n){r=r||{};for(var i in n){var o=n[i];o&&(r[o]=i)}}return e.prototype&&e.prototype.__proto__.constructor!==Object&&t(e.prototype.__proto__.constructor,r),r}function r(e,t){if(void 0===t&&(t=null),e.__deserializeIgnore){t=t||[];for(var n=0,i=e.__deserializeIgnore;n<i.length;n++){var o=i[n];t.push(o)}}return e.prototype&&e.prototype.__proto__.constructor!==Object&&r(e.prototype.__proto__.constructor,t),t}var n="uuid",i="asset",o="class",a="deserialize",s="components",l="extras",c="children",u="missingObject",p=function(){function p(){this.assets=[],this.objects={},this.components={},this.root=null,this._deserializers={},this._prefabRootMap={},this._rootTarget=null}return p.prototype._deserializeObject=function(e,i){var a=t(i.constructor),s=r(i.constructor);for(var c in e)if(c!==o&&c!==l&&(this._keepUUID||c!==n))if(c!==u){var p=a&&c in a?a[c]:c;if(!(s&&s.indexOf(p)>=0)){var d=this._deserializeChild(e[c],i[p]);void 0!==d&&(i[p]=d)}}else i[c]=e[c];return i},p.prototype._deserializeComponent=function(t,r,n){var i=e.serializeClassMap[t["class"]]||t["class"],o=egret.getDefinitionByName(i),a=void 0;if(o){var s=l in t&&t[l].linkedID;if(o===egret3d.Transform){if(a=this.components[t.uuid],c in t)for(var u=0,p=t[c];u<p.length;u++){var d=p[u],h=this.components[d.uuid];h&&h._parent!==a&&(h._parent=a,a._children.push(h))}}else if(s){var f=t[l],_=r[l],m=f.linkedID,v=this._deserializers[_.prefab?r.uuid:_.rootID];a=v.components[m]}else a=(n||this._rootTarget).addComponent(o);!s&&this._makeLink&&a&&(a.extras.linkedID=t.uuid)}else a=n.addComponent(e.MissingComponent),a.missingObject=t;return this.components[t.uuid]=a,a},p.prototype._deserializeChild=function(t,r){if(null===t||void 0===t)return t;switch(typeof t){case"function":return;case"object":if(r){if(ArrayBuffer.isView(r)){for(var s=0,l=Math.min(t.length,r.length);l>s;++s)r[s]=t[s];return r}if(Array.isArray(r)&&0===r.length){for(var s=0,l=t.length;l>s;++s)r[s]=this._deserializeChild(t[s]);return r}if(r[a])return r.deserialize(t,this)}if(Array.isArray(t)){r=[];for(var s=0,l=t.length;l>s;++s)r[s]=this._deserializeChild(t[s]);return r}var c=t[o];if(i in t){var u=t.asset;return u>=0?e.Asset.find(this.assets[u]):null}if(n in t){var p=t.uuid;if(p in this.objects)return this.objects[p];if(p in this.components)return this.components[p];if(c){var d=this._rootTarget instanceof e.GameObject?this._rootTarget.scene:this._rootTarget;if((e.serializeClassMap[c]||c)===egret.getQualifiedClassName(e.GameObject))for(var h=0,f=d.gameObjects;h<f.length;h++){var _=f[h];if(_.uuid===p)return _}else for(var m=0,v=d.gameObjects;m<v.length;m++)for(var _=v[m],g=0,y=_.components;g<y.length;g++){var b=y[g];if(b&&b.uuid===p)return b}}}else{if(!c){r={};for(var x in t)r[x]=this._deserializeChild(t[x]);return r}var T=egret.getDefinitionByName(e.serializeClassMap[c]||c);if(T)return r=new T,r.deserialize(t,this)}return void console.warn("Deserialize error.",t);default:return t}},p.prototype.getAssetOrComponent=function(t){if(i in t){var r=t.asset;return r>=0?e.Asset.find(this.assets[r]):null}var n=t.uuid;return this.components[n]||this.objects[n]},p.prototype.deserialize=function(t,r,n,i){if(void 0===r&&(r=!1),void 0===n&&(n=!1),void 0===i&&(i=null),t.assets)for(var o=0,a=t.assets;o<a.length;o++){var c=a[o];this.assets.push(c)}this._keepUUID=r,this._makeLink=n,this._rootTarget=i;var u=egret.getQualifiedClassName(e.Scene),d=egret.getQualifiedClassName(egret3d.Transform),h={},f=null;if(t.components)for(var _=0,m=t.components;_<m.length;_++){var v=m[_];h[v.uuid]=v}if(t.objects){for(var g=0,y=t.objects;g<y.length;g++){var b=y[g],x=e.serializeClassMap[b["class"]]||b["class"],T=void 0;if(x===u)T=e.Scene.createEmpty(b.name),this._rootTarget=T;else{this._rootTarget||(this._rootTarget=e.Application.sceneManager.activeScene);var C=l in b&&b[l].linkedID;if(C){var S=b[l],E=S.linkedID,M=S.prefab;if(M){var A=M.asset;if(A>=0){var c=this.assets[A];T=e.Prefab.create(c,this._rootTarget),T?(this._deserializers[b.uuid]=p._lastDeserializer,this._prefabRootMap[b.uuid]={rootUUID:T.uuid,root:T}):T=e.GameObject.create("Missing Prefab","",this._rootTarget)}}else{var R=this._deserializers[S.rootID];T=R.objects[E]}}else T=e.GameObject.create("NoName","",this._rootTarget),this._makeLink&&(T.extras.linkedID=b.uuid,f&&(T.extras.rootID=f.uuid));if(T&&s in b)for(var w=0,O=b[s];w<O.length;w++){var L=O[w],P=L.uuid,v=h[P];(e.serializeClassMap[v["class"]]||v["class"])===d&&(this.components[P]=T.transform)}}T&&(this.objects[b.uuid]=T,f=f||T)}for(var D=t.objects.length;D--;){var b=t.objects[D],T=this.objects[b.uuid];if(T&&(this._deserializeObject(b,T),T.constructor===e.GameObject&&s in b))for(var I=0,z=b[s];I<z.length;I++){var L=z[I];this._deserializeComponent(h[L.uuid],b,T)}}for(var P in this._prefabRootMap){var U=this._deserializers[P];for(var N in U.objects){var V=U.objects[N];V instanceof e.GameObject&&V.extras.linkedID&&V.extras.rootID===this._prefabRootMap[P].rootUUID&&(V.extras.rootID=this._prefabRootMap[P].root.uuid)}}}if(t.components)for(var F=0,B=t.components;F<B.length;F++){var v=B[F],P=v.uuid,G=this.components[P];G?this._deserializeObject(v,G):i&&i.constructor===e.GameObject&&(G=this._deserializeComponent(v),f=f||G,this._deserializeObject(v,G))}return p._lastDeserializer=this,this.root=f,f},p}();e.Deserializer=p,__reflect(p.prototype,"paper.Deserializer")
}(paper||(paper={}));var paper;!function(e){function t(t,r){void 0===r&&(r=!1),b&&console.warn("The deserialization is not complete."),x||(x=e.GameObject.create("NoName","",e.Application.sceneManager.globalScene),x.parent=e.GameObject.globalGameObject),_=r,b={version:e.DATA_VERSION,assets:[],objects:[],components:[]},c(t),m.length=0;for(var n in v)delete v[n];x.transform.destroyChildren(),x.removeAllComponents();var i=b;return b=null,i}function r(r){var n=t(r,!0),i=new e.Deserializer;return i.deserialize(n)}function n(t,r){var i=typeof t,a=typeof r;if(i!==a)return!1;if(null===t&&null===r)return!0;if(null===t||null===r)return!1;switch(i){case"undefined":case"boolean":case"number":case"string":case"symbol":case"function":return t===r;case"object":}if((Array.isArray(t)||ArrayBuffer.isView(t))&&(Array.isArray(r)||ArrayBuffer.isView(r))){var s=t.length;if(s!==r.length)return!1;if(0===s)return!0;for(var l=0;s>l;++l)if(!n(t[l],r[l]))return!1;return!0}if(t.constructor!==r.constructor)return!1;if(t instanceof e.Asset||t.constructor===e.GameObject||t instanceof e.BaseComponent)return t===r;if(t.constructor===Object){for(var c in t)if(!n(t[c],r[c]))return!1;return!0}if(egret.is(t,"paper.ISerializable"))return n(t.serialize(),r.serialize());if(t instanceof e.BaseObject)return n(o(t),o(r));throw new Error("Unsupported data.")}function i(e){if(!e.name)return{asset:-1};if(b&&b.assets){var t=b.assets.indexOf(e.name);return 0>t&&(t=b.assets.length,b.assets.push(e.name)),{asset:t}}return{asset:-1}}function o(e){var t=egret.getQualifiedClassName(e),r={"class":t};return u(e,r,null,null),r}function a(e,t){void 0===t&&(t=null);var r=e.__serializeKeys;if(r){t=t||[];for(var n in r)t.push(r[n]||n)}return e.prototype&&e.prototype.__proto__.constructor!==Object&&a(e.prototype.__proto__.constructor,t),t}function s(e){var t=egret.getQualifiedClassName(e);return{uuid:e.uuid,"class":t}}function l(e){for(;!e.extras.prefab;)e=e.parent;return e}function c(t){if(m.indexOf(t.uuid)>=0)return!0;var r=s(t),n=null,i=g;if(t instanceof e.GameObject){if(t.isDestroyed)return console.warn("Missing game object."),!1;if(t.extras&&t.extras.linkedID){var o=l(t),a=o.extras.prefab.name;if(!(a in v)){var c=e.Prefab.create(a,x.scene);c.parent=x,v[a]=e.Deserializer._lastDeserializer}var p=v[a];n=p.objects[t.extras.linkedID],t.extras.prefab&&(i=y)}else n=x;b.objects.push(r)}else if(t instanceof e.BaseComponent){if(t.isDestroyed)return console.warn("Missing component."),!1;if(t.extras&&t.extras.linkedID){var o=l(t.gameObject),a=o.extras.prefab.name;if(!(a in v)){var c=e.Prefab.create(a,x.scene);c.parent=x,v[a]=e.Deserializer._lastDeserializer}var p=v[a];n=p.components[t.extras.linkedID],t.gameObject.extras.prefab&&(i=y)}else n=x.getOrAddComponent(t.constructor);b.components.push(r)}else b.objects.push(r);return m.push(t.uuid),u(t,r,n,i),!0}function u(e,t,r,i){var o=a(e.constructor);if(o)for(var s=0,l=o;s<l.length;s++){var c=l[s];r&&(!i||i.indexOf(c)<0)&&n(e[c],r[c])||(t[c]=p(e[c],e,c))}}function p(t,r,n){if(null===t||void 0===t)return t;switch(typeof t){case"function":return;case"object":if(Array.isArray(t)||ArrayBuffer.isView(t)){for(var a=[],l=0,u=t;l<u.length;l++){var _=u[l],m=p(_,r,n);void 0!==m&&a.push(m)}return a}if(t.constructor===Object){var a={};for(var v in t){var m=p(t[v],r,n);void 0!==m&&(a[v]=m)}return a}if(egret.is(t,"paper.ISerializable"))return t.serialize();if(t instanceof e.BaseObject){if(t.constructor===e.Scene)return;if(t instanceof e.Asset)return i(t);if(t.constructor===e.GameObject||t instanceof e.BaseComponent){if(t.constructor===e.GameObject&&3===t.hideFlags)return;if(t.constructor===egret3d.Transform&&3===t.gameObject.hideFlags)return;if(r)if(r.constructor===e.Scene){if(n===d)return c(t)?{uuid:t.uuid}:void 0}else if(r.constructor===e.GameObject){if(n===h)return c(t)?{uuid:t.uuid}:void 0}else if(r.constructor===egret3d.Transform&&n===f)return c(t.gameObject)?{uuid:t.uuid}:void 0;return s(t)}return o(t)}return void console.warn("Serialize error.",t);default:return t}}e.DATA_VERSION=3,e.DATA_VERSIONS=[e.DATA_VERSION];var d="gameObjects",h="components",f="children",_=!1,m=[],v={},g=["extras"],y=["name","localPosition","localRotation","extras"],b=null,x=null;e.serialize=t,e.clone=r,e.equal=n,e.serializeAsset=i,e.serializeStruct=o}(paper||(paper={}));var egret3d;!function(e){var t,r=e.Vector3.create(),n=e.Quaternion.create(),i=(e.Matrix3.create(),e.Matrix4.create());!function(e){e[e.All=63]="All",e[e.EXT=62]="EXT",e[e.PRS=7]="PRS",e[e.MIM=48]="MIM",e[e.Position=1]="Position",e[e.Rotation=2]="Rotation",e[e.Scale=4]="Scale",e[e.Euler=8]="Euler",e[e.Matrix=16]="Matrix",e[e.InverseMatrix=32]="InverseMatrix"}(t||(t={}));var o=function(t){function o(){var r=null!==t&&t.apply(this,arguments)||this;return r._localDirty=63,r._worldDirty=63,r._worldMatrixDeterminant=0,r._localPosition=e.Vector3.create(),r._localRotation=e.Quaternion.create(),r._localEuler=e.Vector3.create(),r._localEulerAngles=e.Vector3.create(),r._localScale=e.Vector3.ONE.clone(),r._position=e.Vector3.create(),r._rotation=e.Quaternion.create(),r._euler=e.Vector3.create(),r._eulerAngles=e.Vector3.create(),r._scale=e.Vector3.ONE.clone(),r._localToParentMatrix=e.Matrix4.create(),r._worldToLocalMatrix=e.Matrix4.create(),r._localToWorldMatrix=e.Matrix4.create(),r._children=[],r._observers=[],r._parent=null,r}return __extends(o,t),o.prototype._removeFromChildren=function(e){for(var t=0,r=0,n=this._children;r<n.length;r++){var i=n[r];if(i===e){this._children.splice(t,1);break}t++}},o.prototype._getRotationAndScale=function(){var t=e.Matrix3.create().fromScale(this._localScale).release(),r=e.Matrix3.create().fromMatrix4(i.fromRotation(this._localRotation)).release();return this._parent?this._parent._getRotationAndScale().multiply(r).multiply(t):r.multiply(t)},o.prototype._dirtify=function(e,t){if(e){this._localDirty|=48|t,2&t?this._localDirty|=12:4&t&&(this._localDirty|=2)}if(!(this._worldDirty&t&&16&this._worldDirty)){1&t?this._worldDirty|=48|t:this._worldDirty=63;for(var r=0,n=this._children;r<n.length;r++){var i=n[r];i._dirtify(!1,t)}this.gameObject.renderer&&(this.gameObject.renderer._boundingSphereDirty=!0)}var o=this._observers;if(o.length>0)for(var a=0,s=this._observers;a<s.length;a++){var l=s[a];l.onTransformChange()}},o.prototype._updateMatrix=function(e){if(e){var t=this.localToParentMatrix;this._parent?this._localToWorldMatrix.multiply(this._parent.localToWorldMatrix,t):this._localToWorldMatrix.copy(t),this._worldMatrixDeterminant=this._localToWorldMatrix.determinant,this._worldDirty&=-17}else 2&this._localDirty||4&this._localDirty?(this._localToParentMatrix.compose(this.localPosition,this.localRotation,this.localScale),this._localDirty&=-8):1&this._localDirty&&(this._localToParentMatrix.fromTranslate(this.localPosition,!0),this._localDirty&=-2),this._localDirty&=-17},o.prototype._updateEuler=function(e,t){e?(this.localToWorldMatrix.toEuler(this._euler,t),this._eulerAngles.multiplyScalar(57.29577951308232,this._euler),this._worldDirty&=-9):(this.localToParentMatrix.toEuler(this._localEuler,t),this._localEulerAngles.multiplyScalar(57.29577951308232,this._localEuler),this._localDirty&=-9)},o.prototype._onParentChange=function(e,t){var r=t?t.gameObject.activeInHierarchy:this.gameObject.activeSelf;(e?e.gameObject.activeInHierarchy:this.gameObject.activeSelf)!==r&&this.gameObject._activeInHierarchyDirty(r),this._dirtify(!1,7);var n=paper.disposeCollecter.parentChangedGameObjects;n.indexOf(this.gameObject)<0&&paper.disposeCollecter.parentChangedGameObjects.push(this.gameObject)},o.prototype._onPositionUpdate=function(e){e===this._localPosition?this._dirtify(!0,1):this.position=e},o.prototype._onRotationUpdate=function(e){e===this._localRotation?this._dirtify(!0,2):this.rotation=e},o.prototype._onEulerUpdate=function(e){e===this._localEuler?this.localEuler=e:this.euler=e},o.prototype._onEulerAnglesUpdate=function(e){e===this._localEulerAngles?this.localEulerAngles=e:this.eulerAngles=e},o.prototype._onScaleUpdate=function(e){e===this._localScale?this._dirtify(!0,4):this.scale=e},o.prototype.initialize=function(){t.prototype.initialize.call(this),this._localPosition.onUpdateTarget=this._position.onUpdateTarget=this,this._localPosition.onUpdate=this._position.onUpdate=this._onPositionUpdate,this._localRotation.onUpdateTarget=this._rotation.onUpdateTarget=this,this._localRotation.onUpdate=this._rotation.onUpdate=this._onRotationUpdate,this._localEuler.onUpdateTarget=this._euler.onUpdateTarget=this,this._localEuler.onUpdate=this._euler.onUpdate=this._onEulerUpdate,this._localEulerAngles.onUpdateTarget=this._eulerAngles.onUpdateTarget=this,this._localEulerAngles.onUpdate=this._eulerAngles.onUpdate=this._onEulerAnglesUpdate,this._localScale.onUpdateTarget=this._scale.onUpdateTarget=this,this._localScale.onUpdate=this._scale.onUpdate=this._onScaleUpdate},o.prototype.uninitialize=function(){t.prototype.uninitialize.call(this),this._children.length=0,this._observers.length=0},o.prototype.getAllChildren=function(e){void 0===e&&(e=[]);for(var t=0,r=this._children;t<r.length;t++){var n=r[t];if(Array.isArray(e))e.push(n);else{var i=n.gameObject.name;if(i in e){var o=e[i];Array.isArray(o)?o.push(n):e[i]=[o,n]}else e[i]=n}n.getAllChildren(e)}return e},o.prototype.destroyChildren=function(){for(var e=this._children.length;e--;)this._children[e].gameObject.destroy()},o.prototype.registerObserver=function(e){var t=this._observers;t.indexOf(e)<0&&t.push(e)},o.prototype.unregisterObserver=function(e){var t=this._observers,r=t.indexOf(e);r>=0&&t.splice(r,1)},o.prototype.contains=function(e){if(e===this)return!1;for(var t=e;t!==this&&null!==t;)t=t.parent;return t===this},o.prototype.setParent=function(e,t){void 0===t&&(t=!1);var i=this._parent;return i===e?this:e&&this.gameObject.scene!==e.gameObject.scene?(console.warn("Cannot change the parent to a different scene."),this):this===e||e&&this.contains(e)?(console.error("Set the parent error."),this):(t&&(r.copy(this.position),n.copy(this.rotation)),i&&i._removeFromChildren(this),e&&e._children.push(this),this._parent=e,this._onParentChange(e,i),t&&(this.position=r,this.rotation=n),this)},o.prototype.getChildIndex=function(e){return e.parent!==this?-1:this._children.indexOf(e)},o.prototype.setChildIndex=function(e,t){if(e.parent===this){var r=this._children.indexOf(e);r!==t&&(this._children.splice(r,1),this._children.splice(t,0,e))}},o.prototype.getChildAt=function(e){return e>=0&&e<this._children.length?this._children[e]:null},o.prototype.find=function(e){for(var t=e.split("/"),r=this,n=0,i=t;n<i.length;n++){var o=i[n];if(!o)return r;for(var a=r,s=0,l=r._children;s<l.length;s++){var c=l[s];if(c.gameObject.name===o){r=c;break}}if(a===r)return null}return r},o.prototype.setLocalPosition=function(e,t,r){var n=this._localPosition;return e.hasOwnProperty("x")?(n.x=e.x,n.y=e.y,n.z=e.z):(n.x=e,n.y=t||0,n.z=r||0),this._dirtify(!0,1),this},Object.defineProperty(o.prototype,"localPosition",{get:function(){return this._localPosition},set:function(e){this._localPosition.x=e.x,this._localPosition.y=e.y,this._localPosition.z=e.z,this._dirtify(!0,1)},enumerable:!0,configurable:!0}),o.prototype.setLocalRotation=function(e,t,r,n){return e.hasOwnProperty("x")?(this._localRotation.x=e.x,this._localRotation.y=e.y,this._localRotation.z=e.z,this._localRotation.w=e.w):(this._localRotation.x=e,this._localRotation.y=t||0,this._localRotation.z=r||0,this._localRotation.w=void 0!==n?n:1),this._dirtify(!0,2),this},Object.defineProperty(o.prototype,"localRotation",{get:function(){return this._localRotation},set:function(e){this._localRotation.x=e.x,this._localRotation.y=e.y,this._localRotation.z=e.z,this._localRotation.w=e.w,this._dirtify(!0,2)},enumerable:!0,configurable:!0}),o.prototype.setLocalEuler=function(e,t,r,n){return e.hasOwnProperty("x")?(this._localEuler.x=e.x,this._localEuler.y=e.y,this._localEuler.z=e.z,this._localEulerAngles.multiplyScalar(57.29577951308232,this._localEuler),this._localRotation.fromEuler(this._localEuler,t)):(this._localEuler.x=e,this._localEuler.y=t,this._localEuler.z=r,this._localEulerAngles.multiplyScalar(57.29577951308232,this._localEuler),this._localRotation.fromEuler(this._localEuler,n)),this._dirtify(!0,2),this._localDirty&=-9,this},Object.defineProperty(o.prototype,"localEuler",{get:function(){return 8&this._localDirty&&this._updateEuler(!1),this._localEuler},set:function(e){this._localEuler.x=e.x,this._localEuler.y=e.y,this._localEuler.z=e.z,this._localEulerAngles.multiplyScalar(57.29577951308232,this._localEuler),this._localRotation.fromEuler(this._localEuler),this._dirtify(!0,2),this._localDirty&=-9},enumerable:!0,configurable:!0}),o.prototype.setLocalEulerAngles=function(e,t,r,n){return e.hasOwnProperty("x")?(this._localEulerAngles.x=e.x,this._localEulerAngles.y=e.y,this._localEulerAngles.z=e.z,this._localEuler.multiplyScalar(.017453292519943295,this._localEulerAngles),this._localRotation.fromEuler(this._localEuler,t)):(this._localEulerAngles.x=e,this._localEulerAngles.y=t,this._localEulerAngles.z=r,this._localEuler.multiplyScalar(.017453292519943295,this._localEulerAngles),this._localRotation.fromEuler(this._localEuler,n)),this._dirtify(!0,2),this._localDirty&=-9,this},Object.defineProperty(o.prototype,"localEulerAngles",{get:function(){return 8&this._localDirty&&this._updateEuler(!1),this._localEulerAngles},set:function(e){this._localEulerAngles.x=e.x,this._localEulerAngles.y=e.y,this._localEulerAngles.z=e.z,this._localEuler.multiplyScalar(.017453292519943295,this._localEulerAngles),this._localRotation.fromEuler(this._localEuler),this._dirtify(!0,2),this._localDirty&=-9},enumerable:!0,configurable:!0}),o.prototype.setLocalScale=function(e,t,r){return e.hasOwnProperty("x")?(this._localScale.x=e.x,this._localScale.y=e.y,this._localScale.z=e.z):(this._localScale.x=e,this._localScale.y=void 0!==t?t:e,this._localScale.z=void 0!==r?r:e),this._dirtify(!0,4),this},Object.defineProperty(o.prototype,"localScale",{get:function(){return this._localScale},set:function(e){this._localScale.x=e.x,this._localScale.y=e.y,this._localScale.z=e.z,this._dirtify(!0,4)},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"localToParentMatrix",{get:function(){return 16&this._localDirty&&this._updateMatrix(!1),this._localToParentMatrix},enumerable:!0,configurable:!0}),o.prototype.setPosition=function(e,t,r){return e.hasOwnProperty("x")?(this._localPosition.x=e.x,this._localPosition.y=e.y,this._localPosition.z=e.z):(this._localPosition.x=e,this._localPosition.y=t||0,this._localPosition.z=r||0),this._parent&&this._localPosition.applyMatrix(this._parent.worldToLocalMatrix),this._dirtify(!0,1),this},Object.defineProperty(o.prototype,"position",{get:function(){return 1&this._worldDirty&&(this.localToWorldMatrix.decompose(this._position,null,null),this._worldDirty&=-2),this._position},set:function(e){this._localPosition.x=e.x,this._localPosition.y=e.y,this._localPosition.z=e.z,this._parent&&this._localPosition.applyMatrix(this._parent.worldToLocalMatrix),this._dirtify(!0,1)},enumerable:!0,configurable:!0}),o.prototype.setRotation=function(e,t,r,i){return e.hasOwnProperty("x")?(this._localRotation.x=e.x,this._localRotation.y=e.y,this._localRotation.z=e.z,this._localRotation.w=e.w):(this._localRotation.x=e,this._localRotation.y=t||0,this._localRotation.z=r||0,this._localRotation.w=void 0!==i?i:1),this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2),this},Object.defineProperty(o.prototype,"rotation",{get:function(){return 2&this._worldDirty&&(this.localToWorldMatrix.decompose(null,this._rotation,null),this._worldDirty&=-3),this._rotation},set:function(e){this._localRotation.x=e.x,this._localRotation.y=e.y,this._localRotation.z=e.z,this._localRotation.w=e.w,this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2)},enumerable:!0,configurable:!0}),o.prototype.setEuler=function(e,t,i,o){return e.hasOwnProperty("x")?this._localRotation.fromEuler(e,t):(r.set(e,t,i),this._localRotation.fromEuler(r,o)),this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2),this},Object.defineProperty(o.prototype,"euler",{get:function(){return 8&this._worldDirty&&this._updateEuler(!0),this._euler},set:function(e){this._localRotation.fromEuler(e),this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2)},enumerable:!0,configurable:!0}),o.prototype.setEulerAngles=function(e,t,i,o){return e.hasOwnProperty("x")?(r.multiplyScalar(.017453292519943295,e),this._localRotation.fromEuler(r,t)):(r.set(.017453292519943295*e,.017453292519943295*t,.017453292519943295*i),this._localRotation.fromEuler(r,o)),this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2),this},Object.defineProperty(o.prototype,"eulerAngles",{get:function(){return 8&this._worldDirty&&this._updateEuler(!0),this._eulerAngles},set:function(e){r.multiplyScalar(.017453292519943295,e),this._localRotation.fromEuler(r),this._parent&&this._localRotation.premultiply(n.inverse(this._parent.rotation)).normalize(),this._dirtify(!0,2)},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"scale",{get:function(){return 4&this._worldDirty&&(this.localToWorldMatrix.decompose(null,null,this._scale),this._worldDirty&=-5),this._scale},set:function(e){console.error("Can not set transform scale."),this.localScale=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"localToWorldMatrix",{get:function(){return 16&this._worldDirty&&this._updateMatrix(!0),this._localToWorldMatrix},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"worldToLocalMatrix",{get:function(){return 32&this._worldDirty&&(this._worldToLocalMatrix.inverse(this.localToWorldMatrix),this._worldDirty&=-33),this._worldToLocalMatrix},enumerable:!0,configurable:!0}),o.prototype.translate=function(e,t,n,i){return e.hasOwnProperty("x")?t?this.position=this._localPosition.add(e,this.position):this.localPosition=this._localPosition.add(e):(r.set(e,t,n),i?this.position=this._localPosition.add(r,this.position):this.localPosition=this._localPosition.add(r)),this},o.prototype.rotate=function(e,t,n,i){return e.hasOwnProperty("x")?t?this.euler=this._localEuler.add(e,this.euler):(this.localEuler,this.localEuler=this._localEuler.add(e)):(r.set(e,t,n),i?this.euler=this._localEuler.add(r,this.euler):(this.localEuler,this.localEuler=this._localEuler.add(r))),this},o.prototype.rotateOnAxis=function(e,t,r){return n.fromAxis(e,t),r?this.localRotation=this._localRotation.premultiply(n).normalize():this.localRotation=this._localRotation.multiply(n).normalize(),this},o.prototype.rotateAround=function(e,t,r){return this.rotateOnAxis(t,r,!0),this.position=this._localPosition.applyMatrix(i.fromRotation(n.fromAxis(t,r)).fromTranslate(e,!0),this.position),this},o.prototype.lookAt=function(t,r){return void 0===r&&(r=e.Vector3.UP),this.rotation=this._localRotation.fromMatrix(i.lookAt(this.position,t instanceof o?t.position:t,r)),this},o.prototype.lookRotation=function(t,r){return void 0===r&&(r=e.Vector3.UP),this.rotation=this._localRotation.fromMatrix(i.lookRotation(t,r)),this},o.prototype.getRight=function(t){return t||(t=e.Vector3.create()),t.applyDirection(this.localToWorldMatrix,e.Vector3.RIGHT)},o.prototype.getUp=function(t){return t||(t=e.Vector3.create()),t.applyDirection(this.localToWorldMatrix,e.Vector3.UP)},o.prototype.getForward=function(t){return t||(t=e.Vector3.create()),t.applyDirection(this.localToWorldMatrix,e.Vector3.FORWARD)},Object.defineProperty(o.prototype,"childCount",{get:function(){return this._children.length},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"children",{get:function(){return this._children},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"parent",{get:function(){return this._parent},set:function(e){this.setParent(e,!1)},enumerable:!0,configurable:!0}),o.prototype.getLocalPosition=function(){return this._localPosition},o.prototype.getLocalRotation=function(){return this._localRotation},o.prototype.getLocalEuler=function(e){return 8&this._localDirty&&this._updateEuler(!1,e),this._localEuler},o.prototype.getLocalEulerAngles=function(e){return 8&this._localDirty&&this._updateEuler(!1,e),this._localEulerAngles},o.prototype.getLocalScale=function(){return this._localScale},o.prototype.getPosition=function(){return 1&this._worldDirty&&(this.localToWorldMatrix.decompose(this._position,null,null),this._worldDirty&=-2),this._position},o.prototype.getRotation=function(){return 2&this._worldDirty&&(this.localToWorldMatrix.decompose(null,this._rotation,null),this._worldDirty&=-3),this._rotation},o.prototype.getEuler=function(e){return 8&this._worldDirty&&this._updateEuler(!0,e),this._euler},o.prototype.getEulerAngles=function(e){return 8&this._worldDirty&&this._updateEuler(!0,e),this._eulerAngles},o.prototype.getScale=function(){return 4&this._worldDirty&&(this.localToWorldMatrix.decompose(null,null,this._scale),this._worldDirty&=-5),this._scale},o.prototype.setScale=function(t,r,n){return console.error("Can not set transform scale."),t instanceof e.Vector3?this.localScale=t:this.localScale.set(t,void 0===r?t:r,void 0===n?t:n),this},o.prototype.getLocalMatrix=function(){return 16&this._localDirty&&this._updateMatrix(!1),this._localToParentMatrix},o.prototype.getWorldMatrix=function(){return 16&this._worldDirty&&this._updateMatrix(!0),this._localToWorldMatrix},Object.defineProperty(o.prototype,"localMatrix",{get:function(){return 16&this._localDirty&&this._updateMatrix(!1),this._localToParentMatrix},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"worldMatrix",{get:function(){return 16&this._worldDirty&&this._updateMatrix(!0),this._localToWorldMatrix},enumerable:!0,configurable:!0}),__decorate([paper.serializedField("localPosition")],o.prototype,"_localPosition",void 0),__decorate([paper.serializedField("localRotation")],o.prototype,"_localRotation",void 0),__decorate([paper.serializedField("localScale")],o.prototype,"_localScale",void 0),__decorate([paper.editor.property("VECTOR3")],o.prototype,"localPosition",null),__decorate([paper.editor.property("VECTOR3",{step:1})],o.prototype,"localEulerAngles",null),__decorate([paper.editor.property("VECTOR3")],o.prototype,"localScale",null),__decorate([paper.serializedField,paper.deserializedIgnore],o.prototype,"children",null),o}(paper.BaseComponent);e.Transform=o,__reflect(o.prototype,"egret3d.Transform")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.onScreenResize=new signals.Signal,e.onResize=new signals.Signal,e.scaler=1,e._rotated=!1,e._matchFactor=1,e._screenSize={w:1024,h:1024},e._size={w:1024,h:1024},e._viewport={x:0,y:0,w:0,h:0},e}return __extends(r,t),r.prototype._updateViewport=function(){var t=this._screenSize,r=this._size,n=this._viewport;if(paper.Application.isMobile){var i=t.w,o=t.h;(this._rotated=r.w>r.h?t.h>t.w:t.w>t.h)&&(i=t.h,o=t.w);var a=r.w/i,s=r.h/o;this.scaler=e.math.lerp(a,s,this._matchFactor),n.w=Math.ceil(i*this.scaler),n.h=Math.ceil(o*this.scaler)}else{var a=Math.min(r.w,t.w)/t.w,s=r.h/t.h;this.scaler=e.math.lerp(a,s,this._matchFactor),this._rotated=!1,n.w=Math.ceil(t.w*this.scaler),n.h=Math.ceil(t.h*this.scaler)}},r.prototype.initialize=function(r){t.prototype.initialize.call(this),e.stage=this,this._size.w=r.size.w||2,this._size.h=r.size.h||2,this._screenSize.w=r.screenSize.w||2,this._screenSize.h=r.screenSize.h||2,this._updateViewport()},r.prototype.screenToStage=function(e,t){var r=this._screenSize,n=this._viewport,i=e.x,o=e.y;return this._rotated?(t.y=(r.w-(i-n.x))*(n.w/r.h),t.x=(o-n.y)*(n.h/r.w)):(t.x=(i-n.x)*(n.w/r.w),t.y=(o-n.y)*(n.h/r.h)),this},r.prototype.stageToScreen=function(e,t){return this},Object.defineProperty(r.prototype,"rotated",{get:function(){return this._rotated},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"matchFactor",{get:function(){return this._matchFactor},set:function(e){this._matchFactor!==e&&(this._matchFactor=e,this._updateViewport(),this.onResize.dispatch())},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"screenSize",{get:function(){return this._screenSize},set:function(e){this._screenSize.w=e.w||2,this._screenSize.h=e.h||2,this._updateViewport(),this.onScreenResize.dispatch()},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"size",{get:function(){return this._size},set:function(e){this._size.w=e.w||2,this._size.h=e.h||2,this._updateViewport(),this.onResize.dispatch()},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"viewport",{get:function(){return this._viewport},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"screenViewport",{get:function(){return this._viewport},enumerable:!0,configurable:!0}),__decorate([paper.editor.property("CHECKBOX",{readonly:!0})],r.prototype,"rotated",null),__decorate([paper.editor.property("FLOAT",{minimum:0,maximum:1})],r.prototype,"matchFactor",null),__decorate([paper.editor.property("SIZE")],r.prototype,"screenSize",null),__decorate([paper.editor.property("SIZE")],r.prototype,"size",null),__decorate([paper.editor.property("RECT",{readonly:!0})],r.prototype,"viewport",null),r}(paper.SingletonComponent);e.Stage=t,__reflect(t.prototype,"egret3d.Stage"),e.stage=null}(egret3d||(egret3d={}));var egret3d;!function(e){var t=(e.Vector3.create(),function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype.initialize=function(){t.prototype.initialize.call(this);var n=e.MeshBuilder.createPlane();n._isBuiltin=!0,n.name="builtin/quad.mesh.bin",paper.Asset.register(n),r.QUAD=n;var n=e.MeshBuilder.createPlane(1,1,-.5,0);n._isBuiltin=!0,n.name="builtin/quad_particle.mesh.bin",paper.Asset.register(n),r.QUAD_PARTICLE=n;var n=e.MeshBuilder.createPlane(2,2);n._isBuiltin=!0,n.name="builtin/fullscreen_quad.mesh.bin",paper.Asset.register(n),r.FULLSCREEN_QUAD=n;for(var i=n.getUVs(),o=1,a=i.length;a>o;o+=2)i[o]=1-i[o];var n=e.MeshBuilder.createPlane(10,10);n._isBuiltin=!0,n.name="builtin/plane.mesh.bin",paper.Asset.register(n),r.PLANE=n;var n=e.MeshBuilder.createCube();n._isBuiltin=!0,n.name="builtin/cube.mesh.bin",paper.Asset.register(n),r.CUBE=n;var n=e.MeshBuilder.createCylinder(0,Math.sqrt(.5),1,0,0,0,4,1,!1,.25*Math.PI);n._isBuiltin=!0,n.name="builtin/pyramid.mesh.bin",paper.Asset.register(n),r.PYRAMID=n;var n=e.MeshBuilder.createCylinder(0,.5,1,0,0,0,16,1);n._isBuiltin=!0,n.name="builtin/cone.mesh.bin",paper.Asset.register(n),r.CONE=n;var n=e.MeshBuilder.createCylinder();n._isBuiltin=!0,n.name="builtin/cylinder.mesh.bin",paper.Asset.register(n),r.CYLINDER=n;var n=e.MeshBuilder.createTorus();n._isBuiltin=!0,n.name="builtin/torus.mesh.bin",paper.Asset.register(n),r.TORUS=n;var n=e.MeshBuilder.createSphere();n._isBuiltin=!0,n.name="builtin/sphere.mesh.bin",paper.Asset.register(n),r.SPHERE=n;var n=new e.Mesh(4,2,["POSITION","COLOR_0"]);n._isBuiltin=!0,n.name="builtin/line_x.mesh.bin",n.glTFMesh.primitives[0].mode=1,paper.Asset.register(n),r.LINE_X=n,n.setAttributes("POSITION",[0,0,0,1,0,0,0,0,0,1,0,0]),n.setAttributes("COLOR_0",[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]),n.setIndices([0,1],0);var n=new e.Mesh(4,2,["POSITION","COLOR_0"]);n._isBuiltin=!0,n.name="builtin/line_y.mesh.bin",n.glTFMesh.primitives[0].mode=1,paper.Asset.register(n),r.LINE_Y=n,n.setAttributes("POSITION",[0,0,0,0,1,0,0,0,0,0,1,0]),n.setAttributes("COLOR_0",[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]),n.setIndices([0,1],0);var n=new e.Mesh(4,2,["POSITION","COLOR_0"]);n._isBuiltin=!0,n.name="builtin/line_z.mesh.bin",n.glTFMesh.primitives[0].mode=1,paper.Asset.register(n),r.LINE_Z=n,n.setAttributes("POSITION",[0,0,0,0,0,1,0,0,0,0,0,1]),n.setAttributes("COLOR_0",[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]),n.setIndices([0,1],0);var n=e.MeshBuilder.createCircle();n._isBuiltin=!0,n.name="builtin/circle_line.mesh.bin",paper.Asset.register(n),r.CIRCLE_LINE=n;var n=new e.Mesh(8,24,["POSITION","COLOR_0"]);n._isBuiltin=!0,n.name="builtin/cube_line.mesh.bin",n.glTFMesh.primitives[0].mode=1,paper.Asset.register(n),r.CUBE_LINE=n,n.setAttributes("POSITION",[-.5,.5,-.5,.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.5,.5,.5,.5,.5,-.5,.5,-.5,-.5,.5,-.5,.5,.5]),n.setAttributes("COLOR_0",[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]),n.setIndices([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,7,1,4,2,5,3,6])},r.createObject=function(t,r,n,i){var o=paper.GameObject.create(r,n,i),a=o.addComponent(e.MeshFilter),s=o.addComponent(e.MeshRenderer);switch(a.mesh=t,t){case this.QUAD:case this.QUAD_PARTICLE:case this.PLANE:s.material=e.DefaultMaterials.MESH_BASIC_DOUBLESIDE;break;case this.LINE_X:case this.LINE_Y:case this.LINE_Z:s.material=e.DefaultMaterials.LINEDASHED_COLOR;break;case this.CIRCLE_LINE:case this.CUBE_LINE:s.material=e.DefaultMaterials.LINEDASHED}return o},r.createPlane=function(t,r,n,i,o,a){return void 0===t&&(t=1),void 0===r&&(r=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=1),void 0===a&&(a=1),e.MeshBuilder.createPlane(t,r,n,i,o,a)},r.createCube=function(t,r,n,i,o,a,s,l,c,u){return void 0===t&&(t=1),void 0===r&&(r=1),void 0===n&&(n=1),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===s&&(s=1),void 0===l&&(l=1),void 0===c&&(c=1),void 0===u&&(u=!1),e.MeshBuilder.createCube(t,r,n,i,o,a,s,l,c,u)},r.createCylinder=function(t,r,n,i,o,a,s,l,c,u,p,d){return void 0===t&&(t=.5),void 0===r&&(r=.5),void 0===n&&(n=1),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===s&&(s=16),void 0===l&&(l=1),void 0===c&&(c=!1),void 0===u&&(u=0),void 0===p&&(p=2*Math.PI),void 0===d&&(d=!1),e.MeshBuilder.createCylinder(t,r,n,i,o,a,s,l,c,u,p,d)},r.createCircle=function(t,r,n){return void 0===t&&(t=.5),void 0===r&&(r=1),void 0===n&&(n=1),e.MeshBuilder.createCircle(t,r,n)},r.createTorus=function(t,r,n,i,o,a){return void 0===t&&(t=.5),void 0===r&&(r=.1),void 0===n&&(n=4),void 0===i&&(i=12),void 0===o&&(o=1),void 0===a&&(a=1),e.MeshBuilder.createTorus(t,r,n,i,o,a)},r.createSphere=function(t,r,n,i,o,a,s,l,c,u){return void 0===t&&(t=.5),void 0===r&&(r=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=24),void 0===a&&(a=12),void 0===s&&(s=0),void 0===l&&(l=2*Math.PI),void 0===c&&(c=0),void 0===u&&(u=Math.PI),e.MeshBuilder.createSphere(t,r,n,i,o,a,s,l,c,u)},__decorate([paper.deprecated("1.4")],r,"createPlane",null),__decorate([paper.deprecated("1.4")],r,"createCube",null),__decorate([paper.deprecated("1.4")],r,"createCylinder",null),__decorate([paper.deprecated("1.4")],r,"createCircle",null),__decorate([paper.deprecated("1.4")],r,"createTorus",null),__decorate([paper.deprecated("1.4")],r,"createSphere",null),r}(paper.SingletonComponent));e.DefaultMeshes=t,__reflect(t.prototype,"egret3d.DefaultMeshes")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype.initialize=function(){t.prototype.initialize.call(this);var n=e.GLTexture2D.createColorTexture("builtin/white.image.json",255,255,255);n._isBuiltin=!0,r.WHITE=n,paper.Asset.register(n);var n=e.GLTexture2D.createColorTexture("builtin/gray.image.json",128,128,128);n._isBuiltin=!0,r.GRAY=n,paper.Asset.register(n);var n=e.GLTexture2D.createGridTexture("builtin/grid.image.json");n._isBuiltin=!0,r.GRID=n,paper.Asset.register(n);var n=e.GLTexture2D.createColorTexture("builtin/missing.image.json",255,0,255);n._isBuiltin=!0,r.MISSING=n,paper.Asset.register(n);var n=new e.GlRenderTarget("builtin/post_processing.image.json",e.stage.viewport.w,e.stage.viewport.h,!0);n._isBuiltin=!0,r.POST_PROCESSING=n,paper.Asset.register(n)},r}(paper.SingletonComponent);e.DefaultTextures=t,__reflect(t.prototype,"egret3d.DefaultTextures")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype._createShader=function(t,r,n,i,o){var a=new e.Shader(r,t);
if(a._isBuiltin=!0,n&&(a._renderQueue=n),o&&(a._defines=o),i){var s=e.GLTFAsset.copyTechniqueStates(i);s&&(a._states=s)}return paper.Asset.register(a),a},r.prototype.initialize=function(){t.prototype.initialize.call(this);var n=new e.Material(new e.Shader(e.ShaderLib.meshbasic,""));n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.MESH_BASIC=this._createShader("builtin/meshbasic.shader.json",e.ShaderLib.meshbasic,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0),r.MESH_BASIC_DOUBLESIDE=this._createShader("builtin/meshbasic_doubleside.shader.json",e.ShaderLib.meshbasic,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.MESH_LAMBERT=this._createShader("builtin/meshlambert.shader.json",e.ShaderLib.meshlambert,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0),r.MESH_LAMBERT_DOUBLESIDE=this._createShader("builtin/meshlambert_doubleside.shader.json",e.ShaderLib.meshlambert,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.MESH_PHONG=this._createShader("builtin/meshphong.shader.json",e.ShaderLib.meshphong,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0),r.MESH_PHONE_DOUBLESIDE=this._createShader("builtin/meshphong_doubleside.shader.json",e.ShaderLib.meshphong,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.MESH_PHYSICAL=this._createShader("builtin/meshphysical.shader.json",e.ShaderLib.meshphysical,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0),r.MESH_PHYSICAL_DOUBLESIDE=this._createShader("builtin/meshphysical_doubleside.shader.json",e.ShaderLib.meshphysical,2e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!1).setCullFace(!0,2305,1029).setBlend(1,3e3),r.TRANSPARENT=this._createShader("builtin/transparent.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!1).setBlend(1,3e3),r.TRANSPARENT_DOUBLESIDE=this._createShader("builtin/transparent_doubleside.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!1).setCullFace(!0,2305,1029).setBlend(3,3e3),r.TRANSPARENT_ADDITIVE=this._createShader("builtin/transparent_additive.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!1).setBlend(3,3e3),r.TRANSPARENT_ADDITIVE_DOUBLESIDE=this._createShader("builtin/transparent_additive_doubleside.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!1).setCullFace(!0,2305,1029).setBlend(7,3e3),r.TRANSPARENT_MULTIPLY=this._createShader("builtin/transparent_multiply.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!1).setBlend(7,3e3),r.TRANSPARENT_MULTIPLY_DOUBLESIDE=this._createShader("builtin/transparent_multiply_doubleside.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states,["USE_MAP"]),n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.LINEDASHED=this._createShader("builtin/linedashed.shader.json",e.ShaderLib.linedashed,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0).setCullFace(!0,2305,1029),r.VERTEX_COLOR=this._createShader("builtin/vertcolor.shader.json",e.ShaderLib.meshbasic,2e3,n.glTFTechnique.states,["USE_MAP","USE_COLOR"]),n.clearStates().setDepth(!0,!0),r.MATERIAL_COLOR=this._createShader("builtin/materialcolor.shader.json",e.ShaderLib.meshbasic,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!1).setCullFace(!0,2305,1029).setBlend(1,3e3),r.TRANSPARENT_COLOR=this._createShader("builtin/transparent_color.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!1).setCullFace(!0,2305,1029).setBlend(3,3e3),r.TRANSPARENT_ADDITIVE_COLOR=this._createShader("builtin/transparent_additive_color.shader.json",e.ShaderLib.meshbasic,3e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.PARTICLE=this._createShader("builtin/particle.shader.json",e.ShaderLib.particle,2e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!1).setBlend(1,3e3),r.PARTICLE_BLEND=this._createShader("builtin/particle_blend.shader.json",e.ShaderLib.particle,3e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!1).setBlend(3,3e3),r.PARTICLE_ADDITIVE=this._createShader("builtin/particle_additive.shader.json",e.ShaderLib.particle,3e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!1).setBlend(7,3e3),r.PARTICLE_MULTIPLY=this._createShader("builtin/particle_multiply.shader.json",e.ShaderLib.particle,3e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!1).setBlend(2,3e3),r.PARTICLE_BLEND_PREMULTIPLY=this._createShader("builtin/particle_blend_premultiply.shader.json",e.ShaderLib.particle,3e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!1).setBlend(4,3e3),r.PARTICLE_ADDITIVE_PREMULTIPLY=this._createShader("builtin/particle_additive_premultiply.shader.json",e.ShaderLib.particle,3e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!1).setBlend(8,3e3),r.PARTICLE_MULTIPLY_PREMULTIPLY=this._createShader("builtin/particle_multiply_premultiply.shader.json",e.ShaderLib.particle,3e3,n.glTFTechnique.states,["USE_COLOR"]),n.clearStates().setDepth(!0,!0),r.CUBE=this._createShader("builtin/cube.shader.json",e.ShaderLib.cube,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.DEPTH=this._createShader("builtin/depth.shader.json",e.ShaderLib.depth,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.DISTANCE_RGBA=this._createShader("builtin/distanceRGBA.shader.json",e.ShaderLib.distanceRGBA,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.EQUIRECT=this._createShader("builtin/equirect.shader.json",e.ShaderLib.equirect,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.NORMAL=this._createShader("builtin/normal.shader.json",e.ShaderLib.normal,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.POINTS=this._createShader("builtin/points.shader.json",e.ShaderLib.points,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.SHADOW=this._createShader("builtin/shadow.shader.json",e.ShaderLib.shadow,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!0,!0),r.SPRITE=this._createShader("builtin/sprite.shader.json",e.ShaderLib.sprite,2e3,n.glTFTechnique.states),n.clearStates().setDepth(!1,!1),r.COPY=this._createShader("builtin/copy.shader.json",e.ShaderLib.copy,2e3,n.glTFTechnique.states,["USE_MAP"]),n.dispose()},r}(paper.SingletonComponent);e.DefaultShaders=t,__reflect(t.prototype,"egret3d.DefaultShaders")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype._createMaterial=function(t,r,n){void 0===n&&(n=2e3);var i=new e.Material(r);return i.name=t,i.renderQueue=n,i._isBuiltin=!0,paper.Asset.register(i),i},r.prototype.initialize=function(){t.prototype.initialize.call(this),r.MESH_BASIC=this._createMaterial("builtin/meshbasic.mat.json",e.DefaultShaders.MESH_BASIC).setTexture(e.DefaultTextures.WHITE),r.MESH_BASIC_DOUBLESIDE=this._createMaterial("builtin/meshbasic_doubleside.mat.json",e.DefaultShaders.MESH_BASIC).setTexture(e.DefaultTextures.WHITE).setCullFace(!1),r.MESH_LAMBERT=this._createMaterial("builtin/meshlambert.mat.json",e.DefaultShaders.MESH_LAMBERT).setTexture(e.DefaultTextures.WHITE),r.MESH_LAMBERT_DOUBLESIDE=this._createMaterial("builtin/meshlambert_doubleside.mat.json",e.DefaultShaders.MESH_LAMBERT).setTexture(e.DefaultTextures.WHITE).setCullFace(!1),r.LINEDASHED=this._createMaterial("builtin/linedashed.mat.json",e.DefaultShaders.LINEDASHED),r.LINEDASHED_COLOR=this._createMaterial("builtin/linedashed_color.mat.json",e.DefaultShaders.LINEDASHED).addDefine("USE_COLOR"),r.MISSING=this._createMaterial("builtin/missing.mat.json",e.DefaultShaders.MESH_BASIC).setColor(e.Color.PURPLE),r.SHADOW_DEPTH=this._createMaterial("builtin/shadow_depth.mat.json",e.DefaultShaders.DEPTH).addDefine("DEPTH_PACKING 3201"),r.SHADOW_DISTANCE=this._createMaterial("builtin/shadow_distance.mat.json",e.DefaultShaders.DISTANCE_RGBA),r.COPY=this._createMaterial("builtin/copy.mat.json",e.DefaultShaders.COPY)},r}(paper.SingletonComponent);e.DefaultMaterials=t,__reflect(t.prototype,"egret3d.DefaultMaterials")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.lightDirty=!1,e.cameras=[],e.lights=[],e}return __extends(r,t),r.prototype._sortCameras=function(e,t){var r=e.renderTarget?e.order:1e3*e.order+1,n=t.renderTarget?t.order:1e3*t.order+1;return r-n},r.prototype.updateCameras=function(t){this.cameras.length=0;for(var r=0,n=t;r<n.length;r++){var i=n[r];this.cameras.push(i.getComponent(e.Camera))}},r.prototype.updateLights=function(t){this.lightDirty=!0,this.lights.length=0;for(var r=0,n=t;r<n.length;r++){var i=n[r];this.lights.push(i.getComponent(e.BaseLight,!0))}},r.prototype.sortCameras=function(){this.cameras.sort(this._sortCameras)},Object.defineProperty(r.prototype,"cameraCount",{get:function(){return this.cameras.length},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"lightCount",{get:function(){return this.lights.length},enumerable:!0,configurable:!0}),__decorate([paper.editor.property("UINT")],r.prototype,"cameraCount",null),__decorate([paper.editor.property("UINT")],r.prototype,"lightCount",null),r}(paper.SingletonComponent);e.CameraAndLightCollecter=t,__reflect(t.prototype,"egret3d.CameraAndLightCollecter")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){var t=e.call(this)||this;return t.renderer=null,t.matrix=null,t.subMeshIndex=-1,t.mesh=null,t.material=null,t.zdist=-1,t}return __extends(t,e),t.create=function(){if(this._instances.length>0){var e=this._instances.pop();return e._released=!1,e}return new t},t.prototype.onClear=function(){this.renderer=null,this.matrix=null,this.subMeshIndex=-1,this.mesh=null,this.material=null,this.zdist=-1},t._instances=[],t}(paper.BaseRelease);e.DrawCall=t,__reflect(t.prototype,"egret3d.DrawCall");var r=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.renderers=[],t.drawCalls=[],t._drawCallsDirty=!1,t}return __extends(t,e),t.prototype._update=function(){if(this._drawCallsDirty){var e=0,t=0,r=this.renderers,n=this.drawCalls;this._drawCallsDirty=!1;for(var i=0,o=r;i<o.length;i++){var a=o[i];a?t>0&&(r[e-t]=a,r[e]=null):t++,e++}t>0&&(r.length-=t),e=0,t=0;for(var s=0,l=n;s<l.length;s++){var c=l[s];c?t>0&&(n[e-t]=c,n[e]=null):t++,e++}t>0&&(n.length-=t)}},t.prototype.removeDrawCalls=function(e){var t=this.renderers.indexOf(e);if(!(0>t)){for(var r=this.drawCalls.length;r--;){var n=this.drawCalls[r];n&&n.renderer===e&&(this.drawCalls[r]=null,n.release())}this.renderers[t]=null,this._drawCallsDirty=!0}},t.prototype.hasDrawCalls=function(e){return this.renderers.indexOf(e)>=0},t}(paper.SingletonComponent);e.DrawCallCollecter=r,__reflect(r.prototype,"egret3d.DrawCallCollecter")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.begin=[],t.stay=[],t.end=[],t}return __extends(t,e),t.prototype.update=function(e){this.begin.length>0&&(this.begin.length=0),this.end.length>0&&(this.end.length=0)},t}(paper.SingletonComponent);e.ContactCollecter=t,__reflect(t.prototype,"egret3d.ContactCollecter")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e[e.None=-1]="None",e[e.LeftMouse=0]="LeftMouse",e[e.TouchContact=0]="TouchContact",e[e.Pencontac=0]="Pencontac",e[e.MiddleMouse=1]="MiddleMouse",e[e.RightMouse=2]="RightMouse",e[e.PenBarrel=2]="PenBarrel",e[e.Back=3]="Back",e[e.X1=3]="X1",e[e.Forward=4]="Forward",e[e.X2=4]="X2",e[e.PenEraser=5]="PenEraser"}(t=e.PointerButtonType||(e.PointerButtonType={}));var r;!function(e){e[e.None=0]="None",e[e.LeftMouse=1]="LeftMouse",e[e.TouchContact=1]="TouchContact",e[e.PenContac=1]="PenContac",e[e.MiddleMouse=4]="MiddleMouse",e[e.RightMouse=2]="RightMouse",e[e.PenBarrel=2]="PenBarrel",e[e.Back=8]="Back",e[e.X1=8]="X1",e[e.Forward=16]="Forward",e[e.X2=16]="X2",e[e.PenEraser=32]="PenEraser"}(r=e.PointerButtonsType||(e.PointerButtonsType={}));var n;!function(e){e.Unknown="Unknown",e.F1="F1",e.F2="F2",e.F3="F3",e.F4="F4",e.F5="F5",e.F6="F6",e.F7="F7",e.F8="F8",e.F9="F9",e.F10="F10",e.F11="F11",e.F12="F12",e.Digit0="Digit0",e.Digit1="Digit1",e.Digit2="Digit2",e.Digit3="Digit3",e.Digit4="Digit4",e.Digit5="Digit5",e.Digit6="Digit6",e.Digit7="Digit7",e.Digit8="Digit8",e.Digit9="Digit9",e.KeyA="KeyA",e.KeyB="KeyB",e.KeyC="KeyC",e.KeyD="KeyD",e.KeyE="KeyE",e.KeyF="KeyF",e.KeyG="KeyG",e.KeyH="KeyH",e.KeyI="KeyI",e.KeyJ="KeyJ",e.KeyK="KeyK",e.KeyL="KeyL",e.KeyM="KeyM",e.KeyN="KeyN",e.KeyO="KeyO",e.KeyP="KeyP",e.KeyQ="KeyQ",e.KeyR="KeyR",e.KeyS="KeyS",e.KeyT="KeyT",e.KeyU="KeyU",e.KeyV="KeyV",e.KeyW="KeyW",e.KeyX="KeyX",e.KeyY="KeyY",e.KeyZ="KeyZ",e.Backquote="Backquote",e.Minus="Minus",e.Equal="Equal",e.BracketLeft="BracketLeft",e.BracketRight="BracketRight",e.Backslash="Backslash",e.Semicolon="Semicolon",e.Quote="Quote",e.Comma="Comma",e.Period="Period",e.Slash="Slash",e.Escape="Escape",e.ScrollLock="ScrollLock",e.Pause="Pause",e.Backspace="Backspace",e.Tab="Tab",e.CapsLock="CapsLock",e.Space="Space",e.ContextMenu="ContextMenu",e.ShiftLeft="ShiftLeft",e.ControlLeft="ControlLeft",e.AltLeft="AltLeft",e.MetaLeft="MetaLeft",e.ShiftRight="ShiftRight",e.ControlRight="ControlRight",e.AltRight="AltRight",e.MetaRight="MetaRight",e.Insert="Insert",e.Delete="Delete",e.Home="Home",e.End="End",e.PageUp="PageUp",e.PageDown="PageDown",e.ArrowUp="ArrowUp",e.ArrowDown="ArrowDown",e.ArrowLeft="ArrowLeft",e.ArrowRight="ArrowRight",e.NumpadLock="NumLock",e.NumpadDivide="NumpadDivide",e.NumpadMultiply="NumpadMultiply",e.NumpadSubtract="NumpadSubtract",e.NumpadAdd="NumpadAdd",e.NumpadEnter="NumpadEnter",e.NumpadDecimal="NumpadDecimal",e.Numpad0="Numpad0",e.Numpad1="Numpad1",e.Numpad2="Numpad2",e.Numpad3="Numpad3",e.Numpad4="Numpad4",e.Numpad5="Numpad5",e.Numpad6="Numpad6",e.Numpad7="Numpad7",e.Numpad8="Numpad8",e.Numpad9="Numpad9"}(n=e.KeyCode||(e.KeyCode={}));var i=["`","Backquote","1","Digit1","2","Digit2","3","Digit3","4","Digit4","5","Digit5","6","Digit6","7","Digit7","8","Digit8","9","Digit9","0","Digit0","-","Minus","=","Equal","[","BracketLeft","]","BracketRight","\\","Backslash",";","Semicolon","'","Quote",",","Comma",".","Period","/","Slash","~","Backquote","!","Digit1","@","Digit2","#","Digit3","$","Digit4","%","Digit5","^","Digit6","&","Digit7","*","Digit8","(","Digit9",")","Digit0","_","Minus","+","Equal","{","BracketLeft","}","BracketRight","|","Backslash",":","Semicolon",'"',"Quote","<","Comma",">","Period","?","Slash","a","KeyA","b","KeyB","c","KeyC","d","KeyD","e","KeyE","f","KeyF","g","KeyG","h","KeyH","i","KeyI","j","KeyJ","k","KeyK","l","KeyL","m","KeyM","n","KeyN","o","KeyO","p","KeyP","q","KeyQ","r","KeyR","s","KeyS","t","KeyT","u","KeyU","v","KeyV","w","KeyW","x","KeyX","y","KeyY","z","KeyZ"],o=[48,"Digit0",49,"Digit1",50,"Digit2",51,"Digit3",52,"Digit4",53,"Digit5",54,"Digit6",55,"Digit7",56,"Digit8",57,"Digit9",65,"KeyA",66,"KeyB",67,"KeyC",68,"KeyD",69,"KeyE",70,"KeyF",71,"KeyG",72,"KeyH",73,"KeyI",74,"KeyJ",75,"KeyK",76,"KeyL",77,"KeyM",78,"KeyN",79,"KeyO",80,"KeyP",81,"KeyQ",82,"KeyR",83,"KeyS",84,"KeyT",85,"KeyU",86,"KeyV",87,"KeyW",88,"KeyX",89,"KeyY",90,"KeyZ",96,"Digit0",97,"Digit1",98,"Digit2",99,"Digit3",100,"Digit4",101,"Digit5",102,"Digit6",103,"Digit7",104,"Digit8",105,"Digit9"],a=function(t){function r(){var r=t.call(this)||this;return r.holdedTime=0,r.position=e.Vector3.create(),r.downPosition=e.Vector3.create(),r.speed=e.Vector3.create(),r.event=null,r._prevButtons=0,r._prevPosition=e.Vector3.create(),r}return __extends(r,t),r.create=function(){if(this._instances.length>0){var e=this._instances.pop();return e._released=!1,e}return new r},r.prototype.isDown=function(e,t){return void 0===e&&(e=1),void 0===t&&(t=!0),!this.event||t&&0!==paper.Application.playerMode?!1:0!==(this.event.buttons&e)&&0===(this._prevButtons&e)},r.prototype.isHold=function(e,t){return void 0===e&&(e=1),void 0===t&&(t=!0),!this.event||t&&0!==paper.Application.playerMode?!1:0!==(this.event.buttons&e)&&0!==(this._prevButtons&e)},r.prototype.isUp=function(e,t){return void 0===e&&(e=1),void 0===t&&(t=!0),!this.event||t&&0!==paper.Application.playerMode?!1:0===(this.event.buttons&e)&&0!==(this._prevButtons&e)},r.prototype.isMove=function(e,t){return void 0===e&&(e=5),void 0===t&&(t=!0),!this.event||t&&0!==paper.Application.playerMode?null:Math.abs(this.speed.x)>e||Math.abs(this.speed.y)>e},r._instances=[],r}(paper.BaseRelease);e.Pointer=a,__reflect(a.prototype,"egret3d.Pointer");var s=function(){function t(){this.holdedTime=0,this.event=null}return t.prototype.isDown=function(t){return void 0===t&&(t=!0),!this.event||t&&0!==paper.Application.playerMode?!1:e.inputCollecter._downKeys.indexOf(this)>=0},t.prototype.isHold=function(t){return void 0===t&&(t=!0),!this.event||t&&0!==paper.Application.playerMode?!1:e.inputCollecter._holdKeys.indexOf(this)>=0},t.prototype.isUp=function(t){return void 0===t&&(t=!0),!this.event||t&&0!==paper.Application.playerMode?!1:e.inputCollecter._upKeys.indexOf(this)>=0},t}();e.Key=s,__reflect(s.prototype,"egret3d.Key");var l=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.mouseWheel=0,e.onPointerOver=new signals.Signal,e.onPointerEnter=new signals.Signal,e.onPointerDown=new signals.Signal,e.onPointerMove=new signals.Signal,e.onPointerUp=new signals.Signal,e.onPointerCancel=new signals.Signal,e.onPointerOut=new signals.Signal,e.onPointerLeave=new signals.Signal,e.onMouseWheel=new signals.Signal,e.onKeyDown=new signals.Signal,e.onKeyUp=new signals.Signal,e._downPointers=[],e._holdPointers=[],e._upPointers=[],e._downKeys=[],e._holdKeys=[],e._upKeys=[],e.defaultPointer=a.create(),e._pointers={},e._keys={},e}return __extends(r,t),r.prototype.update=function(e){for(var t=0,r=this._downPointers;t<r.length;t++){var n=r[t];n.holdedTime=0}for(var i=0,o=this._holdPointers;i<o.length;i++){var n=o[i];this._downPointers.indexOf(n)>=0||(n.holdedTime+=e)}for(var a=0,s=this._downKeys;a<s.length;a++){var l=s[a];l.holdedTime=0}for(var c=0,u=this._holdKeys;c<u.length;c++){var l=u[c];this._downKeys.indexOf(l)>=0||(l.holdedTime+=e)}return this},r.prototype.clear=function(){this.mouseWheel=0;for(var e in this._pointers){var t=this._pointers[e];t.event&&(t.speed.subtract(t.position,t._prevPosition),t._prevButtons=t.event.buttons,t._prevPosition.copy(t.position))}return this._upPointers.length>0&&(this._upPointers.length=0),this._downPointers.length>0&&(this._downPointers.length=0),this._upKeys.length>0&&(this._upKeys.length=0),this._downKeys.length>0&&(this._downKeys.length=0),this},r.prototype.initialize=function(){t.prototype.initialize.call(this),e.inputCollecter=this,this._pointers[1]=this.defaultPointer},r.prototype.getDownPointers=function(e){return void 0===e&&(e=!0),e&&0!==paper.Application.playerMode?[]:this._downPointers},r.prototype.getHoldPointers=function(e){return void 0===e&&(e=!0),e&&0!==paper.Application.playerMode?[]:this._holdPointers},r.prototype.getUpPointers=function(e){return void 0===e&&(e=!0),e&&0!==paper.Application.playerMode?[]:this._upPointers},r.prototype.getDownKeys=function(e){return void 0===e&&(e=!0),e&&0!==paper.Application.playerMode?[]:this._downKeys},r.prototype.getHoldKeys=function(e){return void 0===e&&(e=!0),e&&0!==paper.Application.playerMode?[]:this._holdKeys},r.prototype.getUpKeys=function(e){return void 0===e&&(e=!0),e&&0!==paper.Application.playerMode?[]:this._upKeys},r.prototype.getPointer=function(e){var t=this._pointers;return e in t||(0===this._downPointers.length&&0===this._holdPointers.length?t[e]=this.defaultPointer:t[e]=a.create()),t[e]},r.prototype.removePointer=function(e){if(1!==e){var t=this._pointers;if(e in t){var r=t[e];r!==this.defaultPointer&&r.release(),delete t[e]}}},r.prototype.getKey=function(e){if("number"==typeof e){var t=o.indexOf(e);e=t>=0?o[t+1]:"Unknown"}else if(1===e.length){var t=i.indexOf(e);e=t>=0?i[t+1]:"Unknown"}else e||(e="Unknown");e=e.toLowerCase();var r=this._keys;return e in r||(r[e]=new s),r[e]},Object.defineProperty(r.prototype,"maxTouchPoints",{get:function(){return window.navigator?window.navigator.maxTouchPoints:0},enumerable:!0,configurable:!0}),r}(paper.SingletonComponent);e.InputCollecter=l,__reflect(l.prototype,"egret3d.InputCollecter"),e.inputCollecter=null}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=t.call(this)||this;return r.radius=0,r.center=e.Vector3.create(),r}return __extends(r,t),r.create=function(t,n){if(void 0===t&&(t=e.Vector3.ZERO),void 0===n&&(n=0),this._instances.length>0){var i=this._instances.pop().set(t,n);return i._released=!1,i}return(new r).set(t,n)},r.prototype.serialize=function(){return[this.center.x,this.center.y,this.center.z,this.radius]},r.prototype.deserialize=function(e){return this.radius=e[3],this.center.fromArray(e),this},r.prototype.clone=function(){return r.create(this.center,this.radius)},r.prototype.copy=function(e){return this.set(e.center,e.radius)},r.prototype.set=function(e,t){return this.radius=t,this.center.copy(e),this},r.prototype.applyMatrix=function(e){return this.center.applyMatrix(e),this.radius=this.radius*e.maxScaleOnAxis,this},r.prototype.fromPoints=function(t,r){r?this.center.copy(r):this.center.copy(e.helpAABBA.fromPoints(t).center);for(var n=0,i=0,o=t.length;o>i;i++)n=Math.max(n,this.center.getDistance(t[i]));return this.radius=Math.sqrt(n),this},r.prototype.contains=function(e){if(e instanceof r){var t=this.radius-e.radius;return t>=0&&this.center.getSquaredDistance(e.center)<=t*t,!1}return this.center.getSquaredDistance(e)<=this.radius*this.radius},r.prototype.getClosestPointToPoint=function(t,r){r||(r=e.Vector3.create());var n=this.center.getSquaredDistance(t);return n>this.radius*this.radius?(r.subtract(this.center,t).normalize(),r.multiplyScalar(this.radius).add(this.center)):r.copy(t),r},r.prototype.getDistance=function(e){return this.center.getDistance(e)-this.radius},r.prototype.raycast=function(t,r){var n=e.helpVector3A.subtract(this.center,t.origin),i=n.dot(t.direction),o=n.dot(n)-i*i,a=this.radius*this.radius;if(o>a)return!1;var s=Math.sqrt(a-o),l=i-s,c=i+s;if(0>l&&0>c)return!1;if(r){var u=r.normal,p=t.getPointAt(r.distance=0>l?c:l,r.position);u&&u.subtract(p,this.center).normalize()}return!0},r._instances=[],__decorate([paper.editor.property("FLOAT",{minimum:0})],r.prototype,"radius",void 0),__decorate([paper.editor.property("VECTOR3")],r.prototype,"center",void 0),r}(paper.BaseRelease);e.Sphere=t,__reflect(t.prototype,"egret3d.Sphere",["paper.ICCS","paper.ISerializable","egret3d.IRaycast"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.colliderType=e.ColliderType.Box,r.box=e.Box.ONE.clone(),r}return __extends(r,t),r.prototype.raycast=function(t,r){var n=this.gameObject.transform,i=e.helpRay.applyMatrix(n.worldToLocalMatrix,t);if(this.box.raycast(i,r)){if(r){var o=n.localToWorldMatrix;r.position.applyMatrix(n.localToWorldMatrix),r.distance=t.origin.getDistance(r.position);var a=r.normal;a&&a.applyDirection(o)}return!0}return!1},Object.defineProperty(r.prototype,"aabb",{get:function(){return this.box},enumerable:!0,configurable:!0}),__decorate([paper.serializedField("aabb"),paper.editor.property("NESTED")],r.prototype,"box",void 0),r=__decorate([paper.allowMultiple],r)}(paper.BaseComponent);e.BoxCollider=t,__reflect(t.prototype,"egret3d.BoxCollider",["egret3d.IBoxCollider","egret3d.ICollider","egret3d.IRaycast"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.colliderType=e.ColliderType.Sphere,r.sphere=e.Sphere.create(e.Vector3.ZERO,.5),r}return __extends(r,t),r.prototype.raycast=function(t,r){var n=this.gameObject.transform,i=n.worldToLocalMatrix,o=e.helpRay.applyMatrix(n.worldToLocalMatrix,t);if(this.sphere.raycast(o,r)){if(r){var a=n.localToWorldMatrix;r.position.applyMatrix(a),r.distance=t.origin.getDistance(r.position);var s=r.normal;s&&s.applyMatrix3(e.helpMatrix3A.fromMatrix4(i).transpose()).normalize()}return!0}return!1},__decorate([paper.serializedField,paper.editor.property("NESTED")],r.prototype,"sphere",void 0),r=__decorate([paper.allowMultiple],r)}(paper.BaseComponent);e.SphereCollider=t,__reflect(t.prototype,"egret3d.SphereCollider",["egret3d.ISphereCollider","egret3d.ICollider","egret3d.IRaycast"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.colliderType=e.ColliderType.Cylinder,r.topRadius=.5,r.bottomRadius=.5,r.height=1,r.center=e.Vector3.create(),r}return __extends(r,t),r.prototype.raycast=function(t,r){var n=this.gameObject.transform,i=n.worldToLocalMatrix,o=e.helpRay.applyMatrix(i,t);o.origin.subtract(this.center);var a=e.Vector3.create().multiplyScalar(999999,o.direction).add(o.origin).release(),s=o.origin.x,l=o.origin.y,c=o.origin.z,u=a.x,p=a.y,d=a.z,h=this.height,f=.5*h,_=this.bottomRadius,m=u-s,v=p-l,g=d-c,y=0,b=1;if(v>2.220446049250313e-16&&2.220446049250313e-16>v){if(-f>=l||l>=f)return!1}else{var x=1/v,T=(-f-l)*x,C=(f-l)*x;if(T>C){var S=T;T=C,C=S}T>0&&(y=T),1>C&&(b=C)}if(y>=1||0>=b)return!1;var E=0,M=1,A=m*m+g*g,R=s*m+c*g,w=s*s+c*c-_*_,O=R*R-A*w;if(0>O)return!1;if(A>0){var L=Math.sqrt(O);if(E=(-R-L)/A,M=(-R+L)/A,E>=1||0>=M)return!1}else{if(w>=0)return!1;E=0,M=1}var P;if(y>=M||E>=b)return!1;if(y>E){if(P=y,0===P)return!1;r&&r.normal&&r.normal.set(0,v>0?-1:1,0)}else{if(P=E,0===P)return!1;r&&r.normal&&r.normal.set(s+m*P,0,c+g*P).normalize()}if(r){var D=n.localToWorldMatrix;r.position.set(s+P*m,l+P*v,c+P*g).add(this.center),r.position.applyMatrix(D),r.distance=t.origin.getDistance(r.position);var I=r.normal;I&&I.applyMatrix3(e.helpMatrix3A.fromMatrix4(i).transpose()).normalize()}return!0},__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:0})],r.prototype,"topRadius",void 0),__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:0})],r.prototype,"bottomRadius",void 0),__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:0})],r.prototype,"height",void 0),__decorate([paper.serializedField,paper.editor.property("VECTOR3")],r.prototype,"center",void 0),r=__decorate([paper.allowMultiple],r)}(paper.BaseComponent);e.CylinderCollider=t,__reflect(t.prototype,"egret3d.CylinderCollider",["egret3d.IRaycast"])}(egret3d||(egret3d={}));var egret3d;!function(e){function t(e,t,r,n){var i=s,o=r.normal;if(i.normal=o?a:null,t.raycast(e,i)&&(!n||r.distance>i.distance)){var l=t.gameObject.transform;return r.distance=i.distance,r.position.copy(i.position),r.transform=l,r.collider=t,o&&o.copy(a),!0}return!1}function r(t,n,o,a,s,l){if(void 0===o&&(o=0),void 0===a&&(a=16777215),void 0===s&&(s=!1),3!==n.hideFlags||"EditorOnly"!==n.tag||n.transform.parent&&!n.transform.parent.gameObject.activeInHierarchy?!n.activeInHierarchy:n.activeSelf)return!1;var c=e.RaycastInfo.create();if(n.layer&a&&(s?n.renderer&&n.renderer.enabled&&n.renderer.raycast(t,c,s)&&(c.transform=n.transform):i(t,n,!1,c)),c.transform&&(0>=o||c.distance<=o)?l.push(c):(c.transform=null,c.release()),!c.transform)for(var u=0,p=n.transform.children;u<p.length;u++){var d=p[u];r(t,d.gameObject,o,a,s,l)}return!0}function n(e,t){return e.distance-t.distance}function i(r,n,i,o){if(void 0===i&&(i=!1),i)return n.renderer&&n.renderer.enabled&&n.renderer.raycast(r,o,i)?(o&&(o.transform=n.transform),!0):!1;var a=!1,s=n.getComponents(e.BoxCollider),l=n.getComponents(e.SphereCollider),c=n.getComponents(e.CylinderCollider);if(s.length>0)for(var u=0,p=s;u<p.length;u++){var d=p[u];if(d.enabled)if(o)t(r,d,o,a)&&(a=!0);else if(d.raycast(r))return!0}if(l.length>0)for(var h=0,f=l;h<f.length;h++){var d=f[h];if(d.enabled)if(o)t(r,d,o,a)&&(a=!0);else if(d.raycast(r))return!0}if(c.length>0)for(var _=0,m=c;_<m.length;_++){var d=m[_];if(d.enabled)if(o)t(r,d,o,a)&&(a=!0);else if(d.raycast(r))return!0}return o&&o.transform?!0:!1}function o(e,t,i,o,a){void 0===i&&(i=0),void 0===o&&(o=16777215),void 0===a&&(a=!1);for(var s=[],l=0,c=t;l<c.length;l++){var u=c[l];r(e,u.constructor===paper.GameObject?u:u.gameObject,i,o,a,s)}return s.sort(n),s}var a=e.Vector3.create(),s=e.RaycastInfo.create();e.raycast=i,e.raycastAll=o}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[[{componentClass:e.Camera}],[{componentClass:[e.DirectionalLight,e.PointLight,e.SpotLight]}]],r._cameraAndLightCollecter=paper.GameObject.globalGameObject.getOrAddComponent(e.CameraAndLightCollecter),r._drawCallCollecter=paper.GameObject.globalGameObject.getOrAddComponent(e.DrawCallCollecter),r._lightCamera=paper.GameObject.globalGameObject.getOrAddComponent(e.Camera),r}return __extends(r,t),r.prototype.onAwake=function(){this._lightCamera.enabled=!1,this._lightCamera.hideFlags=3},r.prototype.onAddGameObject=function(e,t){t===this._groups[0]?this._cameraAndLightCollecter.updateCameras(this._groups[0].gameObjects):t===this._groups[1]&&this._cameraAndLightCollecter.updateLights(this._groups[1].gameObjects)},r.prototype.onRemoveGameObject=function(e,t){t===this._groups[0]?this._cameraAndLightCollecter.updateCameras(this._groups[0].gameObjects):t===this._groups[1]&&this._cameraAndLightCollecter.updateLights(this._groups[1].gameObjects)},r.prototype.onUpdate=function(){var e=this._cameraAndLightCollecter,t=e.cameras,r=e.lights;t.length>0&&e.sortCameras(),r.length>0&&(e.lightDirty=!0),this._drawCallCollecter._update()},r.prototype.onLateUpdate=function(){this._cameraAndLightCollecter.lightDirty=!1},r}(paper.BaseSystem);e.CameraAndLightSystem=t,__reflect(t.prototype,"egret3d.CameraAndLightSystem")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e[e.ALL=7]="ALL",e[e.ProjectionMatrix=1]="ProjectionMatrix",e[e.ClipToWorldMatrix=2]="ClipToWorldMatrix",e[e.WorldToClipMatrix=4]="WorldToClipMatrix"}(t=e.MatrixDirty||(e.MatrixDirty={}));var r=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.clearOption_Color=!0,r.clearOption_Depth=!0,r.cullingMask=16777215,r.order=0,r.backgroundColor=e.Color.create(.15,.25,.5,1),r.viewport=e.Rectangle.create(0,0,1,1),r.context=new e.CameraRenderContext(r),r.postQueues=[],r._viewportDirty=!0,r._matrixDirty=7,r._opvalue=1,r._fov=.25*Math.PI,r._near=.3,r._far=1e3,r._size=1,r._pixelViewport=e.Rectangle.create(0,0,1,1),r._perspectiveMatrix=e.Matrix4.create(),r._worldToClipMatrix=e.Matrix4.create(),r._clipToWorldMatrix=e.Matrix4.create(),r._frameVectors=[e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create(),e.Vector3.create()],r._renderTarget=null,r}return __extends(r,t),Object.defineProperty(r,"main",{get:function(){var t=paper.Application.sceneManager.activeScene,n=t.findWithTag("MainCamera");return n||(n=t.findWithTag("Main Camera"),n&&(n.tag="MainCamera")),n||(n=paper.GameObject.create("Main Camera","MainCamera"),n.transform.setLocalPosition(0,10,-10),n.transform.lookAt(e.Vector3.ZERO)),n.getOrAddComponent(r)},enumerable:!0,configurable:!0}),Object.defineProperty(r,"editor",{get:function(){var t=paper.Application.sceneManager.editorScene.find("Editor Camera");if(!t){t=paper.GameObject.create("Editor Camera","EditorOnly",paper.Application.sceneManager.editorScene),t.transform.setLocalPosition(0,10,-10),t.transform.lookAt(e.Vector3.ZERO);var n=t.addComponent(r);n.cullingMask&=-5,n.far=1e4}return t.getOrAddComponent(r)},enumerable:!0,configurable:!0}),r.prototype._calcCameraFrame=function(){var t=this._frameVectors[0],r=this._frameVectors[1],n=this._frameVectors[2],i=this._frameVectors[3],o=this._frameVectors[4],a=this._frameVectors[5],s=this._frameVectors[6],l=this._frameVectors[7],c=e.stage.matchFactor,u=this.aspect,p=this._near,d=this._far,h=Math.tan(.5*this._fov),f=p*h,_=f*u,m=p*h,v=m/u,g=d*h,y=g*u,b=d*h,x=b/u,T=e.math.lerp(m,_,c),C=e.math.lerp(v,f,c),S=e.math.lerp(b,y,c),E=e.math.lerp(x,g,c);
a.set(-T,C,p),r.set(-T,-C,p),l.set(T,C,p),i.set(T,-C,p),o.set(-S,E,d),t.set(-S,-E,d),s.set(S,E,d),n.set(S,-E,d);var M=this.gameObject.transform.localToWorldMatrix;t.applyMatrix(M),r.applyMatrix(M),n.applyMatrix(M),i.applyMatrix(M),o.applyMatrix(M),a.applyMatrix(M),s.applyMatrix(M),l.applyMatrix(M)},r.prototype._intersectPlane=function(t,r,n,i){var o=e.helpVector3A,a=e.helpVector3B,s=e.helpVector3C,l=e.helpVector3D,c=e.helpVector3E,u=t.center;o.subtract(n,r),a.subtract(i,n),s.cross(o,a),e.calPlaneLineIntersectPoint(s,r,s,u,l),c.subtract(l,u);var p=c.dot(s);if(0>=p)return!0;var d=l.getDistance(u);return d<t.radius?!0:!1},r.prototype._update=function(){this._calcCameraFrame(),this.context.updateCameraTransform(),this.context.frustumCulling()},r.prototype._onStageResize=function(){this._viewportDirty=!0,this._matrixDirty=7},r.prototype.initialize=function(){t.prototype.initialize.call(this),this.transform.registerObserver(this),e.stage.onScreenResize.add(this._onStageResize,this),e.stage.onResize.add(this._onStageResize,this)},r.prototype.uninitialize=function(){t.prototype.uninitialize.call(this),e.stage.onScreenResize.remove(this._onStageResize,this),e.stage.onResize.remove(this._onStageResize,this)},r.prototype.onTransformChange=function(){this._matrixDirty=7},r.prototype.stageToWorld=function(t,r){r||(r=e.Vector3.create());var n=t.z,i=this.renderTargetSize,o=i.w,a=i.h,s=2/o,l=2/a,c=this.clipToWorldMatrix;r.set(t.x*s-1,1-t.y*l,.95).applyMatrix(c);var u=this.gameObject.transform,p=u.position,d=u.getForward().multiplyScalar(-1).release(),h=r.subtract(p).dot(d);return(-2.220446049250313e-16>h||h>2.220446049250313e-16)&&(0===this._opvalue||r.multiplyScalar(-n/h).add(p)),r},r.prototype.worldToStage=function(t,r){r||(r=e.Vector3.create());var n=this.renderTargetSize,i=n.w,o=n.h,a=this.worldToClipMatrix;return r.applyMatrix(a,t),r.x=(r.x+1)*i*.5,r.y=(1-r.y)*o*.5,r},r.prototype.stageToRay=function(t,r,n){n||(n=e.Ray.create());var i=this.renderTargetSize,o=i.w,a=i.h,s=2/o,l=2/a,c=this.clipToWorldMatrix;return n.origin.set(t*s-1,1-r*l,0).applyMatrix(c),n.direction.set(t*s-1,1-r*l,1).applyMatrix(c).subtract(n.origin).normalize(),n},r.prototype.testFrustumCulling=function(e){var t=e.boundingSphere;return this._intersectPlane(t,this._frameVectors[0],this._frameVectors[1],this._frameVectors[5])&&this._intersectPlane(t,this._frameVectors[1],this._frameVectors[3],this._frameVectors[7])&&this._intersectPlane(t,this._frameVectors[3],this._frameVectors[2],this._frameVectors[6])&&this._intersectPlane(t,this._frameVectors[2],this._frameVectors[0],this._frameVectors[4])&&this._intersectPlane(t,this._frameVectors[5],this._frameVectors[7],this._frameVectors[6])&&this._intersectPlane(t,this._frameVectors[0],this._frameVectors[2],this._frameVectors[3])?!0:!1},Object.defineProperty(r.prototype,"opvalue",{get:function(){return this._opvalue},set:function(e){this._opvalue!==e&&(this._opvalue=e,this._matrixDirty=7)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"near",{get:function(){return this._near},set:function(e){e>=this.far&&(e=this.far-.01),.01>e&&(e=.01),this._near=e,this._matrixDirty=7},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"far",{get:function(){return this._far},set:function(e){e<=this._near&&(e=this._near+.01),e>=1e4&&(e=1e4),this._far=e,this._matrixDirty=7},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"fov",{get:function(){return this._fov},set:function(e){this._fov!==e&&(this._fov=e,this._matrixDirty=7)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"size",{get:function(){return this._size},set:function(e){this._size!==e&&(this._size=e,this._matrixDirty=7)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"aspect",{get:function(){var e=this.pixelViewport,t=e.w,r=e.h;return t/r},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"renderTargetSize",{get:function(){var t,r,n=this.renderTarget;if(n)t=n.width,r=n.height;else{var i=e.stage.viewport;t=i.w,r=i.h}return{w:t,h:r}},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"pixelViewport",{get:function(){var e=this._pixelViewport;if(this._viewportDirty){var t=this.renderTargetSize,r=t.w,n=t.h,i=this.viewport;e.x=r*i.x,e.y=n*i.y,e.w=r*i.w,e.h=n*i.h,this._viewportDirty=!1}return e},set:function(e){var t=this.renderTargetSize,r=t.w,n=t.h;this.viewport.set(e.x/r,e.y/n,e.w/r,e.h/n),this._pixelViewport.copy(e),this._matrixDirty=7},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"projectionMatrix",{get:function(){var t=this._perspectiveMatrix;return 1&this._matrixDirty&&(t.fromProjection(this._fov,this._near,this._far,this._size,this._opvalue,this.aspect,e.stage.matchFactor),this._matrixDirty&=-2),t},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"worldToClipMatrix",{get:function(){return 4&this._matrixDirty&&(this._worldToClipMatrix.multiply(this.projectionMatrix,this.gameObject.transform.worldToLocalMatrix),this._matrixDirty&=-5),this._worldToClipMatrix},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"clipToWorldMatrix",{get:function(){return 2&this._matrixDirty&&(this._clipToWorldMatrix.inverse(this.worldToClipMatrix),this._matrixDirty&=-3),this._clipToWorldMatrix},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"renderTarget",{get:function(){return this._renderTarget},set:function(e){this._renderTarget!==e&&(this._renderTarget=e,this._viewportDirty=!0,this._matrixDirty=7)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"postProcessingRenderTarget",{get:function(){return this._renderTarget||e.DefaultTextures.POST_PROCESSING},enumerable:!0,configurable:!0}),r.prototype.getPosAtXPanelInViewCoordinateByScreenPos=function(t,r,n){var i=this.renderTargetSize,o=i.w,a=i.h,s=e.helpVector3A;s.z=-this.near,s.x=t.x-.5*o,s.y=.5*a-t.y;var l=e.helpVector3B;l.z=-this.far,l.x=this.far*s.x/this.near,l.y=this.far*s.y/this.near;var c=(s.z-r)/(s.z-l.z);n.x=s.x-(s.x-l.x)*c,n.y=s.y-(s.y-l.y)*c},r.prototype.calcScreenPosFromWorldPos=function(t,r){var n=this.renderTargetSize,i=n.w,o=n.h,a=this.worldToClipMatrix,s=e.helpVector3A;a.transformVector3(t,s),r.x=(s.x+1)*i*.5,r.y=(1-s.y)*o*.5},r.prototype.calcWorldPosFromScreenPos=function(e,t){this.stageToWorld(e,t)},r.prototype.createRayByScreen=function(e,t,r){return this.stageToRay(e,t,r)},r.current=null,__decorate([paper.serializedField,paper.editor.property("CHECKBOX")],r.prototype,"clearOption_Color",void 0),__decorate([paper.serializedField,paper.editor.property("CHECKBOX")],r.prototype,"clearOption_Depth",void 0),__decorate([paper.serializedField,paper.editor.property("LIST",{listItems:paper.editor.getItemsFromEnum(paper.CullingMask)})],r.prototype,"cullingMask",void 0),__decorate([paper.serializedField,paper.editor.property("INT")],r.prototype,"order",void 0),__decorate([paper.serializedField,paper.editor.property("COLOR")],r.prototype,"backgroundColor",void 0),__decorate([paper.serializedField,paper.editor.property("RECT",{step:.01})],r.prototype,"viewport",void 0),__decorate([paper.serializedField],r.prototype,"_near",void 0),__decorate([paper.serializedField],r.prototype,"_far",void 0),__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:0,maximum:1,step:.01})],r.prototype,"opvalue",null),__decorate([paper.editor.property("FLOAT",{minimum:.01,maximum:2999.99,step:1})],r.prototype,"near",null),__decorate([paper.editor.property("FLOAT",{minimum:.02,maximum:3e3,step:1})],r.prototype,"far",null),__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:.01,maximum:Math.PI-.01,step:.01})],r.prototype,"fov",null),__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:0})],r.prototype,"size",null),__decorate([paper.editor.property("RECT",{step:1})],r.prototype,"pixelViewport",null),r}(paper.BaseComponent);e.Camera=r,__reflect(r.prototype,"egret3d.Camera",["egret3d.ITransformObserver"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.render=function(e){},t}(paper.BaseRelease);e.CameraPostProcessing=t,__reflect(t.prototype,"egret3d.CameraPostProcessing",["egret3d.ICameraPostProcessing"]);var r=function(t){function r(){var r=t.call(this)||this;return r._velocityFactor=1,r._samples=20,r._resolution=e.Vector2.create(1,1),r._worldToClipMatrix=e.Matrix4.create(),r._resolution.set(e.stage.viewport.w,e.stage.viewport.h),r._material=new e.Material(new e.Shader(e.ShaderLib.motionBlur,"motionBlur")),r._material.setDepth(!1,!1),r._material.setCullFace(!1),r._material.setVector2("resolution",r._resolution),r._material.setFloat("velocityFactor",r._velocityFactor),r}return __extends(r,t),r.prototype.render=function(t){var r=t.context,n=e.stage.viewport,i=t.clipToWorldMatrix,o=this._material,a=t.postProcessingRenderTarget;(this._resolution.x!==n.w||this._resolution.y!==n.h)&&(this._resolution.x=n.w,this._resolution.y=n.h,o.setVector2("resolution",this._resolution)),o.setTexture("tDiffuse",a),o.setTexture("tColor",a),o.setMatrix("viewProjectionInverseMatrix",i),o.setMatrix("previousViewProjectionMatrix",this._worldToClipMatrix),r.blit(a,this._material),this._worldToClipMatrix.copy(t.worldToClipMatrix)},Object.defineProperty(r.prototype,"velocityFactor",{get:function(){return this._velocityFactor},set:function(e){this._velocityFactor!==e&&(this._velocityFactor=e,this._material.setFloat("velocityFactor",e))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"samples",{get:function(){return this._samples},set:function(e){this._samples!==e&&(this._material.removeDefine("SAMPLE_NUM "+this._samples),this._samples=e,this._material.addDefine("SAMPLE_NUM "+this._samples))},enumerable:!0,configurable:!0}),r}(t);e.MotionBlurEffect=r,__reflect(r.prototype,"egret3d.MotionBlurEffect")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var e=t.call(this)||this;return e.radius=1,e.phi=0,e.theta=0,e}return __extends(r,t),r.create=function(e,t,n){if(void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),this._instances.length>0){var i=this._instances.pop().set(e,t,n);return i._released=!1,i}return(new r).set(e,t,n)},r.prototype.serialize=function(){return[this.radius,this.phi,this.theta]},r.prototype.deserialize=function(e){return this.radius=e[0],this.phi=e[1],this.theta=e[2],this},r.prototype.clone=function(){return r.create(this.radius,this.phi,this.theta)},r.prototype.copy=function(e){return this.set(e.radius,e.phi,e.theta)},r.prototype.set=function(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this},r.prototype.fromCartesianCoords=function(t,r,n){return t.hasOwnProperty("x")&&(n=t.z,r=t.y,t=t.x),this.radius=Math.sqrt(t*t+r*r+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(e.math.clamp(r/this.radius,-1,1))),this},r.prototype.makeSafe=function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this},r._instances=[],r}(paper.BaseRelease);e.Spherical=t,__reflect(t.prototype,"egret3d.Spherical",["paper.ICCS","paper.ISerializable"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._order=-1,r.frustumCulled=!1,r._screenAdapter=new e.ConstantAdapter,r._stageWidth=0,r._stageHeight=0,r._scaler=1,r}return __extends(r,t),Object.defineProperty(r.prototype,"screenAdapter",{get:function(){return this._screenAdapter},set:function(e){e.$dirty=!0,this._screenAdapter=e},enumerable:!0,configurable:!0}),r.prototype.initialize=function(){t.prototype.initialize.call(this),this.stage=new egret.Stage,this.stage.maxTouches=98,this.root=new egret.DisplayObjectContainer,this.stage.addChild(this.root),this._renderer||(this._renderer=egret.web.Renderer.getInstance(e.WebGLCapabilities.webgl));var r=this.stage,n=new egret.sys.DisplayList(r);n.renderBuffer=new egret.sys.RenderBuffer(void 0,void 0,!0),r.$displayList=n;var i=paper.Application.systemManager.getSystem(e.Egret2DRendererSystem).webInput;i&&egret.web.$cacheTextAdapter(i,r,e.WebGLCapabilities.canvas.parentNode,e.WebGLCapabilities.canvas)},r.prototype.uninitialize=function(){t.prototype.uninitialize.call(this),this.stage.removeChild(this.root)},r.prototype.recalculateLocalBox=function(){this._localBoundingBox.size=e.Vector3.ZERO},r.prototype.raycast=function(e,t,r){return!1},r.prototype.screenPosToUIPos=function(t,r){return void 0===r&&(r=new e.Vector2),r.x=t.x/this._scaler,r.y=t.y/this._scaler,r},Object.defineProperty(r.prototype,"scaler",{get:function(){return this._scaler},enumerable:!0,configurable:!0}),r.prototype.update=function(e,t,r){this._order=-1;var n=this.stage;if(this._stageWidth!==t||this._stageHeight!==r||this.screenAdapter.$dirty){var i={w:0,h:0,s:0};this.screenAdapter.calculateScaler(t,r,i),this.screenAdapter.$dirty=!1,n.$displayList.offsetMatrix.a=i.s,n.$displayList.offsetMatrix.d=i.s,this._scaler=i.s;var o=i.w,a=i.h;n.$stageWidth=o,n.$stageHeight=a,n.pushResize(t,r),n.dispatchEventWith(egret.Event.RESIZE),this._stageWidth=t,this._stageHeight=r}},r.prototype._draw=function(){this._renderer.beforeRender(),this.stage.drawToSurface()},r}(paper.BaseRenderer);e.Egret2DRenderer=t,__reflect(t.prototype,"egret3d.Egret2DRenderer")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Egret2DRenderer}],r.webInput=egret.Capabilities.runtimeType===egret.RuntimeType.WEB?new egret.web.HTMLInput:null,r._sortedDirty=!1,r._sortedRenderers=[],r}return __extends(r,t),r.prototype._onSortRenderers=function(e,t){return t._order-e._order},r.prototype._sortRenderers=function(){return this._sortedDirty&&(this._sortedRenderers.sort(this._onSortRenderers),this._sortedDirty=!1),this._sortedRenderers},r.prototype._onTouchStart=function(e,t){if(0===paper.Application.playerMode)for(var r=0,n=this._sortRenderers();r<n.length;r++){var i=n[r],o=e.event,a=i.scaler;if(i.stage.$onTouchBegin(e.position.x/a,e.position.y/a,o.pointerId))break}},r.prototype._onTouchMove=function(e,t){if(0===paper.Application.playerMode)for(var r=0,n=this._sortRenderers();r<n.length;r++){var i=n[r],o=e.event,a=i.scaler;if(i.stage.$onTouchMove(e.position.x/a,e.position.y/a,o.pointerId))break}},r.prototype._onTouchEnd=function(e,t){if(0===paper.Application.playerMode)for(var r=0,n=this._sortRenderers();r<n.length;r++){var i=n[r],o=e.event,a=i.scaler;if(i.stage.$onTouchEnd(e.position.x/a,e.position.y/a,o.pointerId))break}},r.prototype.onAwake=function(e){var t=this.webInput;if(t){var r=e.canvas;t._initStageDelegateDiv(r.parentNode,r),t.$updateSize()}},r.prototype.onEnable=function(){e.inputCollecter.onPointerDown.add(this._onTouchStart,this),e.inputCollecter.onPointerCancel.add(this._onTouchEnd,this),e.inputCollecter.onPointerUp.add(this._onTouchEnd,this),e.inputCollecter.onPointerMove.add(this._onTouchMove,this)},r.prototype.onAddGameObject=function(e){this._sortedDirty=!0,this._sortedRenderers.push(e.renderer)},r.prototype.onRemoveGameObject=function(e){var t=this._sortedRenderers.indexOf(e.renderer);t>=0&&this._sortedRenderers.splice(t,1)},r.prototype.onUpdate=function(t){for(var r=e.stage.viewport,n=r.w,i=r.h,o=0,a=this._groups[0].gameObjects;o<a.length;o++){var s=a[o];s.renderer.update(t,n,i)}},r.prototype.onDisable=function(){e.inputCollecter.onPointerDown.remove(this._onTouchStart,this),e.inputCollecter.onPointerCancel.remove(this._onTouchEnd,this),e.inputCollecter.onPointerUp.remove(this._onTouchEnd,this),e.inputCollecter.onPointerMove.remove(this._onTouchMove,this)},r}(paper.BaseSystem);e.Egret2DRendererSystem=t,__reflect(t.prototype,"egret3d.Egret2DRendererSystem")}(egret3d||(egret3d={}));var egret;!function(e){var t;!function(t){var r=function(){function r(t){this.context=t;var r=this.egretWebGLRenderContext=e.web.WebGLRenderContext.getInstance(0,0);r.setContext(t),this.drawCmdManager=r.drawCmdManager,this.vao=r.vao,r.$drawWebGL=this.$drawWebGL.bind(this),e.sys.RenderBuffer=e.web.WebGLRenderBuffer,e.sys.systemRenderer=new e.web.WebGLRenderer,e.sys.canvasRenderer=new e.CanvasRenderer,e.sys.customHitTestBuffer=new e.web.WebGLRenderBuffer(3,3),e.sys.canvasHitTestBuffer=new e.web.CanvasRenderBuffer(3,3),e.Capabilities.$renderMode="webgl",this.vertexBuffer=t.createBuffer(),this.indexBuffer=t.createBuffer()}return r.getInstance=function(e){return this._instance||(this._instance=new r(e)),this._instance},r.prototype.beforeRender=function(){var e=this.context;e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE),e.enable(e.BLEND),e.disable(e.STENCIL_TEST),e.colorMask(!0,!0,!0,!0),this.setBlendMode("source-over"),e.activeTexture(e.TEXTURE0),this.currentProgram=null},r.prototype.$drawWebGL=function(){if(0!=this.drawCmdManager.drawDataLen){this.uploadVerticesArray(this.vao.getVertices()),this.vao.hasMesh&&this.uploadIndicesArray(this.vao.getMeshIndices());for(var e=this.drawCmdManager.drawDataLen,t=0,r=0;e>r;r++){var n=this.drawCmdManager.drawData[r];n&&(t=this.drawData(n,t),6==n.type&&(this._activatedBuffer=n.buffer,this.egretWebGLRenderContext.activatedBuffer=n.buffer),(0==n.type||1==n.type||2==n.type)&&this._activatedBuffer&&this._activatedBuffer.$computeDrawCall&&this._activatedBuffer.$drawCalls++)}this.vao.hasMesh&&this.uploadIndicesArray(this.vao.getIndices()),this.drawCmdManager.clear(),this.vao.clear()}},r.prototype.drawData=function(e,r){if(e){var n,i=this.context,o=e.filter;switch(e.type){case 0:o?"custom"===o.type?n=t.EgretWebGLProgram.getProgram(i,o.$vertexSrc,o.$fragmentSrc,o.$shaderKey):"colorTransform"===o.type?n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.colorTransform_frag,"colorTransform"):"blurX"===o.type?n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.blur_frag,"blur"):"blurY"===o.type?n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.blur_frag,"blur"):"glow"===o.type&&(n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.glow_frag,"glow")):n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.texture_frag,"texture"),this.activeProgram(i,n),this.syncUniforms(n,o,e),r+=this.drawTextureElements(e,r);break;case 1:n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.primitive_frag,"primitive"),this.activeProgram(i,n),this.syncUniforms(n,o,e),r+=this.drawPushMaskElements(e,r);break;case 2:n=t.EgretWebGLProgram.getProgram(i,t.EgretShaderLib.default_vert,t.EgretShaderLib.primitive_frag,"primitive"),this.activeProgram(i,n),this.syncUniforms(n,o,e),r+=this.drawPopMaskElements(e,r);break;case 3:this.setBlendMode(e.value);break;case 4:e.buffer.rootRenderTarget.resize(e.width,e.height),this.onResize(e.width,e.height);break;case 5:if(this._activatedBuffer){var a=this._activatedBuffer.rootRenderTarget;(0!=a.width||0!=a.height)&&a.clear(!0)}break;case 6:this.activateBuffer(e.buffer,e.width,e.height);break;case 7:var s=this._activatedBuffer;s&&(s.rootRenderTarget&&s.rootRenderTarget.enabledStencil(),s.enableScissor(e.x,e.y,e.width,e.height));break;case 8:s=this._activatedBuffer,s&&s.disableScissor()}return r}},r.prototype.activeProgram=function(e,t){if(t!=this.currentProgram){e.useProgram(t.id);var r=t.attributes;for(var n in r)"aVertexPosition"===n?(e.vertexAttribPointer(r.aVertexPosition.location,2,e.FLOAT,!1,16,0),e.enableVertexAttribArray(r.aVertexPosition.location)):"aTextureCoord"===n?(e.vertexAttribPointer(r.aTextureCoord.location,2,e.UNSIGNED_SHORT,!0,16,8),e.enableVertexAttribArray(r.aTextureCoord.location)):"aColor"===n?(e.vertexAttribPointer(r.aColor.location,1,e.FLOAT,!1,16,12),e.enableVertexAttribArray(r.aColor.location)):"aParticlePosition"===n?(e.vertexAttribPointer(r.aParticlePosition.location,2,e.FLOAT,!1,88,0),e.enableVertexAttribArray(r.aParticlePosition.location)):"aParticleTextureCoord"===n?(e.vertexAttribPointer(r.aParticleTextureCoord.location,2,e.FLOAT,!1,88,8),e.enableVertexAttribArray(r.aParticleTextureCoord.location)):"aParticleScale"===n?(e.vertexAttribPointer(r.aParticleScale.location,2,e.FLOAT,!1,88,16),e.enableVertexAttribArray(r.aParticleScale.location)):"aParticleRotation"===n?(e.vertexAttribPointer(r.aParticleRotation.location,2,e.FLOAT,!1,88,24),e.enableVertexAttribArray(r.aParticleRotation.location)):"aParticleRed"===n?(e.vertexAttribPointer(r.aParticleRed.location,2,e.FLOAT,!1,88,32),e.enableVertexAttribArray(r.aParticleRed.location)):"aParticleGreen"===n?(e.vertexAttribPointer(r.aParticleGreen.location,2,e.FLOAT,!1,88,40),e.enableVertexAttribArray(r.aParticleGreen.location)):"aParticleBlue"===n?(e.vertexAttribPointer(r.aParticleBlue.location,2,e.FLOAT,!1,88,48),e.enableVertexAttribArray(r.aParticleBlue.location)):"aParticleAlpha"===n?(e.vertexAttribPointer(r.aParticleAlpha.location,2,e.FLOAT,!1,88,56),e.enableVertexAttribArray(r.aParticleAlpha.location)):"aParticleEmitRotation"===n?(e.vertexAttribPointer(r.aParticleEmitRotation.location,2,e.FLOAT,!1,88,64),e.enableVertexAttribArray(r.aParticleEmitRotation.location)):"aParticleEmitRadius"===n?(e.vertexAttribPointer(r.aParticleEmitRadius.location,2,e.FLOAT,!1,88,72),e.enableVertexAttribArray(r.aParticleEmitRadius.location)):"aParticleTime"===n&&(e.vertexAttribPointer(r.aParticleTime.location,2,e.FLOAT,!1,88,80),e.enableVertexAttribArray(r.aParticleTime.location));this.currentProgram=t}},r.prototype.syncUniforms=function(e,t,r){var n=e.uniforms;for(var i in n)if("projectionVector"===i)n[i].setValue({x:this.projectionX,y:this.projectionY});else if("uTextureSize"===i)n[i].setValue({x:r.textureWidth,y:r.textureHeight});else if("uSampler"===i);else if("uGlobalMatrix"===i)n[i].setValue([r.a,r.c,r.tx,r.b,r.d,r.ty,0,0,1]);else if("uGlobalAlpha"===i)n[i].setValue(r.alpha);else{var o=t.$uniforms[i];void 0!==o&&n[i].setValue(o)}},r.prototype.drawTextureElements=function(e,t){var r=this.context;e.texture.isCanvas?r.wxBindCanvasTexture(r.TEXTURE_2D,e.texture):r.bindTexture(r.TEXTURE_2D,e.texture);var n=3*e.count;return r.drawElements(r.TRIANGLES,n,r.UNSIGNED_SHORT,2*t),n},r.prototype.activateBuffer=function(e,t,r){e.rootRenderTarget.activate(),this.bindIndices||this.uploadIndicesArray(this.vao.getIndices()),e.restoreStencil(),e.restoreScissor(),this.onResize(t,r)},r.prototype.onResize=function(e,t){this.projectionX=e/2,this.projectionY=-t/2,this.context&&this.context.viewport(0,0,e,t)},r.prototype.uploadVerticesArray=function(e){var t=this.context;t.bufferData(t.ARRAY_BUFFER,e,t.STREAM_DRAW)},r.prototype.uploadIndicesArray=function(e){var t=this.context;t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW),this.bindIndices=!0},r.prototype.drawPushMaskElements=function(e,t){var r=this.context,n=3*e.count,i=this._activatedBuffer;if(i){i.rootRenderTarget&&i.rootRenderTarget.enabledStencil(),0==i.stencilHandleCount&&(i.enableStencil(),r.clear(r.STENCIL_BUFFER_BIT));var o=i.stencilHandleCount;i.stencilHandleCount++,r.colorMask(!1,!1,!1,!1),r.stencilFunc(r.EQUAL,o,255),r.stencilOp(r.KEEP,r.KEEP,r.INCR),r.drawElements(r.TRIANGLES,n,r.UNSIGNED_SHORT,2*t),r.stencilFunc(r.EQUAL,o+1,255),r.colorMask(!0,!0,!0,!0),r.stencilOp(r.KEEP,r.KEEP,r.KEEP)}return n},r.prototype.drawPopMaskElements=function(e,t){var r=this.context,n=3*e.count,i=this._activatedBuffer;if(i)if(i.stencilHandleCount--,0==i.stencilHandleCount)i.disableStencil();else{var o=i.stencilHandleCount;r.colorMask(!1,!1,!1,!1),r.stencilFunc(r.EQUAL,o+1,255),r.stencilOp(r.KEEP,r.KEEP,r.DECR),r.drawElements(r.TRIANGLES,n,r.UNSIGNED_SHORT,2*t),r.stencilFunc(r.EQUAL,o,255),r.colorMask(!0,!0,!0,!0),r.stencilOp(r.KEEP,r.KEEP,r.KEEP)}return n},r.prototype.setBlendMode=function(e){var t=this.context,n=r.blendModesForGL[e];n&&t.blendFunc(n[0],n[1])},r.initBlendMode=function(){r.blendModesForGL={},r.blendModesForGL["source-over"]=[1,771],r.blendModesForGL.lighter=[1,1],r.blendModesForGL["lighter-in"]=[770,771],r.blendModesForGL["destination-out"]=[0,771],r.blendModesForGL["destination-in"]=[0,770]},r.blendModesForGL=null,r}();t.Renderer=r,__reflect(r.prototype,"egret.web.Renderer"),r.initBlendMode()}(t=e.web||(e.web={}))}(egret||(egret={}));var egret3d;!function(e){var t=function(){function e(){this.$dirty=!0,this._scaleFactor=1}return Object.defineProperty(e.prototype,"scaleFactor",{set:function(e){this._scaleFactor=e,this.$dirty=!0},enumerable:!0,configurable:!0}),e.prototype.calculateScaler=function(e,t,r){var n=this._scaleFactor;r.s=n,r.w=e/n,r.h=t/n},e}();e.ConstantAdapter=t,__reflect(t.prototype,"egret3d.ConstantAdapter",["egret3d.IScreenAdapter"]);var r=function(){function t(){this.$dirty=!0,this._resolution=new e.Vector2(640,1136)}return t.prototype.setResolution=function(e,t){this._resolution.x=e,this._resolution.y=t,this.$dirty=!0},t.prototype.calculateScaler=function(e,t,r){var n=e/t,i=this._resolution.x/this._resolution.y,o=1;o=n>i?t/this._resolution.y:e/this._resolution.x,r.s=o,r.w=e/o,r.h=t/o},t}();e.ExpandAdapter=r,__reflect(r.prototype,"egret3d.ExpandAdapter",["egret3d.IScreenAdapter"]);var n=function(){function t(){this.$dirty=!0,this._resolution=new e.Vector2(640,1136)}return t.prototype.setResolution=function(e,t){this._resolution.x=e,this._resolution.y=t,this.$dirty=!0},t.prototype.calculateScaler=function(e,t,r){var n=e/t,i=this._resolution.x/this._resolution.y,o=1;o=n>i?e/this._resolution.x:t/this._resolution.y,r.s=o,r.w=e/o,r.h=t/o},t}();e.ShrinkAdapter=n,__reflect(n.prototype,"egret3d.ShrinkAdapter",["egret3d.IScreenAdapter"]);var i=function(){function t(){this.$dirty=!0,this._resolution=new e.Vector2(640,1136),this._matchFactor=1}return t.prototype.setResolution=function(e,t){this._resolution.x=e,this._resolution.y=t,this.$dirty=!0},Object.defineProperty(t.prototype,"matchFactor",{set:function(e){this._matchFactor=e,this.$dirty=!0},enumerable:!0,configurable:!0}),t.prototype.calculateScaler=function(e,t,r){var n=e/this._resolution.x,i=t/this._resolution.y,o=n+(i-n)*this._matchFactor;r.s=o,r.w=e/o,r.h=t/o},t}();e.MatchWidthOrHeightAdapter=i,__reflect(i.prototype,"egret3d.MatchWidthOrHeightAdapter",["egret3d.IScreenAdapter"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(){function t(){this.radius=.5,this.bias=.01,this.size=512,this.near=.03,this.far=.03,this.matrix=e.Matrix4.create(),this.camera=paper.GameObject.globalGameObject.getComponent(e.Camera),this.renderTarget=null,this.update=null}return t.create=function(){return new t},t.prototype.serialize=function(){return[this.radius,this.bias,this.size,this.near,this.far]},t.prototype.deserialize=function(e){return this.radius=e[0],this.bias=e[1],this.size=e[2],this.near=e[3],this.far=e[4],this},__decorate([paper.editor.property("FLOAT",{minimum:0})],t.prototype,"radius",void 0),__decorate([paper.editor.property("FLOAT",{minimum:.01})],t.prototype,"bias",void 0),__decorate([paper.editor.property("UINT")],t.prototype,"size",void 0),__decorate([paper.editor.property("FLOAT",{minimum:.01,maximum:9999})],t.prototype,"near",void 0),__decorate([paper.editor.property("FLOAT",{minimum:.02,maximum:1e4})],t.prototype,"far",void 0),t}();e.LightShadow=t,__reflect(t.prototype,"egret3d.LightShadow",["paper.ISerializable"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(t,r,n,i){void 0===t&&(t=0),void 0===r&&(r=0),void 0===n&&(n=0),void 0===i&&(i=0);var o=e.call(this)||this;return o.x=t,o.y=r,o.w=n,o.h=i,o}return __extends(t,e),t.create=function(e,r,n,i){if(void 0===e&&(e=0),void 0===r&&(r=0),void 0===n&&(n=0),void 0===i&&(i=0),this._instances.length>0){var o=this._instances.pop().set(e,r,n,i);return o._released=!1,o}return(new t).set(e,r,n,i)},t.prototype.copy=function(e){return this.set(e.x,e.y,e.w,e.h)},t.prototype.clone=function(){return t.create(this.x,this.y,this.w,this.h)},t.prototype.set=function(e,t,r,n){return this.x=e,this.y=t,this.w=r,this.h=n,this},t.prototype.serialize=function(){return[this.x,this.y,this.w,this.h]},t.prototype.deserialize=function(e){return this.x=e[0],this.y=e[1],this.w=e[2],this.h=e[3],this},t.prototype.contains=function(e){var r=this.x,n=this.y,i=this.x+this.w,o=this.y+this.h;if(e instanceof t){var a=e.x,s=e.y,l=e.x+e.w,c=e.y+e.h;return a>=r&&i>=l&&s>=n&&o>=c}return e.x>r&&e.x<i&&e.y>n&&e.y<o},t._instances=[],t}(paper.BaseRelease);e.Rectangle=t,__reflect(t.prototype,"egret3d.Rectangle",["egret3d.IRectangle","egret3d.IVector2","egret3d.ISize","paper.ICCS","paper.ISerializable"])}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.initialize=function(){e.prototype.initialize.call(this)},t.prototype._updateShadow=function(e,t){},t}(e.BaseLight);e.DirectionalLight=t,__reflect(t.prototype,"egret3d.DirectionalLight")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=([new e.Vector3(1,0,0),new e.Vector3(-1,0,0),new e.Vector3(0,0,1),new e.Vector3(0,0,-1),new e.Vector3(0,1,0),new e.Vector3(0,-1,0)],[new e.Vector3(0,1,0),new e.Vector3(0,1,0),new e.Vector3(0,1,0),new e.Vector3(0,1,0),new e.Vector3(0,0,1),new e.Vector3(0,0,-1)],[new e.Vector4(2,1,1,1),new e.Vector4(0,1,1,1),new e.Vector4(3,1,1,1),new e.Vector4(1,1,1,1),new e.Vector4(3,0,1,1),new e.Vector4(1,0,1,1)],function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.decay=0,t.distance=10,t}return __extends(t,e),t.prototype.updateShadow=function(e){},t.prototype.updateFace=function(e,t){},__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:0})],t.prototype,"decay",void 0),__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:0})],t.prototype,"distance",void 0),t}(e.BaseLight));e.PointLight=t,__reflect(t.prototype,"egret3d.PointLight")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.decay=2,t.distance=0,t.angle=Math.PI/3,t.penumbra=1,t}return __extends(t,e),t.prototype.updateShadow=function(e){},__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:0})],t.prototype,"decay",void 0),__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:0})],t.prototype,"distance",void 0),__decorate([paper.serializedField,paper.editor.property("FLOAT")],t.prototype,"angle",void 0),__decorate([paper.serializedField,paper.editor.property("FLOAT",{minimum:.01})],t.prototype,"penumbra",void 0),t}(e.BaseLight);e.SpotLight=t,__reflect(t.prototype,"egret3d.SpotLight")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._mesh=null,t}return __extends(t,e),t.prototype.uninitialize=function(){e.prototype.uninitialize.call(this),this._mesh,this._mesh=null},Object.defineProperty(t.prototype,"mesh",{get:function(){return this._mesh},set:function(e){this._mesh!==e&&(this._mesh,this._mesh=e,t.onMeshChanged.dispatch(this))},enumerable:!0,configurable:!0}),t.onMeshChanged=new signals.Signal,__decorate([paper.serializedField],t.prototype,"_mesh",void 0),__decorate([paper.editor.property("MESH")],t.prototype,"mesh",null),t}(paper.BaseComponent);e.MeshFilter=t,__reflect(t.prototype,"egret3d.MeshFilter")}(egret3d||(egret3d={}));var paper;!function(e){var t;!function(e){e[e.Player=0]="Player",e[e.DebugPlayer=1]="DebugPlayer",e[e.Editor=2]="Editor"}(t=e.PlayerMode||(e.PlayerMode={}));var r=function(){function t(){this.onPlayerModeChange=new signals.Signal,this.version="1.3.0.001",this.systemManager=e.SystemManager.getInstance(),this.sceneManager=e.SceneManager.getInstance(),this._isFocused=!1,this._isRunning=!1,this._playerMode=0,this._bindUpdate=null}return t.getInstance=function(){return this._instance||(this._instance=new t),this._instance},t.prototype._update=function(){this._isRunning&&requestAnimationFrame(this._bindUpdate),e.clock&&e.clock.update(),e.GameObjectGroup.update(),this.systemManager.update()
},t.prototype._updatePlayerMode=function(){},t.prototype.initialize=function(t){this._playerMode=t.playerMode||0,this.systemManager.register(e.EnableSystem,1e3),this.systemManager.register(e.StartSystem,2e3),this.systemManager.register(e.FixedUpdateSystem,3e3),this.systemManager.register(e.UpdateSystem,4e3),this.systemManager.register(e.LateUpdateSystem,6e3),this.systemManager.register(e.DisableSystem,9e3),this._updatePlayerMode(),this.resume()},t.prototype.pause=function(){this._isRunning=!1},t.prototype.resume=function(){this._isRunning||(this._isRunning=!0,this._bindUpdate||(this._bindUpdate=this._update.bind(this)),this._update())},Object.defineProperty(t.prototype,"isMobile",{get:function(){var e=navigator&&navigator.userAgent?navigator.userAgent.toLowerCase():"";return e.indexOf("mobile")>=0||e.indexOf("android")>=0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isFocused",{get:function(){return this._isFocused},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isRunning",{get:function(){return this._isRunning},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"playerMode",{get:function(){return this._playerMode},set:function(e){this._playerMode!==e&&(this._playerMode=e,this.onPlayerModeChange.dispatch(this.playerMode))},enumerable:!0,configurable:!0}),t._instance=null,t}();e.ECS=r,__reflect(r.prototype,"paper.ECS"),e.Application=r.getInstance()}(paper||(paper={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.MeshFilter,listeners:[{type:e.MeshFilter.onMeshChanged,listener:function(e){r._updateDrawCalls(e.gameObject),e.gameObject.renderer&&(e.gameObject.renderer._localBoundingBoxDirty=!0)}}]},{componentClass:e.MeshRenderer,listeners:[{type:e.MeshRenderer.onMaterialsChanged,listener:function(e){r._updateDrawCalls(e.gameObject)}}]}],r._drawCallCollecter=paper.GameObject.globalGameObject.getOrAddComponent(e.DrawCallCollecter),r}return __extends(r,t),r.prototype._updateDrawCalls=function(t,r){if(r||this._enabled&&this._groups[0].hasGameObject(t)){var n=this._drawCallCollecter,i=t.getComponent(e.MeshFilter),o=t.renderer,a=o.materials;if(n.removeDrawCalls(o),i.mesh&&0!==a.length){i.mesh._createBuffer(),n.renderers.push(o);for(var s=0,l=0,c=i.mesh.glTFMesh.primitives;l<c.length;l++){var u=c[l],p=e.DrawCall.create();p.renderer=o,p.matrix=t.transform.localToWorldMatrix,p.subMeshIndex=s++,p.mesh=i.mesh,p.material=a[u.material]||e.DefaultMaterials.MISSING,n.drawCalls.push(p)}}}},r.prototype.onEnable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._updateDrawCalls(r,!0)}},r.prototype.onAddGameObject=function(e){this._updateDrawCalls(e,!0)},r.prototype.onRemoveGameObject=function(e){this._drawCallCollecter.removeDrawCalls(e.renderer)},r.prototype.onDisable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._drawCallCollecter.removeDrawCalls(r.renderer)}},r}(paper.BaseSystem);e.MeshRendererSystem=t,__reflect(t.prototype,"egret3d.MeshRendererSystem")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=e.Vector3.create(),r=e.Vector3.create(),n=e.Vector3.create(),i=e.Matrix4.create(),o=function(o){function a(){var e=null!==o&&o.apply(this,arguments)||this;return e.forceCPUSkin=!1,e.boneMatrices=null,e._bones=[],e._rootBone=null,e._inverseBindMatrices=null,e._retargetBoneNames=null,e._mesh=null,e}return __extends(a,o),a.prototype._update=function(){for(var o=this._bones,a=this._inverseBindMatrices,s=this.boneMatrices,l=0,c=o.length;c>l;++l){var u=16*l,p=o[l],d=p?p.localToWorldMatrix:e.Matrix4.IDENTITY;i.fromArray(a,u).premultiply(d).toArray(s,u)}if(this.forceCPUSkin){var h=t,f=r,_=n,m=i,v=this._mesh,g=v.getIndices(),y=v.getVertices(),b=v.getAttributes("JOINTS_0"),x=v.getAttributes("WEIGHTS_0");v._rawVertices||(v._rawVertices=new Float32Array(y.length),v._rawVertices.set(y));for(var T=0,C=g;T<C.length;T++){var S=C[T],E=3*S,M=4*S;h.fromArray(v._rawVertices,E),f.clear();for(var l=0;4>l;++l){var A=x[M+l];0>=A||f.add(_.applyMatrix(m.fromArray(s,16*b[M+l]),h).multiplyScalar(A))}f.toArray(y,E)}v.uploadVertexBuffer()}},a.prototype.initialize=function(t){if(o.prototype.initialize.call(this),t&&(this._bones.length=0,this._rootBone=null,this.boneMatrices=null,this._inverseBindMatrices=null,this._mesh)){var r=this._mesh.config,n=r.skins[0],i=this.gameObject.transform.parent.getAllChildren({});if(void 0!==n.skeleton){var a=r.nodes[n.skeleton];if(a.name in i){var s=i[a.name];this._rootBone=Array.isArray(s)?s[0]:s}}for(var l=0,c=n.joints;l<c.length;l++){var u=c[l],p=r.nodes[u];if(p.name in i){var s=i[p.name];this._bones.push(Array.isArray(s)?s[0]:s)}else this._bones.push(null)}this._inverseBindMatrices=this._mesh.createTypeArrayFromAccessor(this._mesh.getAccessor(n.inverseBindMatrices)),this.boneMatrices=new Float32Array(16*this._bones.length),this._bones.length>e.SkinnedMeshRendererSystem.maxBoneCount&&(this.forceCPUSkin=!0,console.warn("The bone count of this mesh has exceeded the maxBoneCount and will use the forced CPU skin.",this._mesh.name))}},a.prototype.uninitialize=function(){o.prototype.uninitialize.call(this),this._mesh,this._bones.length=0,this._rootBone=null,this.boneMatrices=null,this._inverseBindMatrices=null,this._retargetBoneNames=null,this._mesh=null},a.prototype.recalculateLocalBox=function(){if(this._mesh){this._localBoundingBox.clear();for(var t=this._mesh._rawVertices||this._mesh.getVertices(),r=e.helpVector3A,n=0,i=t.length;i>n;n+=3)r.set(t[n],t[n+1],t[n+2]),this._localBoundingBox.add(r)}},a.prototype.raycast=function(t,r,n){if(!this._mesh)return!1;var i=!1,o=void 0,a=this.gameObject.transform,s=e.helpRay.applyMatrix(a.worldToLocalMatrix,t),l=this.localBoundingBox;return r&&(r===!0?i=!0:(i=n||!1,o=r)),i?l.raycast(s)&&this._mesh.raycast(t,o,this.forceCPUSkin?null:this.boneMatrices):l.raycast(s,o)?(o&&(o.position.applyMatrix(a.localToWorldMatrix),o.distance=t.origin.getDistance(o.position)),!0):!1},Object.defineProperty(a.prototype,"bones",{get:function(){return this._bones},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"rootBone",{get:function(){return this._rootBone},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"mesh",{get:function(){return this._mesh},set:function(e){return!e||e.config.scenes||e.config.nodes||e.config.skins?void(this._mesh!==e&&(this._mesh,this._mesh=e,a.onMeshChanged.dispatch(this))):void console.warn("Invalid skinned mesh.",e.name)},enumerable:!0,configurable:!0}),a.onMeshChanged=new signals.Signal,__decorate([paper.serializedField],a.prototype,"_mesh",void 0),a}(e.MeshRenderer);e.SkinnedMeshRenderer=o,__reflect(o.prototype,"egret3d.SkinnedMeshRenderer")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.SkinnedMeshRenderer,listeners:[{type:e.SkinnedMeshRenderer.onMeshChanged,listener:function(e){r._updateDrawCalls(e.gameObject),e.gameObject.renderer&&(e.gameObject.renderer._localBoundingBoxDirty=!0)}},{type:e.SkinnedMeshRenderer.onMaterialsChanged,listener:function(e){r._updateDrawCalls(e.gameObject)}}]}],r._drawCallCollecter=paper.GameObject.globalGameObject.getOrAddComponent(e.DrawCallCollecter),r}return __extends(r,t),r.prototype._updateDrawCalls=function(t){if(this._enabled&&this._groups[0].hasGameObject(t)){var r=this._drawCallCollecter,n=t.renderer;if(r.removeDrawCalls(n),n.mesh&&0!==n.materials.length){n.mesh._createBuffer(),this._drawCallCollecter.renderers.push(n);for(var i=0,o=0,a=n.mesh.glTFMesh.primitives;o<a.length;o++){var s=a[o],l=n.materials[s.material],c=e.DrawCall.create();c.renderer=n,c.matrix=e.Matrix4.IDENTITY,c.subMeshIndex=i++,c.mesh=n.mesh,c.material=l||e.DefaultMaterials.MISSING,r.drawCalls.push(c)}}}},r.prototype.onEnable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._updateDrawCalls(r)}},r.prototype.onAddGameObject=function(e){var t=e.renderer;t.mesh&&!t.boneMatrices&&t.initialize(!0),this._updateDrawCalls(e)},r.prototype.onRemoveGameObject=function(e){this._drawCallCollecter.removeDrawCalls(e.renderer)},r.prototype.onUpdate=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];r.renderer._update()}},r.prototype.onDisable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._drawCallCollecter.removeDrawCalls(r.renderer)}},r.maxBoneCount=36,r}(paper.BaseSystem);e.SkinnedMeshRendererSystem=t,__reflect(t.prototype,"egret3d.SkinnedMeshRendererSystem")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(e){function t(){var t=e.call(this)||this;return t.dirty=0,t.layer=0,t.leftWeight=0,t.layerWeight=0,t.blendWeight=0,t}return __extends(t,e),t.create=function(){if(this._instances.length>0){var e=this._instances.pop();return e._released=!1,e}return new t},t.prototype.onClear=function(){this.reset()},t.prototype.reset=function(){this.dirty=0,this.layer=0,this.leftWeight=0,this.layerWeight=0,this.blendWeight=0},t.prototype.updateLayerAndWeight=function(e){var t=e.layer,r=e._globalWeight;if(this.dirty>0){if(this.leftWeight>0){if(e.additive&&this.layer!==t){if(this.layerWeight>=this.leftWeight)return this.leftWeight=0,!1;this.layer=t,this.leftWeight-=this.layerWeight,this.layerWeight=r*this.leftWeight}return r*=this.leftWeight,this.dirty++,this.blendWeight=r,!0}return!1}return this.dirty++,this.layer=t,this.leftWeight=1,this.layerWeight=r,this.blendWeight=r,!0},t._instances=[],t}(paper.BaseRelease);__reflect(t.prototype,"BlendLayer");var r=function(e){function t(){var t=e.call(this)||this;return t.updateTarget=null,t}return __extends(t,e),t.create=function(){if(this._instances.length>0){var e=this._instances.pop();return e._released=!1,e}return new t},t.prototype.getFrameIndex=function(e){var t=this.inputBuffer,r=t.length;if(1===r)return-1;if(e<=t[0])return 0;if(e>=t[r-1])return r-2;for(var n=0,i=r-1;i-n>1;){var o=n+.5*(i-n)>>0;e>=t[o]?n=o:i=o}return n},t._instances=[],t}(paper.BaseRelease);__reflect(r.prototype,"AnimationChannel");var n=[],i=function(){function e(){this.additive=!1,this.layer=0,this.weight=1,this.fadeTotalTime=1,this.parent=null,this._fadeState=-1,this._subFadeState=-1,this._globalWeight=0,this._fadeProgress=0,this._fadeTime=0}return e.prototype._onFadeStateChange=function(){},e.prototype._update=function(e){if(0!==this._fadeState||0!==this._subFadeState){var t=this._fadeState>0;this._subFadeState<0&&(this._subFadeState=0,this._onFadeStateChange()),0>e&&(e=-e),this._fadeTime+=e,this._fadeTime>=this.fadeTotalTime?(this._subFadeState=1,this._fadeProgress=t?0:1):this._fadeTime>0?this._fadeProgress=t?1-this._fadeTime/this.fadeTotalTime:this._fadeTime/this.fadeTotalTime:this._fadeProgress=t?1:0,this._subFadeState>0&&(t||(this._fadeState=0,this._subFadeState=0,this._onFadeStateChange()))}this._globalWeight=this.weight*this._fadeProgress,this.parent&&(this._globalWeight*=this.parent._globalWeight)},e.prototype.fadeOut=function(e){if((0>e||e!==e)&&(e=0),this._fadeState>0){if(e>this.fadeTotalTime-this._fadeTime)return}else this._fadeState=1,this._subFadeState=-1,(0>=e||this._fadeProgress<=0)&&(this._fadeProgress=1e-6);this.fadeTotalTime=this._fadeProgress>1e-6?e/this._fadeProgress:0,this._fadeTime=this.fadeTotalTime*(1-this._fadeProgress)},e}();e.BlendNode=i,__reflect(i.prototype,"egret3d.BlendNode");var o=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._blendNodes=[],t}return __extends(t,e),t}(i);e.BlendTree=o,__reflect(o.prototype,"egret3d.BlendTree");var a=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.layer=0,t.playTimes=0,t.currentPlayTimes=0,t.timeScale=1,t.animationAsset=null,t.animation=null,t.animationClip=null,t._isPlaying=!0,t._playState=-1,t._time=0,t._currentTime=0,t._channels=[],t._animationComponent=null,t}return __extends(t,e),t.prototype._onUpdateTranslation=function(e,t){var r,n,i,o=e.glTFSampler.interpolation,a=t._currentTime,s=e.outputBuffer,l=e.getFrameIndex(a);if(l>=0){var c=3*l;if(r=s[c++],n=s[c++],i=s[c++],!o||"STEP"!==o){var u=e.inputBuffer,p=u[l],d=(a-p)/(u[l+1]-p);r+=(s[c++]-r)*d,n+=(s[c++]-n)*d,i+=(s[c++]-i)*d}}else r=s[0],n=s[1],i=s[2];var h=Array.isArray(e.components),f=h?e.components[0].localPosition:e.components.localPosition;if(f.x=r,f.y=n,f.z=i,h)for(var _=0,m=e.components;_<m.length;_++){var v=m[_];v.localPosition=f}else f.update()},t.prototype._onUpdateRotation=function(e,t){var r,n,i,o,a=e.glTFSampler.interpolation,s=t._currentTime,l=e.outputBuffer,c=e.getFrameIndex(s);if(c>=0){var u=4*c;if(r=l[u++],n=l[u++],i=l[u++],o=l[u++],!a||"STEP"!==a){var p=e.inputBuffer,d=p[c],h=(s-d)/(p[c+1]-d);r+=(l[u++]-r)*h,n+=(l[u++]-n)*h,i+=(l[u++]-i)*h,o+=(l[u++]-o)*h}}else r=l[0],n=l[1],i=l[2],o=l[3];var f=Array.isArray(e.components),_=f?e.components[0].localRotation:e.components.localRotation;if(_.x=r,_.y=n,_.z=i,_.w=o,f)for(var m=0,v=e.components;m<v.length;m++){var g=v[m];g.localRotation=_}else _.update()},t.prototype._onUpdateScale=function(e,t){var r,n,i,o=e.glTFSampler.interpolation,a=t._currentTime,s=e.outputBuffer,l=e.getFrameIndex(a);if(l>=0){var c=3*l;if(r=s[c++],n=s[c++],i=s[c++],!o||"STEP"!==o){var u=e.inputBuffer,p=u[l],d=(t._currentTime-p)/(u[l+1]-p);r+=(s[c++]-r)*d,n+=(s[c++]-n)*d,i+=(s[c++]-i)*d}}else r=s[0],n=s[1],i=s[2];var h=Array.isArray(e.components),f=h?e.components[0].localScale:e.components.localScale;if(f.x=r,f.y=n,f.z=i,h)for(var _=0,m=e.components;_<m.length;_++){var v=m[_];v.localScale=f}else f.update()},t.prototype._onUpdateActive=function(e,t){var r=t._currentTime,n=e.outputBuffer,i=e.getFrameIndex(r),o=0!==(i>=0?n[i]:n[0]);if(Array.isArray(e.components))for(var a=0,s=e.components;a<s.length;a++){var l=s[a];l.gameObject.activeSelf=o}else e.components.gameObject.activeSelf=o},t.prototype.initialize=function(e,t,i){var o=t.config;if(this.animationAsset=t,this.animationClip=i,this.animation=o.animations[0],this._fadeTime=0,this._time=0,this._animationComponent=e,this.animation.channels){var a=this._animationComponent.gameObject,s=a.transform.getAllChildren({});s.__root__=a.transform;for(var l=0,c=this.animation.channels;l<c.length;l++){var u=c[l],p=this.animationAsset.getNode(u.target.node||0);if(p.name in s){var d=s[p.name],h=n.length>0?n.pop():r.create(),f=u.target.path;switch(h.glTFChannel=u,h.glTFSampler=this.animation.samplers[u.sampler],h.components=d,h.inputBuffer=this.animationAsset.createTypeArrayFromAccessor(this.animationAsset.getAccessor(h.glTFSampler.input)),h.outputBuffer=this.animationAsset.createTypeArrayFromAccessor(this.animationAsset.getAccessor(h.glTFSampler.output)),f){case"translation":h.blendLayer=this._animationComponent._getBlendlayer(f,p.name),h.updateTarget=this._onUpdateTranslation;break;case"rotation":h.blendLayer=this._animationComponent._getBlendlayer(f,p.name),h.updateTarget=this._onUpdateRotation;break;case"scale":h.blendLayer=this._animationComponent._getBlendlayer(f,p.name),h.updateTarget=this._onUpdateScale;break;case"weights":break;case"custom":switch(h.glTFChannel.extensions.paper.type){case"paper.GameObject":switch(h.glTFChannel.extensions.paper.property){case"activeSelf":h.updateTarget=this._onUpdateActive}}break;default:console.warn("Unknown animation channel.",h.glTFChannel.target.path)}this._channels.push(h)}}}},t.prototype._update=function(t){e.prototype._update.call(this,t),this._isPlaying&&(t*=this.timeScale*this._animationComponent.timeScale,this._time+=t);var r=this._playState,n=this.animationClip.duration,i=this.playTimes*n;if(this.playTimes>0&&(this._time>=i||this._time<=-i)?(this._playState<=0&&this._isPlaying&&(this._playState=1),this.currentPlayTimes=this.playTimes,this._time>=i?this._currentTime=n:this._currentTime=0):(0!==this._playState&&this._isPlaying&&(this._playState=0),this._time<0?(this._time=-this._time,this.currentPlayTimes=Math.floor(this._time/n),this._currentTime=n-this._time%n):(this.currentPlayTimes=Math.floor(this._time/n),this._currentTime=this._time%n)),this._currentTime+=this.animationClip.position,0!==this.weight)for(var o=0,a=this._channels;o<a.length;o++){var s=a[o];if(s.updateTarget){var l=s.blendLayer;(!l||l.updateLayerAndWeight(this))&&s.updateTarget(s,this)}}if(r!==this._playState&&1===this._playState){this._animationComponent._dispatchEvent("complete",this);var c=this._animationComponent._animationNames;if(c.length>0){var u=c.shift();this._animationComponent.play(u)}}},t.prototype.play=function(){this._isPlaying=!0},t.prototype.stop=function(){this._isPlaying=!1},t.prototype.fateOut=function(){this._fadeState=1,this._subFadeState=-1},Object.defineProperty(t.prototype,"isPlaying",{get:function(){return this._isPlaying&&1!==this._playState},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isCompleted",{get:function(){return 1===this._playState},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"totalTime",{get:function(){return this.animationClip.duration},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentTime",{get:function(){return this._currentTime},enumerable:!0,configurable:!0}),t}(i);e.AnimationState=a,__reflect(a.prototype,"egret3d.AnimationState");var s=function(e){function r(){var t=null!==e&&e.apply(this,arguments)||this;return t.autoPlay=!1,t.timeScale=1,t._animations=[],t._blendNodes=[],t._animationNames=[],t._blendLayers={},t._lastAnimationState=null,t}return __extends(r,e),r.prototype._dispatchEvent=function(e,t,r){for(var n=0,i=this.gameObject.getComponents(paper.Behaviour,!0);n<i.length;n++){var o=i[n];o.onAnimationEvent&&o.onAnimationEvent(e,t,r)}},r.prototype._getBlendlayer=function(e,r){e in this._blendLayers||(this._blendLayers[e]={});var n=this._blendLayers[e];return r in n||(n[r]=t.create()),n[r]},r.prototype._update=function(e){var t=this._blendNodes,r=t.length;for(var n in this._blendLayers){var i=this._blendLayers[n];for(var o in i)i[o].reset()}if(1===r){var s=t[0];s._fadeState>0&&s._subFadeState>0?(t.length=0,this._lastAnimationState===s&&(this._lastAnimationState=null)):s._update(e)}else if(r>1)for(var l=0,c=0;r>l;++l){var s=t[l];if(s._fadeState>0&&s._subFadeState>0?(c++,this._lastAnimationState===s&&(this._lastAnimationState=null)):(c>0&&(t[l-c]=s),s._update(e)),l===r-1&&c>0&&(t.length-=c,null===this._lastAnimationState&&t.length>0)){var u=t[t.length-1];u instanceof a&&(this._lastAnimationState=u)}}},r.prototype.uninitialize=function(){e.prototype.uninitialize.call(this);for(var t in this._blendLayers){var r=this._blendLayers[t];for(var n in r)r[n].release();delete this._blendLayers[t]}},r.prototype.fadeIn=function(e,t,r,n,i){void 0===e&&(e=null),void 0===r&&(r=-1),void 0===n&&(n=0),void 0===i&&(i=!1);for(var o=null,s=null,l=0,c=this._animations;l<c.length;l++){var u=c[l];if(o=u,!e){s=u.getAnimationClip("");break}if(s=u.getAnimationClip(e),null!==s)break}if(!o||!s)return null;for(var p=0,d=this._blendNodes;p<d.length;p++){var h=d[p];h.parent||h.layer!==n||h.fadeOut(t)}var f=new a;return f.initialize(this,o,s),f.additive=i,f.fadeTotalTime=t,f.playTimes=0>r?s.playTimes||0:r,this._blendNodes.push(f),this._lastAnimationState=f,f},r.prototype.play=function(e,t){if(void 0===e&&(e=null),void 0===t&&(t=-1),this._animationNames.length=0,Array.isArray(e)){if(e.length>0){for(var r=0,n=e;r<n.length;r++){var i=n[r];this._animationNames.push(i)}return this.fadeIn(this._animationNames.shift(),0,t)}return this.fadeIn(null,0,t)}return this.fadeIn(e,0,t)},r.prototype.stop=function(){for(var e=0,t=this._blendNodes;e<t.length;e++){var r=t[e];!r.parent&&r instanceof a&&r.stop()}},Object.defineProperty(r.prototype,"lastAnimationnName",{get:function(){return this._lastAnimationState?this._lastAnimationState.animationClip.name:""},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"animations",{get:function(){return this._animations},set:function(e){for(var t=0,r=e.length;r>t;t++)this._animations[t]=e[t]},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"lastAnimationState",{get:function(){return this._lastAnimationState},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"autoPlay",void 0),__decorate([paper.editor.property("FLOAT")],r.prototype,"timeScale",void 0),__decorate([paper.serializedField],r.prototype,"_animations",void 0),r}(paper.BaseComponent);e.Animation=s,__reflect(s.prototype,"egret3d.Animation")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[{componentClass:e.Animation}],r}return __extends(r,t),r.prototype.onAddComponent=function(e){!e.autoPlay||e.lastAnimationState&&e.lastAnimationState.isPlaying||e.play()},r.prototype.onUpdate=function(t){for(var r=0,n=this._groups[0].gameObjects;r<n.length;r++){var i=n[r];i.getComponent(e.Animation)._update(t)}},r}(paper.BaseSystem);e.AnimationSystem=t,__reflect(t.prototype,"egret3d.AnimationSystem")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){function r(t,r){var n=[],i={};if(4===t.renderMode){for(var o=t.mesh,a=o.getIndices(),s=a.length,l=0,c=_;l<c.length;l++){var u=c[l];n.push(u.key),i[u.key]=u.type}for(var p=o.vertexCount*r,d=s*r,h=new e.Mesh(p,d,n,i,35048),f=0,v=o.getAttributes("POSITION"),g=o.getAttributes("TEXCOORD_0"),y=o.getAttributes("COLOR_0"),b=h.getAttributes("POSITION"),x=h.getAttributes("COLOR_0"),T=h.getAttributes("TEXCOORD_0"),C=0;p>C;C++){var S=2*C,E=3*C,M=4*C,A=C%o.vertexCount;b[E]=v[3*A],b[E+1]=v[3*A+1],b[E+2]=v[3*A+2],g&&(T[S]=g[2*A],T[S+1]=g[2*A+1]),y?(x[M]=y[4*A],x[M+1]=y[4*A+1],x[M+2]=y[4*A+2],x[M+3]=y[4*A+3]):(x[M]=1,x[M+1]=1,x[M+2]=1,x[M+3]=1)}for(var R=h.getIndices(),C=0;r>C;C++)for(var w=C*o.vertexCount,O=0;s>O;O++)R[f++]=a[O]+w;return h}for(var a=[0,2,1,0,3,2],s=a.length,L=0,P=m;L<P.length;L++){var u=P[L];n.push(u.key),i[u.key]=u.type}for(var D=4,p=D*r,d=s*r,h=new e.Mesh(p,d,n,i,35048),I=h.getAttributes("_CORNER"),T=h.getAttributes("TEXCOORD_0"),C=0;p>C;C++){var A=C%D,S=2*C;switch(A){case 0:I[S]=-.5,I[S+1]=-.5,T[S]=0,T[S+1]=1;break;case 1:I[S]=.5,I[S+1]=-.5,T[S]=1,T[S+1]=1;break;case 2:I[S]=.5,I[S+1]=.5,T[S]=1,T[S+1]=0;break;case 3:I[S]=-.5,I[S+1]=.5,T[S]=0,T[S+1]=0}}for(var R=h.getIndices(),C=0;r>C;C++){var w=6*C,z=C*D,U=z+2;R[w+0]=z,R[w+1]=U,R[w+2]=z+1,R[w+3]=z,R[w+4]=z+3,R[w+5]=U}return h}function n(e,t,r){if(!r.enable)return e.x=e.y=e.z=0,t.x=t.y=0,void(t.z=1);switch(r.shapeType){case 4:case 7:u(r,e,t);break;case 8:case 9:p(r,e,t);break;case 5:d(r,e,t);break;case 0:case 1:h(r,e,t);break;case 10:f(r,e,t);break;default:e.x=e.y=e.z=0,t.x=t.y=0,t.z=1}}function i(e){var t=Math.random()*Math.PI*2;e.x=Math.cos(t),e.y=Math.sin(t)}function o(e){i(e);var t=Math.pow(Math.random(),.5);e.x=e.x*t,e.y=e.y*t}function a(e,t){var r=Math.random()*e;t.x=Math.cos(r),t.y=Math.sin(r)}function s(e,t){a(e,t);var r=Math.pow(Math.random(),.5);t.x=t.x*r,t.y=t.y*r}function l(e){var t=2*Math.random()-1,r=Math.random()*Math.PI*2,n=Math.sqrt(1-t*t);e.x=Math.cos(r)*n,e.y=Math.sin(r)*n,e.z=t}function c(e){l(e);var t=Math.pow(Math.random(),1/3);e.x=e.x*t,e.y=e.y*t,e.z=e.z*t}function u(t,r,n){var a=new e.Vector3;4===t.shapeType?o(a):i(a),r.x=a.x*t.radius,r.y=a.y*t.radius,r.z=a.z*t.radius;var s=t.angle*Math.PI/180,l=Math.sin(s),c=Math.cos(s);t.randomDirection?(o(n),n.x=n.x*l,n.y=n.y*l,n.z=c):(n.x=a.x*l,n.y=a.y*l,n.z=c)}function p(t,r,n){var a=new e.Vector3;8===t.shapeType?o(a):i(a),r.x=a.x*t.radius,r.y=a.y*t.radius,r.z=0;var s=t.angle*Math.PI/180,c=Math.sin(s),u=Math.cos(s);n.x=a.x*c,n.y=a.y*c,n.z=u,e.Vector3.normalize(n);var p=Math.random()*t.length;n.x=n.x*p,n.y=n.y*p,n.z=n.z*p,r.x+=n.x,r.y+=n.y,r.z+=n.z,t.randomDirection&&l(n)}function d(e,t,r){t.x=e.box.x*(Math.random()-.5),t.y=e.box.y*(Math.random()-.5),t.z=e.box.z*(Math.random()-.5),e.randomDirection?(r.x=0,r.y=0,r.z=1):(r.x=0,r.y=0,r.z=1)}function h(t,r,n){new e.Vector3;t.spherizeDirection||(0===t.shapeType?c(r):l(r)),r.x=r.x*t.radius,r.y=r.y*t.radius,r.z=r.z*t.radius,t.randomDirection||t.spherizeDirection?l(n):(n.x=r.x,n.y=r.y,n.z=r.z)}function f(t,r,n){var i=new e.Vector3;10===t.shapeType?s(t.radiusSpread,i):a(t.radiusSpread,i),r.x=-i.x*t.radius,r.y=i.y*t.radius,r.z=0,t.randomDirection?l(n):(n.x=r.x,n.y=r.y,n.z=r.z)}var _=[{key:"POSITION",type:"VEC3"},{key:"COLOR_0",type:"VEC4"},{key:"TEXCOORD_0",type:"VEC2"},{key:"_START_POSITION",type:"VEC3"},{key:"_START_VELOCITY",type:"VEC3"},{key:"_START_COLOR",type:"VEC4"},{key:"_START_SIZE",type:"VEC3"},{key:"_START_ROTATION",type:"VEC3"},{key:"_TIME",type:"VEC2"},{key:"_RANDOM0",type:"VEC4"},{key:"_RANDOM1",type:"VEC4"},{key:"_WORLD_POSITION",type:"VEC3"},{key:"_WORLD_ROTATION",type:"VEC4"}],m=[{key:"_CORNER",type:"VEC2"},{key:"TEXCOORD_0",type:"VEC2"},{key:"_START_POSITION",type:"VEC3"},{key:"_START_VELOCITY",type:"VEC3"},{key:"_START_COLOR",type:"VEC4"},{key:"_START_SIZE",type:"VEC3"},{key:"_START_ROTATION",type:"VEC3"},{key:"_TIME",type:"VEC2"},{key:"_RANDOM0",type:"VEC4"},{key:"_RANDOM1",type:"VEC4"},{key:"_WORLD_POSITION",type:"VEC3"},{key:"_WORLD_ROTATION",type:"VEC4"}];t.createBatchMesh=r,t.generatePositionAndDirection=n}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){t.onMainChanged=new signals.Signal,t.onColorChanged=new signals.Signal,t.onVelocityChanged=new signals.Signal,t.onSizeChanged=new signals.Signal,t.onRotationChanged=new signals.Signal,t.onTextureSheetChanged=new signals.Signal,t.onShapeChanged=new signals.Signal,t.onStartSize3DChanged=new signals.Signal,t.onStartRotation3DChanged=new signals.Signal,t.onSimulationSpaceChanged=new signals.Signal,t.onScaleModeChanged=new signals.Signal,t.onMaxParticlesChanged=new signals.Signal;var r;!function(e){e[e.Constant=0]="Constant",e[e.Curve=1]="Curve",e[e.TwoCurves=2]="TwoCurves",e[e.TwoConstants=3]="TwoConstants"}(r=t.CurveMode||(t.CurveMode={}));var n;!function(e){e[e.Color=0]="Color",e[e.Gradient=1]="Gradient",e[e.TwoColors=2]="TwoColors",e[e.TwoGradients=3]="TwoGradients",e[e.RandomColor=4]="RandomColor"}(n=t.ColorGradientMode||(t.ColorGradientMode={}));var i;!function(e){e[e.Local=0]="Local",e[e.World=1]="World",e[e.Custom=2]="Custom"}(i=t.SimulationSpace||(t.SimulationSpace={}));var o;!function(e){e[e.Hierarchy=0]="Hierarchy",e[e.Local=1]="Local",e[e.Shape=2]="Shape"}(o=t.ScalingMode||(t.ScalingMode={}));var a;!function(e){e[e.None=-1]="None",e[e.Sphere=0]="Sphere",e[e.SphereShell=1]="SphereShell",e[e.Hemisphere=2]="Hemisphere",e[e.HemisphereShell=3]="HemisphereShell",e[e.Cone=4]="Cone",e[e.Box=5]="Box",e[e.Mesh=6]="Mesh",e[e.ConeShell=7]="ConeShell",e[e.ConeVolume=8]="ConeVolume",e[e.ConeVolumeShell=9]="ConeVolumeShell",e[e.Circle=10]="Circle",e[e.CircleEdge=11]="CircleEdge",e[e.SingleSidedEdge=12]="SingleSidedEdge",e[e.MeshRenderer=13]="MeshRenderer",e[e.SkinnedMeshRenderer=14]="SkinnedMeshRenderer",e[e.BoxShell=15]="BoxShell",e[e.BoxEdge=16]="BoxEdge"}(a=t.ShapeType||(t.ShapeType={}));var s;!function(e){e[e.Random=0]="Random",e[e.Loop=1]="Loop",e[e.PingPong=2]="PingPong",e[e.BurstSpread=3]="BurstSpread"}(s=t.ShapeMultiModeValue||(t.ShapeMultiModeValue={}));var l;!function(e){e[e.WholeSheet=0]="WholeSheet",e[e.SingleRow=1]="SingleRow"}(l=t.AnimationType||(t.AnimationType={}));var c;!function(e){e[e.UV0=1]="UV0",e[e.UV1=2]="UV1",e[e.UV2=4]="UV2",e[e.UV3=8]="UV3"}(c=t.UVChannelFlags||(t.UVChannelFlags={}));var u;!function(e){e[e.Blend=0]="Blend",e[e.Fixed=1]="Fixed"}(u=t.GradientMode||(t.GradientMode={}));var p=e.Color.create(),d=e.Color.create(),h=function(){function e(){}return e.prototype.serialize=function(){return[this.time,this.value]},e.prototype.deserialize=function(e){return this.time=e[0],this.value=e[1],this},e.prototype.copy=function(e){this.time=e.time,this.value=e.value},e}();t.Keyframe=h,__reflect(h.prototype,"egret3d.particle.Keyframe",["paper.ISerializable"]);var f=function(){function t(){this._keys=new Array,this._floatValues=new Float32Array(8)}return t.prototype.serialize=function(){return this._keys.map(function(e){return e.serialize()})},t.prototype.deserialize=function(e){this._keys.length=0;for(var t=0,r=e.length;r>t;t++){var n=new h;n.deserialize(e[t]),this._keys.push(n)}return this},t.prototype.evaluate=function(t){void 0===t&&(t=0);for(var r=0,n=this._keys.length;n>r;r++){var i=this._keys[r];if(!(i.time<t)){var o=0===r?0:r-1,a=this._keys[o],s=(t-a.time)/(i.time-a.time);return e.math.lerp(a.value,i.value,s)}}throw"AnimationCurve: invalid t or keys.length is 0"},Object.defineProperty(t.prototype,"floatValues",{get:function(){for(var e=this._floatValues,t=0,r=0,n=this._keys;r<n.length;r++){var i=n[r];e[t++]=i.time,e[t++]=i.value}return e},enumerable:!0,configurable:!0}),t.prototype.copy=function(e){this._keys.length=0;for(var t=e._keys,r=0,n=t.length;n>r;r++){var i=new h;i.time=t[r].time,i.value=t[r].value,this._keys.push(i)}},t}();t.AnimationCurve=f,__reflect(f.prototype,"egret3d.particle.AnimationCurve",["paper.ISerializable"]);var _=function(){function e(){this.time=0,this.minCount=0,this.maxCount=100,this.cycleCount=1,this.repeatInterval=1}return e.prototype.serialize=function(){return[this.time,this.minCount,this.maxCount,this.cycleCount,this.repeatInterval]},e.prototype.deserialize=function(e){return this.time=e[0],this.minCount=e[1],this.maxCount=e[2],this.cycleCount=e[3],this.repeatInterval=e[4],this},e}();t.Burst=_,__reflect(_.prototype,"egret3d.particle.Burst",["paper.ISerializable"]);var m=function(){function t(){this.time=0,this.color=e.Color.create()}return t.prototype.serialize=function(){return{time:this.time,color:this.color.serialize()}},t.prototype.deserialize=function(e){return this.time=e.time,this.color.deserialize(e.color),this},t}();t.GradientColorKey=m,__reflect(m.prototype,"egret3d.particle.GradientColorKey",["paper.ISerializable"]);var v=function(){function e(){this.time=0,this.alpha=0}return e.prototype.serialize=function(){return{time:this.time,alpha:this.alpha}},e.prototype.deserialize=function(e){return this.alpha=e.alpha,this.time=e.time,this},e}();t.GradientAlphaKey=v,__reflect(v.prototype,"egret3d.particle.GradientAlphaKey",["paper.ISerializable"]);var g=function(){function t(){this.mode=0,this.alphaKeys=new Array,this.colorKeys=new Array,this._alphaValue=new Float32Array(8),this._colorValue=new Float32Array(16)}return t.prototype.serialize=function(){return{mode:this.mode,alphaKeys:this.alphaKeys.map(function(e){return e.serialize()}),colorKeys:this.colorKeys.map(function(e){return e.serialize()})}},t.prototype.deserialize=function(e){this.colorKeys.length=0;for(var t=0,r=e.colorKeys.length;r>t;t++){var n=new m;n.deserialize(e.colorKeys[t]),this.colorKeys.push(n)}this.alphaKeys.length=0;for(var t=0,r=e.alphaKeys.length;r>t;t++){var i=new v;i.deserialize(e.alphaKeys[t]),this.alphaKeys.push(i)}return this},t.prototype.evaluate=function(t,r){void 0===t&&(t=0);for(var n=0,i=this.alphaKeys.length;i>n;n++){var o=this.alphaKeys[n];if(o.time>t){var a=0===n?0:n-1,s=this.alphaKeys[a],l=(t-s.time)/(o.time-s.time);r.a=e.math.lerp(s.alpha,o.alpha,l);break}}for(var n=0,i=this.colorKeys.length;i>n;n++){var c=this.colorKeys[n];if(c.time>t){var a=0===n?0:n-1,s=this.colorKeys[a],l=(t-s.time)/(c.time-s.time);r.r=e.math.lerp(s.color.r,c.color.r,l),r.g=e.math.lerp(s.color.g,c.color.g,l),r.b=e.math.lerp(s.color.b,c.color.b,l);break}}return r},Object.defineProperty(t.prototype,"alphaValues",{get:function(){for(var e=this._alphaValue,t=0,r=0,n=this.alphaKeys;r<n.length;r++){var i=n[r];e[t++]=i.time,e[t++]=i.alpha}return e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"colorValues",{get:function(){for(var e=this._colorValue,t=0,r=0,n=this.colorKeys;r<n.length;r++){var i=n[r];e[t++]=i.time,e[t++]=i.color.r,e[t++]=i.color.g,e[t++]=i.color.b}return e},enumerable:!0,configurable:!0}),t}();t.Gradient=g,__reflect(g.prototype,"egret3d.particle.Gradient",["paper.ISerializable"]);var y=function(){function e(){this.mode=0,this.constant=0,this.constantMin=0,this.constantMax=1,this.curve=new f,this.curveMin=new f,this.curveMax=new f
}return e.prototype.serialize=function(){return{mode:this.mode,constant:this.constant,constantMin:this.constantMin,constantMax:this.constantMax,curve:this.curve.serialize(),curveMin:this.curveMin.serialize(),curveMax:this.curveMax.serialize()}},e.prototype.deserialize=function(e){return this.mode=e.mode,this.constant=e.constant||0,this.constantMin=e.constantMin||0,this.constantMax=e.constantMax||0,e.curve&&this.curve.deserialize(e.curve),e.curveMin&&this.curveMin.deserialize(e.curveMin),e.curveMax&&this.curveMax.deserialize(e.curveMax),this},e.prototype.evaluate=function(e){if(void 0===e&&(e=0),0===this.mode)return this.constant;if(3===this.mode)return Math.random()*(this.constantMax-this.constantMin)+this.constantMin;if(1===this.mode)return this.curve.evaluate(e);var t=this.curveMin.evaluate(e),r=this.curveMax.evaluate(e);return Math.random()*(t-r)+t},e.prototype.copy=function(e){this.mode=e.mode,this.constant=e.constant,this.constantMin=e.constantMin,this.constantMax=e.constantMax,this.curve.copy(e.curve),this.curveMin.copy(e.curveMin),this.curveMax.copy(e.curveMax)},e}();t.MinMaxCurve=y,__reflect(y.prototype,"egret3d.particle.MinMaxCurve",["paper.ISerializable"]);var b=function(){function t(){this.mode=1,this.color=e.Color.create(),this.colorMin=e.Color.create(),this.colorMax=e.Color.create(),this.gradient=new g,this.gradientMin=new g,this.gradientMax=new g}return t.prototype.serialize=function(){return{mode:this.mode,color:this.color.serialize(),colorMin:this.colorMin.serialize(),colorMax:this.colorMax.serialize(),gradient:this.gradient.serialize(),gradientMin:this.gradientMin.serialize(),gradientMax:this.gradientMax.serialize()}},t.prototype.deserialize=function(e){return this.mode=e.mode,e.color&&this.color.deserialize(e.color),e.colorMin&&this.colorMin.deserialize(e.colorMin),e.colorMax&&this.colorMax.deserialize(e.colorMax),e.gradient&&this.gradient.deserialize(e.gradient),e.gradientMin&&this.gradientMin.deserialize(e.gradientMin),e.gradientMax&&this.gradientMax.deserialize(e.gradientMax),this},t.prototype.evaluate=function(e,t){if(void 0===e&&(e=0),0===this.mode)t.r=this.color.r,t.g=this.color.g,t.b=this.color.b,t.a=this.color.a;else if(2===this.mode)t.r=Math.random()*(this.colorMax.r-this.colorMin.r)+this.colorMin.r,t.g=Math.random()*(this.colorMax.g-this.colorMin.g)+this.colorMin.g,t.b=Math.random()*(this.colorMax.b-this.colorMin.b)+this.colorMin.b,t.a=Math.random()*(this.colorMax.a-this.colorMin.a)+this.colorMin.a;else{if(1===this.mode)return this.gradient.evaluate(e,t);3===this.mode?(this.gradientMin.evaluate(e,p),this.gradientMax.evaluate(e,d),t.r=Math.random()*(p.r-d.r)+p.r,t.g=Math.random()*(p.g-d.g)+p.g,t.b=Math.random()*(p.b-d.b)+p.b,t.a=Math.random()*(p.a-d.a)+p.a):(t.r=Math.random(),t.g=Math.random(),t.b=Math.random(),t.a=Math.random())}return t},t}();t.MinMaxGradient=b,__reflect(b.prototype,"egret3d.particle.MinMaxGradient",["paper.ISerializable"]);var x=function(e){function t(t){var r=e.call(this)||this;return r.enable=!1,r._component=t,r}return __extends(t,e),t.prototype.deserialize=function(e){return this.enable=!0,this},__decorate([paper.serializedField],t.prototype,"enable",void 0),t}(paper.BaseObject);t.ParticleModule=x,__reflect(x.prototype,"egret3d.particle.ParticleModule");var T=function(e){function r(){var t=null!==e&&e.apply(this,arguments)||this;return t.loop=!1,t.playOnAwake=!1,t.duration=0,t.startDelay=new y,t.startLifetime=new y,t.startSpeed=new y,t.startSizeX=new y,t.startSizeY=new y,t.startSizeZ=new y,t.startRotationX=new y,t.startRotationY=new y,t.startRotationZ=new y,t.startColor=new b,t.gravityModifier=new y,t._startSize3D=!1,t._startRotation3D=!1,t._simulationSpace=0,t._scaleMode=0,t._maxParticles=0,t}return __extends(r,e),r.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this.duration=t.duration,this.loop=t.loop||t.looping,this.startDelay.deserialize(t.startDelay),this.startLifetime.deserialize(t.startLifetime),this.startSpeed.deserialize(t.startSpeed),this._startSize3D=t.startSize3D||!1,this.startSizeX.deserialize(t.startSizeX),this.startSizeY.deserialize(t.startSizeY),this.startSizeZ.deserialize(t.startSizeZ),this._startRotation3D=t._startRotation3D||t.startRotation3D||!1,this.startRotationX.deserialize(t.startRotationX),this.startRotationY.deserialize(t.startRotationY),this.startRotationZ.deserialize(t.startRotationZ),this.startColor.deserialize(t.startColor),this.gravityModifier.deserialize(t.gravityModifier),this._simulationSpace=t._simulationSpace||t.simulationSpace||0,this._scaleMode=t._scaleMode||t.scaleMode||0,this.playOnAwake=t.playOnAwake,this._maxParticles=t._maxParticles||t.maxParticles||0,this},Object.defineProperty(r.prototype,"startSize3D",{get:function(){return this._startSize3D},set:function(e){this._startSize3D!==e&&(this._startSize3D=e,t.onStartSize3DChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"startRotation3D",{get:function(){return this._startRotation3D},set:function(e){this._startRotation3D!==e&&(this._startRotation3D=e,t.onStartRotation3DChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"simulationSpace",{get:function(){return this._simulationSpace},set:function(e){this._simulationSpace!==e&&(this._simulationSpace=e,t.onSimulationSpaceChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"scaleMode",{get:function(){return this._scaleMode},set:function(e){this._scaleMode!==e&&(this._scaleMode=e,t.onScaleModeChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"maxParticles",{get:function(){return this._maxParticles},set:function(e){this._maxParticles!==e&&(this._maxParticles=e,t.onMaxParticlesChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"loop",void 0),__decorate([paper.serializedField],r.prototype,"playOnAwake",void 0),__decorate([paper.serializedField],r.prototype,"duration",void 0),__decorate([paper.serializedField],r.prototype,"startDelay",void 0),__decorate([paper.serializedField],r.prototype,"startLifetime",void 0),__decorate([paper.serializedField],r.prototype,"startSpeed",void 0),__decorate([paper.serializedField],r.prototype,"startSizeX",void 0),__decorate([paper.serializedField],r.prototype,"startSizeY",void 0),__decorate([paper.serializedField],r.prototype,"startSizeZ",void 0),__decorate([paper.serializedField],r.prototype,"startRotationX",void 0),__decorate([paper.serializedField],r.prototype,"startRotationY",void 0),__decorate([paper.serializedField],r.prototype,"startRotationZ",void 0),__decorate([paper.serializedField],r.prototype,"startColor",void 0),__decorate([paper.serializedField],r.prototype,"gravityModifier",void 0),__decorate([paper.serializedField],r.prototype,"_startSize3D",void 0),__decorate([paper.serializedField],r.prototype,"_startRotation3D",void 0),__decorate([paper.serializedField],r.prototype,"_simulationSpace",void 0),__decorate([paper.serializedField],r.prototype,"_scaleMode",void 0),__decorate([paper.serializedField],r.prototype,"_maxParticles",void 0),r}(x);t.MainModule=T,__reflect(T.prototype,"egret3d.particle.MainModule");var C=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.rateOverTime=new y,t.bursts=[],t}return __extends(t,e),t.prototype.deserialize=function(t){if(e.prototype.deserialize.call(this,t),this.rateOverTime.deserialize(t.rateOverTime),t.bursts){this.bursts.length=0;for(var r=0,n=t.bursts.length;n>r;r++){var i=new _;i.deserialize(t.bursts[r]),this.bursts.push(i)}}return this},__decorate([paper.serializedField],t.prototype,"rateOverTime",void 0),__decorate([paper.serializedField],t.prototype,"bursts",void 0),t}(x);t.EmissionModule=C,__reflect(C.prototype,"egret3d.particle.EmissionModule");var S=function(r){function n(){var t=null!==r&&r.apply(this,arguments)||this;return t.shapeType=0,t.radius=0,t.angle=0,t.length=0,t.arcSpeed=new y,t.arcMode=0,t.radiusSpread=0,t.radiusMode=0,t.box=e.Vector3.create(),t.randomDirection=!1,t.spherizeDirection=!1,t}return __extends(n,r),n.prototype.deserialize=function(e){return r.prototype.deserialize.call(this,e),this.shapeType=e.shapeType,this.radius=e.radius,this.angle=e.angle,this.length=e.length,this.arcSpeed.deserialize(e.arcSpeed),this.arcMode=e.arcMode,this.radiusSpread=e.radiusSpread,this.radiusMode=e.radiusMode,this.box.deserialize(e.box),this.randomDirection=e.randomDirection,this.spherizeDirection=e.spherizeDirection,this},n.prototype.invalidUpdate=function(){t.onShapeChanged.dispatch(this._component)},n.prototype.generatePositionAndDirection=function(e,r){t.generatePositionAndDirection(e,r,this)},__decorate([paper.serializedField],n.prototype,"shapeType",void 0),__decorate([paper.serializedField],n.prototype,"radius",void 0),__decorate([paper.serializedField],n.prototype,"angle",void 0),__decorate([paper.serializedField],n.prototype,"length",void 0),__decorate([paper.serializedField],n.prototype,"arcSpeed",void 0),__decorate([paper.serializedField],n.prototype,"arcMode",void 0),__decorate([paper.serializedField],n.prototype,"radiusSpread",void 0),__decorate([paper.serializedField],n.prototype,"radiusMode",void 0),__decorate([paper.serializedField],n.prototype,"box",void 0),__decorate([paper.serializedField],n.prototype,"randomDirection",void 0),__decorate([paper.serializedField],n.prototype,"spherizeDirection",void 0),n}(x);t.ShapeModule=S,__reflect(S.prototype,"egret3d.particle.ShapeModule");var E=function(e){function r(){var t=null!==e&&e.apply(this,arguments)||this;return t._mode=0,t._space=0,t._x=new y,t._y=new y,t._z=new y,t}return __extends(r,e),r.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this._mode=t._mode||t.mode||0,this._space=t._space||t.space||0,this._x.deserialize(t._x||t.x),this._y.deserialize(t._y||t.y),this._z.deserialize(t._z||t.z),this},Object.defineProperty(r.prototype,"mode",{get:function(){return this._mode},set:function(e){this._mode!==e&&(this._mode=e,t.onVelocityChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"space",{get:function(){return this._space},set:function(e){this._space!==e&&(this._space=e,t.onVelocityChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"x",{get:function(){return this._x},set:function(e){this._x.copy(e),t.onVelocityChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"y",{get:function(){return this._y},set:function(e){this._y.copy(e),t.onVelocityChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"z",{get:function(){return this._z},set:function(e){this._z.copy(e),t.onVelocityChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"_mode",void 0),__decorate([paper.serializedField],r.prototype,"_space",void 0),__decorate([paper.serializedField],r.prototype,"_x",void 0),__decorate([paper.serializedField],r.prototype,"_y",void 0),__decorate([paper.serializedField],r.prototype,"_z",void 0),r}(x);t.VelocityOverLifetimeModule=E,__reflect(E.prototype,"egret3d.particle.VelocityOverLifetimeModule");var M=function(e){function r(){var t=null!==e&&e.apply(this,arguments)||this;return t._color=new b,t}return __extends(r,e),r.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this._color.deserialize(t._color||t.color),this},Object.defineProperty(r.prototype,"color",{get:function(){return this._color},set:function(e){this._color=e,t.onColorChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"_color",void 0),r}(x);t.ColorOverLifetimeModule=M,__reflect(M.prototype,"egret3d.particle.ColorOverLifetimeModule");var A=function(e){function r(){var t=null!==e&&e.apply(this,arguments)||this;return t._separateAxes=!1,t._size=new y,t._x=new y,t._y=new y,t._z=new y,t}return __extends(r,e),r.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this._separateAxes=t._separateAxes||t.separateAxes||!1,this._size.deserialize(t._size||t.size),this._x.deserialize(t._x||t.x),this._y.deserialize(t._y||t.y),this._z.deserialize(t._z||t.z),this},Object.defineProperty(r.prototype,"separateAxes",{get:function(){return this._separateAxes},set:function(e){this._separateAxes!==e&&(this._separateAxes=e,t.onSizeChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"size",{get:function(){return this._size},set:function(e){this._size.copy(e),t.onSizeChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"x",{get:function(){return this._x},set:function(e){this._x.copy(e),t.onSizeChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"y",{get:function(){return this._y},set:function(e){this._y.copy(e),t.onSizeChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"z",{get:function(){return this._z},set:function(e){this._z.copy(e),t.onSizeChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"_separateAxes",void 0),__decorate([paper.serializedField],r.prototype,"_size",void 0),__decorate([paper.serializedField],r.prototype,"_x",void 0),__decorate([paper.serializedField],r.prototype,"_y",void 0),__decorate([paper.serializedField],r.prototype,"_z",void 0),r}(x);t.SizeOverLifetimeModule=A,__reflect(A.prototype,"egret3d.particle.SizeOverLifetimeModule");var R=function(e){function r(){var t=null!==e&&e.apply(this,arguments)||this;return t._separateAxes=!1,t._x=new y,t._y=new y,t._z=new y,t}return __extends(r,e),r.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this._separateAxes=t._separateAxes||t.separateAxes||!1,this._x.deserialize(t._x||t.x),this._y.deserialize(t._y||t.y),this._z.deserialize(t._z||t.z),this},Object.defineProperty(r.prototype,"separateAxes",{get:function(){return this._separateAxes},set:function(e){this._separateAxes!==e&&(this._separateAxes=e,t.onRotationChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"x",{get:function(){return this._x},set:function(e){this._x.copy(e),t.onRotationChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"y",{get:function(){return this._y},set:function(e){this._y.copy(e),t.onRotationChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"z",{get:function(){return this._z},set:function(e){this._z.copy(e),t.onRotationChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"_separateAxes",void 0),__decorate([paper.serializedField],r.prototype,"_x",void 0),__decorate([paper.serializedField],r.prototype,"_y",void 0),__decorate([paper.serializedField],r.prototype,"_z",void 0),r}(x);t.RotationOverLifetimeModule=R,__reflect(R.prototype,"egret3d.particle.RotationOverLifetimeModule");var w=function(e){function r(){var t=null!==e&&e.apply(this,arguments)||this;return t._useRandomRow=!1,t._animation=0,t._numTilesX=1,t._numTilesY=1,t._cycleCount=1,t._rowIndex=0,t._frameOverTime=new y,t._startFrame=new y,t._floatValues=new Float32Array(4),t}return __extends(r,e),r.prototype.deserialize=function(t){return e.prototype.deserialize.call(this,t),this._numTilesX=t._numTilesX||t.numTilesX||0,this._numTilesY=t._numTilesY||t.numTilesY||0,this._animation=t._animation||t.animation||0,this._useRandomRow=t._useRandomRow||t.useRandomRow||!1,this._frameOverTime.deserialize(t._frameOverTime||t.frameOverTime),this._startFrame.deserialize(t._startFrame||t.startFrame),this._cycleCount=t._cycleCount||t.cycleCount||0,this._rowIndex=t._rowIndex||t.rowIndex||0,this},Object.defineProperty(r.prototype,"numTilesX",{get:function(){return this._numTilesX},set:function(e){this._numTilesX!==e&&(this._numTilesX=e,t.onTextureSheetChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"numTilesY",{get:function(){return this._numTilesY},set:function(e){this._numTilesY!==e&&(this._numTilesY=e,t.onTextureSheetChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"animation",{get:function(){return this._animation},set:function(e){this._animation!==e&&(this._animation=e,t.onTextureSheetChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"useRandomRow",{get:function(){return this._useRandomRow},set:function(e){this._useRandomRow!==e&&(this._useRandomRow=e,t.onTextureSheetChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"frameOverTime",{get:function(){return this._frameOverTime},set:function(e){this._frameOverTime.copy(e),t.onTextureSheetChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"startFrame",{get:function(){return this._startFrame},set:function(e){this._startFrame.copy(e),t.onTextureSheetChanged.dispatch(this._component)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"cycleCount",{get:function(){return this._cycleCount},set:function(e){this._cycleCount!==e&&(this._cycleCount=e,t.onTextureSheetChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"rowIndex",{get:function(){return this._rowIndex},set:function(e){this._rowIndex!==e&&(this._rowIndex=e,t.onTextureSheetChanged.dispatch(this._component))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"floatValues",{get:function(){var e=this._floatValues;if(this.enable){var t=1/this._numTilesX,r=1/this._numTilesY,n=Math.floor(this._startFrame.constant),i=0;switch(this._animation){case 1:i=this._useRandomRow?Math.floor(Math.random()*this._numTilesY):this._rowIndex;break;case 0:i=Math.floor(n/this._numTilesX)}var o=Math.floor(n%this._numTilesX);e[0]=t,e[1]=r,e[2]=o*t,e[3]=i*r}else e[0]=1,e[1]=1,e[2]=0,e[3]=0;return e},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"_useRandomRow",void 0),__decorate([paper.serializedField],r.prototype,"_animation",void 0),__decorate([paper.serializedField],r.prototype,"_numTilesX",void 0),__decorate([paper.serializedField],r.prototype,"_numTilesY",void 0),__decorate([paper.serializedField],r.prototype,"_cycleCount",void 0),__decorate([paper.serializedField],r.prototype,"_rowIndex",void 0),__decorate([paper.serializedField],r.prototype,"_frameOverTime",void 0),__decorate([paper.serializedField],r.prototype,"_startFrame",void 0),r}(x);t.TextureSheetAnimationModule=w,__reflect(w.prototype,"egret3d.particle.TextureSheetAnimationModule")}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){var r=new e.Vector3,n=new e.Vector3,i=new e.Vector3,o=e.Color.create(),a=new e.Vector3,s=new e.Vector3(0,-9.81,0),l=function(){function l(){this._dirty=!1,this._time=0,this._emittsionTime=0,this._frameRateTime=0,this._firstAliveCursor=0,this._lastFrameFirstCursor=0,this._lastAliveCursor=0,this._forceUpdate=!1,this._vertexStride=0,this._burstIndex=0,this._readEmitCount=0,this._finalGravity=new e.Vector3}return l.prototype._getBurstCount=function(e,t){for(var r=0,n=this._comp.emission.bursts,i=n.length;this._burstIndex<i;this._burstIndex++){var o=n[this._burstIndex];if(!(o.time>=e&&o.time<t))break;r+=o.maxCount}return r},l.prototype._isParticleExpired=function(e){var t=e*this._vertexStride*2;return this._time-this._startTimeBuffer[t+1]+1e-4>this._startTimeBuffer[t]},l.prototype._addParticles=function(e,t,l,c){for(var u=this._comp,p=u.main,d=u.velocityOverLifetime,h=u.colorOverLifetime,f=u.sizeOverLifetime,_=u.rotationOverLifetime,m=u.textureSheetAnimation,v=d.enable&&(3===d.mode||2===d.mode),g=h.enable&&3===h.color.mode,y=f.enable&&(3===f.size.mode||2===f.size.mode),b=_.enable&&(3===_.x.mode||2===_.x.mode),x=m.enable&&(3===m.startFrame.mode||2===m.startFrame.mode),T=g||y||b||x,C=this._worldPostionCache,S=this._worldRotationCache,E=1===p.simulationSpace,M=this._startPositionBuffer,A=this._startVelocityBuffer,R=this._startColorBuffer,w=this._startSizeBuffer,O=this._startRotationBuffer,L=this._startTimeBuffer,P=this._random0Buffer,D=this._random1Buffer,I=this._worldPostionBuffer,z=this._worldRoationBuffer,U=p.startSize3D,N=p.startRotation3D,V=Math.min(c/p.duration,1),F=this._vertexStride,B=0,G=0,j=0,H=0,k=0,X=0,W=0,q=0,Y=0,K=0,Z=0,Q=0,J=0,$=0,et=0,tt=0;B!==l;){for(u.shape.generatePositionAndDirection(r,n),p.startColor.evaluate(V,o),H=p.startLifetime.evaluate(V),k=p.startSpeed.evaluate(V),n.x*=k,n.y*=k,n.z*=k,U?(i.x=p.startSizeX.evaluate(V),i.y=p.startSizeY.evaluate(V),i.z=p.startSizeZ.evaluate(V)):(X=p.startSizeX.evaluate(V),i.x=X,i.y=X,i.z=X),N?(a.x=p.startRotationX.evaluate(V),a.y=p.startRotationY.evaluate(V),a.z=p.startRotationZ.evaluate(V)):a.x=p.startRotationX.evaluate(V),W=v?Math.random():0,q=v?Math.random():0,Y=v?Math.random():0,K=g?Math.random():0,Z=y?Math.random():0,Q=b?Math.random():0,J=x?Math.random():0,G=t*F,j=G+F;j>G;G++)$=2*G,et=3*G,tt=4*G,M[et]=r.x,M[et+1]=r.y,M[et+2]=r.z,A[et]=n.x,A[et+1]=n.y,A[et+2]=n.z,R[tt]=o.r,R[tt+1]=o.g,R[tt+2]=o.b,R[tt+3]=o.a,w[et]=i.x,w[et+1]=i.y,w[et+2]=i.z,O[et]=a.x,O[et+1]=a.y,O[et+2]=a.z,L[$]=H,L[$+1]=e,T&&(P[tt]=K,P[tt+1]=Z,P[tt+2]=Q,P[tt+3]=J),v&&(D[tt]=W,D[tt+1]=q,D[tt+2]=Y,D[tt+3]=0),E&&(I[et]=C.x,I[et+1]=C.y,I[et+2]=C.z,z[tt]=S.x,z[tt+1]=S.y,z[tt+2]=S.z,z[tt+3]=S.w);t++,t>=p.maxParticles&&(t=0),B++}var rt=p.gravityModifier.constant;this._finalGravity.x=s.x*rt,this._finalGravity.y=s.y*rt,this._finalGravity.z=s.z*rt},l.prototype._tryEmit=function(){if(!this._isParticleExpired(this._firstAliveCursor))return!1;var e=this._comp.main.maxParticles,t=this._firstAliveCursor+1>=e?0:this._firstAliveCursor+1;return t===this._lastAliveCursor&&(this._forceUpdate=!0),this._firstAliveCursor=t,!0},l.prototype.clean=function(){this._time=0,this._dirty=!1,this._emittsionTime=0,this._frameRateTime=0,this._firstAliveCursor=0,this._lastFrameFirstCursor=0,this._lastAliveCursor=0,this._forceUpdate=!1,this._vertexStride=0,this._vertexAttributes=null,this._burstIndex=0,this._readEmitCount=0,this._startPositionBuffer=null,this._startVelocityBuffer=null,this._startColorBuffer=null,this._startSizeBuffer=null,this._startRotationBuffer=null,this._startTimeBuffer=null,this._random0Buffer=null,this._random1Buffer=null,this._worldPostionBuffer=null,this._worldRoationBuffer=null,this._worldPostionCache=null,this._worldRotationCache=null,this._comp=null,this._renderer=null},l.prototype.resetTime=function(){this._burstIndex=0,this._emittsionTime=0,this._readEmitCount=0},l.prototype.init=function(e,r){this._comp=e,this._renderer=r;var n=t.createBatchMesh(r,e.main.maxParticles);this._vertexStride=4===r.renderMode?r.mesh.vertexCount:4,this._startPositionBuffer=n.getAttributes("_START_POSITION"),this._startVelocityBuffer=n.getAttributes("_START_VELOCITY"),this._startColorBuffer=n.getAttributes("_START_COLOR"),this._startSizeBuffer=n.getAttributes("_START_SIZE"),this._startRotationBuffer=n.getAttributes("_START_ROTATION"),this._startTimeBuffer=n.getAttributes("_TIME"),this._random0Buffer=n.getAttributes("_RANDOM0"),this._random1Buffer=n.getAttributes("_RANDOM1"),this._worldPostionBuffer=n.getAttributes("_WORLD_POSITION"),this._worldRoationBuffer=n.getAttributes("_WORLD_ROTATION");var i=n.glTFMesh.primitives[0];this._vertexAttributes=[];for(var o in i.attributes)this._vertexAttributes.push(o);r.batchMesh=n,r.batchMaterial=r.materials[0].clone(),n.uploadSubIndexBuffer()},l.prototype.update=function(e){if(this._comp&&!this._comp.isPaused){this._time+=e;for(var t=this._comp,r=t.main;(this._lastAliveCursor!==this._firstAliveCursor||this._forceUpdate)&&this._isParticleExpired(this._lastAliveCursor);)this._forceUpdate=!1,this._lastAliveCursor++,this._lastAliveCursor>=r.maxParticles&&(this._lastAliveCursor=0);var n=t.gameObject.transform;this._worldPostionCache=n.position,this._worldRotationCache=n.rotation,t._isPlaying&&this._time>=r.startDelay.constant&&t.emission.enable&&this._updateEmission(e),this._updateRender()}},l.prototype._updateEmission=function(e){var t=this._comp,r=t.main,n=this._emittsionTime;this._emittsionTime+=e;var i=this._emittsionTime>r.duration,o=this.aliveParticleCount,a=0;i?r.loop?(this._readEmitCount=0,this._readEmitCount+=this._getBurstCount(n,this._emittsionTime),this._emittsionTime-=r.duration,this._burstIndex=0,this._readEmitCount+=this._getBurstCount(0,this._emittsionTime)):t.stop(!1):t.emission.bursts.length>0&&(this._readEmitCount+=this._getBurstCount(n,this._emittsionTime));for(var s=0;s<this._readEmitCount;s++)this._tryEmit()&&(a++,this._readEmitCount--);var l=t.emission.rateOverTime.constant;if(l>0){var c=1/l;for(this._frameRateTime+=e;this._frameRateTime>c&&this._tryEmit();)a++,this._frameRateTime-=c}a=Math.min(r.maxParticles-o,a),a>0&&(this._addParticles(this._time,this._lastFrameFirstCursor,a,n),this._dirty=!0)},l.prototype._updateRender=function(){var t=this._renderer,r=this._comp,n=r.main;if(this._dirty){var i=this._lastFrameFirstCursor*this._vertexStride;if(this._firstAliveCursor>this._lastFrameFirstCursor){var o=(this._firstAliveCursor-this._lastFrameFirstCursor)*this._vertexStride;t.batchMesh.uploadVertexBuffer(this._vertexAttributes,i,o)}else{var a=n.maxParticles-this._lastFrameFirstCursor;t.batchMesh.uploadVertexBuffer(this._vertexAttributes,i,a*this._vertexStride),t.batchMesh.uploadVertexBuffer(this._vertexAttributes,0,this._firstAliveCursor*this._vertexStride)}this._lastFrameFirstCursor=this._firstAliveCursor,this._dirty=!1}var s=r.gameObject.transform,l=t.batchMaterial;switch(0===n.simulationSpace&&(l.setVector3("u_worldPosition",this._worldPostionCache),l.setVector4("u_worldRotation",this._worldRotationCache)),n.scaleMode){case 1:var c=s.localScale;l.setVector3("u_positionScale",c),l.setVector3("u_sizeScale",c);break;case 2:var c=s.scale;l.setVector3("u_positionScale",c),l.setVector3("u_sizeScale",e.Vector3.ONE);break;case 0:var c=s.scale;l.setVector3("u_positionScale",c),l.setVector3("u_sizeScale",c)}l.setFloat("u_currentTime",this._time),l.setVector3("u_gravity",this._finalGravity)},Object.defineProperty(l.prototype,"aliveParticleCount",{get:function(){return this._firstAliveCursor>=this._lastAliveCursor?this._firstAliveCursor-this._lastAliveCursor:this._comp.main.maxParticles-this._lastAliveCursor+this._firstAliveCursor},enumerable:!0,configurable:!0}),l}();t.ParticleBatcher=l,__reflect(l.prototype,"egret3d.particle.ParticleBatcher")}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){var t=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.main=new e.MainModule(r),r.emission=new e.EmissionModule(r),r.shape=new e.ShapeModule(r),r.velocityOverLifetime=new e.VelocityOverLifetimeModule(r),r.rotationOverLifetime=new e.RotationOverLifetimeModule(r),r.sizeOverLifetime=new e.SizeOverLifetimeModule(r),r.colorOverLifetime=new e.ColorOverLifetimeModule(r),r.textureSheetAnimation=new e.TextureSheetAnimationModule(r),r._isPlaying=!1,r._isPaused=!1,r._batcher=new e.ParticleBatcher,r}return __extends(r,t),r.prototype._clean=function(e){void 0===e&&(e=!1),e&&(this._isPlaying=!1,this._isPaused=!1),this._batcher.clean()},r.prototype.initialize=function(){t.prototype.initialize.call(this),this._clean()},r.prototype.uninitialize=function(){t.prototype.uninitialize.call(this),this._clean()},r.prototype.initBatcher=function(t){void 0===t&&(t=!1),this._clean(t),this._batcher.init(this,this.gameObject.getComponent(e.ParticleRenderer))},r.prototype.update=function(e){this._batcher.update(e)},r.prototype.play=function(e){if(void 0===e&&(e=!0),this._isPaused?this._isPaused=!1:(this._isPlaying=!0,this._isPaused=!1,this._batcher.resetTime()),e)for(var t=this.gameObject.transform.children,n=0,i=t;n<i.length;n++){var o=i[n],a=o.gameObject.getComponent(r);a&&a.isActiveAndEnabled&&a.play(e)}},r.prototype.pause=function(e){if(void 0===e&&(e=!0),this._isPaused=!0,e)for(var t=this.gameObject.transform.children,n=0,i=t;n<i.length;n++){var o=i[n],a=o.gameObject.getComponent(r);a&&a.isActiveAndEnabled&&a.pause(e)}},r.prototype.stop=function(e){if(void 0===e&&(e=!0),this._isPlaying=!1,this._batcher.resetTime(),e)for(var t=this.gameObject.transform.children,n=0,i=t;n<i.length;n++){var o=i[n],a=o.gameObject.getComponent(r);a&&a.isActiveAndEnabled&&a.stop(e)}},r.prototype.clear=function(e){if(void 0===e&&(e=!0),e)for(var t=this.gameObject.transform.children,n=0,i=t;n<i.length;n++){var o=i[n],a=o.gameObject.getComponent(r);a&&a.isActiveAndEnabled&&a.stop(e)}},Object.defineProperty(r.prototype,"isPlaying",{get:function(){return this._isPlaying},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"isPaused",{get:function(){return this._isPaused},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"isAlive",{get:function(){return this._batcher.aliveParticleCount>0||this._isPlaying},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"loop",{get:function(){return this.main.loop},enumerable:!0,configurable:!0}),__decorate([paper.serializedField],r.prototype,"main",void 0),__decorate([paper.serializedField],r.prototype,"emission",void 0),__decorate([paper.serializedField],r.prototype,"shape",void 0),__decorate([paper.serializedField],r.prototype,"velocityOverLifetime",void 0),__decorate([paper.serializedField],r.prototype,"rotationOverLifetime",void 0),__decorate([paper.serializedField],r.prototype,"sizeOverLifetime",void 0),__decorate([paper.serializedField],r.prototype,"colorOverLifetime",void 0),__decorate([paper.serializedField],r.prototype,"textureSheetAnimation",void 0),r}(paper.BaseComponent);e.ParticleComponent=t,__reflect(t.prototype,"egret3d.particle.ParticleComponent")}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){var r;e.Matrix4.create();!function(e){e[e.Billboard=0]="Billboard",e[e.Stretch=1]="Stretch",e[e.HorizontalBillboard=2]="HorizontalBillboard",e[e.VerticalBillboard=3]="VerticalBillboard",e[e.Mesh=4]="Mesh",e[e.None=5]="None"}(r=t.ParticleRenderMode||(t.ParticleRenderMode={}));var n;!function(e){e.WORLD_POSITION="u_worldPosition",e.WORLD_ROTATION="u_worldRotation",e.POSITION_SCALE="u_positionScale",e.SIZE_SCALE="u_sizeScale",e.SCALING_MODE="u_scalingMode",e.GRAVIT="u_gravity",e.START_SIZE3D="START_SIZE3D",e.START_ROTATION3D="u_startRotation3D",e.SIMULATION_SPACE="u_simulationSpace",e.CURRENTTIME="u_currentTime",e.ALPHAS_GRADIENT="u_alphaGradient[0]",e.COLOR_GRADIENT="u_colorGradient[0]",e.ALPHA_GRADIENT_MAX="u_alphaGradientMax[0]",e.COLOR_GRADIENT_MAX="u_colorGradientMax[0]",e.VELOCITY_CONST="u_velocityConst",e.VELOCITY_CURVE_X="u_velocityCurveX[0]",e.VELOCITY_CURVE_Y="u_velocityCurveY[0]",e.VELOCITY_CURVE_Z="u_velocityCurveZ[0]",e.VELOCITY_CONST_MAX="u_velocityConstMax",e.VELOCITY_CURVE_MAX_X="u_velocityCurveMaxX[0]",e.VELOCITY_CURVE_MAX_Y="u_velocityCurveMaxY[0]",e.VELOCITY_CURVE_MAX_Z="u_velocityCurveMaxZ[0]",e.SPACE_TYPE="u_spaceType",e.SIZE_CURVE="u_sizeCurve[0]",e.SIZE_CURVE_X="u_sizeCurveX[0]",e.SIZE_CURVE_Y="u_sizeCurveY[0]",e.SIZE_CURVE_Z="u_sizeCurveZ[0]",e.SIZE_CURVE_MAX="u_sizeCurveMax[0]",e.SIZE_CURVE_MAX_X="u_sizeCurveMaxX[0]",e.SIZE_CURVE_MAX_Y="u_sizeCurveMaxY[0]",e.SIZE_CURVE_MAX_Z="u_sizeCurveMaxZ[0]",e.ROTATION_CONST="u_rotationConst",e.ROTATION_CONST_SEPRARATE="u_rotationConstSeprarate",e.ROTATION_CURVE="u_rotationCurve[0]",e.ROTATE_CURVE_X="u_rotationCurveX[0]",e.ROTATE_CURVE_y="u_rotationCurveY[0]",e.ROTATE_CURVE_Z="u_rotationCurveZ[0]",e.ROTATE_CURVE_W="u_rotationCurveW[0]",e.ROTATION_CONST_MAX="u_rotationConstMax",e.ROTATION_CONST_MAX_SEPRARATE="u_rotationConstMaxSeprarate",e.ROTATION_CURVE_MAX="u_rotationCurveMax[0]",e.ROTATION_CURVE_MAX_X="u_rotationCurveMaxX[0]",e.ROTATION_CURVE_MAX_Y="u_rotationCurveMaxY[0]",e.ROTATION_CURVE_MAX_Z="u_rotationCurveMaxZ[0]",e.ROTATION_CURVE_MAX_W="u_rotationCurveMaxW[0]",e.CYCLES="u_cycles",e.SUB_UV="u_subUV",e.UV_CURVE="u_uvCurve[0]",e.UV_CURVE_MAX="u_uvCurveMax[0]",e.LENGTH_SCALE="u_lengthScale",e.SPEED_SCALE="u_speeaScale"
}(n=t.ParticleMaterialUniform||(t.ParticleMaterialUniform={}));var i;!function(e){e.SPHERHBILLBOARD="SPHERHBILLBOARD",e.STRETCHEDBILLBOARD="STRETCHEDBILLBOARD",e.HORIZONTALBILLBOARD="HORIZONTALBILLBOARD",e.VERTICALBILLBOARD="VERTICALBILLBOARD",e.ROTATIONOVERLIFETIME="ROTATIONOVERLIFETIME",e.ROTATIONCONSTANT="ROTATIONCONSTANT",e.ROTATIONTWOCONSTANTS="ROTATIONTWOCONSTANTS",e.ROTATIONSEPERATE="ROTATIONSEPERATE",e.ROTATIONCURVE="ROTATIONCURVE",e.ROTATIONTWOCURVES="ROTATIONTWOCURVES",e.TEXTURESHEETANIMATIONCURVE="TEXTURESHEETANIMATIONCURVE",e.TEXTURESHEETANIMATIONTWOCURVE="TEXTURESHEETANIMATIONTWOCURVE",e.VELOCITYCONSTANT="VELOCITYCONSTANT",e.VELOCITYCURVE="VELOCITYCURVE",e.VELOCITYTWOCONSTANT="VELOCITYTWOCONSTANT",e.VELOCITYTWOCURVE="VELOCITYTWOCURVE",e.COLOROGRADIENT="COLOROGRADIENT",e.COLORTWOGRADIENTS="COLORTWOGRADIENTS",e.SIZECURVE="SIZECURVE",e.SIZETWOCURVES="SIZETWOCURVES",e.SIZECURVESEPERATE="SIZECURVESEPERATE",e.SIZETWOCURVESSEPERATE="SIZETWOCURVESSEPERATE",e.RENDERMESH="RENDERMESH",e.SHAPE="SHAPE"}(i=t.ParticleMaterialDefine||(t.ParticleMaterialDefine={}));var o=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.frustumCulled=!1,e._renderMode=0,e}return __extends(r,t),r.prototype.uninitialize=function(){t.prototype.uninitialize.call(this),this._mesh=null,this._renderMode=0,this.velocityScale=1,this.lengthScale=1},r.prototype.recalculateLocalBox=function(){this._localBoundingBox.copy(e.Box.ONE)},r.prototype.raycast=function(t,r,n){var i=!1,o=void 0,a=e.helpRay.applyMatrix(this.gameObject.transform.worldToLocalMatrix,t),s=this.localBoundingBox;if(r&&(r===!0?i=!0:(i=n||!1,o=r)),s.raycast(a,o)){if(o){var l=this.gameObject.transform.localToWorldMatrix;o.position.applyMatrix(l),o.distance=t.origin.getDistance(o.position)}return!0}return!1},Object.defineProperty(r.prototype,"renderMode",{get:function(){return this._renderMode},set:function(e){this._renderMode!==e&&(this._renderMode=e,r.onRenderModeChanged.dispatch(this))},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"mesh",{get:function(){return this._mesh},set:function(e){this._mesh!==e&&(this._mesh=e,r.onMeshChanged.dispatch(this))},enumerable:!0,configurable:!0}),r.onRenderModeChanged=new signals.Signal,r.onVelocityScaleChanged=new signals.Signal,r.onLengthScaleChanged=new signals.Signal,r.onMeshChanged=new signals.Signal,__decorate([paper.serializedField],r.prototype,"velocityScale",void 0),__decorate([paper.serializedField],r.prototype,"lengthScale",void 0),__decorate([paper.serializedField],r.prototype,"_renderMode",void 0),__decorate([paper.serializedField],r.prototype,"_mesh",void 0),__decorate([paper.editor.property("MESH")],r.prototype,"mesh",null),r}(paper.BaseRenderer);t.ParticleRenderer=o,__reflect(o.prototype,"egret3d.particle.ParticleRenderer")}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){var r=function(r){function n(){var n=null!==r&&r.apply(this,arguments)||this;return n._interests=[{componentClass:t.ParticleComponent,listeners:[{type:t.onStartSize3DChanged,listener:function(e){n._onMainUpdate(e,t.onStartSize3DChanged)}},{type:t.onStartRotation3DChanged,listener:function(e){n._onMainUpdate(e,t.onStartRotation3DChanged)}},{type:t.onSimulationSpaceChanged,listener:function(e){n._onMainUpdate(e,t.onSimulationSpaceChanged)}},{type:t.onScaleModeChanged,listener:function(e){n._onMainUpdate(e,t.onScaleModeChanged)}},{type:t.onVelocityChanged,listener:n._onVelocityOverLifetime.bind(n)},{type:t.onColorChanged,listener:n._onColorOverLifetime.bind(n)},{type:t.onSizeChanged,listener:n._onSizeOverLifetime.bind(n)},{type:t.onRotationChanged,listener:n._onRotationOverLifetime.bind(n)},{type:t.onTextureSheetChanged,listener:n._onTextureSheetAnimation.bind(n)}]},{componentClass:t.ParticleRenderer,listeners:[{type:t.ParticleRenderer.onMeshChanged,listener:function(e){n._updateDrawCalls(e.gameObject)}},{type:t.ParticleRenderer.onMaterialsChanged,listener:function(e){n._updateDrawCalls(e.gameObject)}},{type:t.ParticleRenderer.onRenderModeChanged,listener:function(e){n._onRenderUpdate(e,t.ParticleRenderer.onRenderModeChanged)}}]}],n._drawCallCollecter=paper.GameObject.globalGameObject.getOrAddComponent(e.DrawCallCollecter),n}return __extends(n,r),n.prototype._onUpdateBatchMesh=function(e,r){void 0===r&&(r=!0);var n=e.gameObject.getComponent(t.ParticleRenderer);e.initBatcher(r),this._onRenderUpdate(n,t.ParticleRenderer.onRenderModeChanged),this._onRenderUpdate(n,t.ParticleRenderer.onVelocityScaleChanged),this._onRenderUpdate(n,t.ParticleRenderer.onLengthScaleChanged),this._onMainUpdate(e,t.onSizeChanged),this._onMainUpdate(e,t.onStartRotation3DChanged),this._onMainUpdate(e,t.onSimulationSpaceChanged),this._onMainUpdate(e,t.onScaleModeChanged),this._onShapeChanged(e),this._onVelocityOverLifetime(e),this._onColorOverLifetime(e),this._onSizeOverLifetime(e),this._onRotationOverLifetime(e),this._onTextureSheetAnimation(e)},n.prototype._onRenderUpdate=function(e,r){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var n=e.batchMaterial;switch(r){case t.ParticleRenderer.onRenderModeChanged:this._onRenderMode(e);break;case t.ParticleRenderer.onLengthScaleChanged:n.setFloat("u_lengthScale",e.lengthScale);break;case t.ParticleRenderer.onVelocityScaleChanged:n.setFloat("u_speeaScale",e.velocityScale)}}},n.prototype._onRenderMode=function(e){var t=e.batchMaterial;t.removeDefine("SPHERHBILLBOARD"),t.removeDefine("STRETCHEDBILLBOARD"),t.removeDefine("HORIZONTALBILLBOARD"),t.removeDefine("VERTICALBILLBOARD"),t.removeDefine("RENDERMESH");var r=e.renderMode;switch(r){case 0:t.addDefine("SPHERHBILLBOARD");break;case 1:t.addDefine("STRETCHEDBILLBOARD");break;case 2:t.addDefine("HORIZONTALBILLBOARD");break;case 3:t.addDefine("VERTICALBILLBOARD");break;case 4:t.addDefine("RENDERMESH");break;default:throw"_onRenderMode:invalid renderMode"}},n.prototype._onMainUpdate=function(e,r){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var n=e.gameObject.getComponent(t.ParticleRenderer),i=n.batchMaterial,o=e.main;switch(r){case t.onStartSize3DChanged:i.setBoolean("START_SIZE3D",o.startSize3D);break;case t.onStartRotation3DChanged:i.setBoolean("u_startRotation3D",o.startRotation3D);break;case t.onSimulationSpaceChanged:i.setInt("u_simulationSpace",o.simulationSpace);break;case t.onScaleModeChanged:i.setInt("u_scalingMode",o.scaleMode)}}},n.prototype._onShapeChanged=function(e){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var r=e.gameObject.getComponent(t.ParticleRenderer),n=r.batchMaterial;n.removeDefine("SHAPE"),e.shape.enable&&n.addDefine("SHAPE")}},n.prototype._onVelocityOverLifetime=function(r){if(this._enabled&&this._groups[0].hasGameObject(r.gameObject)){var n=r.gameObject.getComponent(t.ParticleRenderer),i=n.batchMaterial;i.removeDefine("VELOCITYCONSTANT"),i.removeDefine("VELOCITYCURVE"),i.removeDefine("VELOCITYTWOCONSTANT"),i.removeDefine("VELOCITYTWOCURVE");var o=r.velocityOverLifetime;if(o.enable){var a=o.mode;switch(a){case 0:i.addDefine("VELOCITYCONSTANT");var s=new e.Vector3(o.x.evaluate(),o.y.evaluate(),o.z.evaluate());i.setVector3("u_velocityConst",s);break;case 1:i.addDefine("VELOCITYCURVE"),i.setVector2v("u_velocityCurveX[0]",o.x.curve.floatValues),i.setVector2v("u_velocityCurveY[0]",o.y.curve.floatValues),i.setVector2v("u_velocityCurveZ[0]",o.z.curve.floatValues);break;case 3:i.addDefine("VELOCITYTWOCONSTANT");var l=new e.Vector3(o.x.constantMin,o.y.constantMin,o.z.constantMin),c=new e.Vector3(o.x.constantMax,o.y.constantMax,o.z.constantMax);i.setVector3("u_velocityConst",l),i.setVector3("u_velocityConstMax",c);break;case 2:i.addDefine("VELOCITYTWOCURVE"),i.setVector2v("u_velocityCurveX[0]",o.x.curveMin.floatValues),i.setVector2v("u_velocityCurveY[0]",o.y.curveMin.floatValues),i.setVector2v("u_velocityCurveZ[0]",o.z.curveMin.floatValues),i.setVector2v("u_velocityCurveMaxX[0]",o.x.curveMax.floatValues),i.setVector2v("u_velocityCurveMaxY[0]",o.y.curveMax.floatValues),i.setVector2v("u_velocityCurveMaxZ[0]",o.z.curveMax.floatValues)}i.setInt("u_spaceType",o.space)}}},n.prototype._onColorOverLifetime=function(e){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var r=e.gameObject.getComponent(t.ParticleRenderer),n=r.batchMaterial;n.removeDefine("COLOROGRADIENT"),n.removeDefine("COLORTWOGRADIENTS");var i=e.colorOverLifetime;if(i.enable){var o=i.color;switch(o.mode){case 1:n.addDefine("COLOROGRADIENT"),n.setVector2v("u_alphaGradient[0]",o.gradient.alphaValues),n.setVector4v("u_colorGradient[0]",o.gradient.colorValues);break;case 3:n.addDefine("COLORTWOGRADIENTS"),n.setVector2v("u_alphaGradient[0]",o.gradientMin.alphaValues),n.setVector2v("u_alphaGradientMax[0]",o.gradientMax.alphaValues),n.setVector4v("u_colorGradient[0]",o.gradientMin.colorValues),n.setVector4v("u_colorGradientMax[0]",o.gradientMax.colorValues)}}}},n.prototype._onSizeOverLifetime=function(e){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var r=e.gameObject.getComponent(t.ParticleRenderer),n=r.batchMaterial;n.removeDefine("SIZECURVE"),n.removeDefine("SIZECURVESEPERATE"),n.removeDefine("SIZETWOCURVES"),n.removeDefine("SIZETWOCURVESSEPERATE");var i=e.sizeOverLifetime;if(i.enable){var o=i.separateAxes,a=i.x.mode;switch(a){case 1:o?(n.addDefine("SIZECURVESEPERATE"),n.setVector2v("u_sizeCurveX[0]",i.x.curve.floatValues),n.setVector2v("u_sizeCurveY[0]",i.y.curve.floatValues),n.setVector2v("u_sizeCurveZ[0]",i.z.curve.floatValues)):(n.addDefine("SIZECURVE"),n.setVector2v("u_sizeCurve[0]",i.size.curve.floatValues));break;case 2:o?(n.addDefine("SIZETWOCURVESSEPERATE"),n.setVector2v("u_sizeCurveX[0]",i.x.curveMin.floatValues),n.setVector2v("u_sizeCurveY[0]",i.y.curveMin.floatValues),n.setVector2v("u_sizeCurveZ[0]",i.z.curveMin.floatValues),n.setVector2v("u_sizeCurveMaxX[0]",i.x.curveMax.floatValues),n.setVector2v("u_sizeCurveMaxY[0]",i.y.curveMax.floatValues),n.setVector2v("u_sizeCurveMaxZ[0]",i.z.curveMax.floatValues)):(n.addDefine("SIZETWOCURVES"),n.setVector2v("u_sizeCurve[0]",i.size.curveMin.floatValues),n.setVector2v("u_sizeCurveMax[0]",i.size.curveMax.floatValues))}}}},n.prototype._onRotationOverLifetime=function(r){if(this._enabled&&this._groups[0].hasGameObject(r.gameObject)){var n=r.gameObject.getComponent(t.ParticleRenderer),i=n.batchMaterial;i.removeDefine("ROTATIONOVERLIFETIME"),i.removeDefine("ROTATIONCONSTANT"),i.removeDefine("ROTATIONTWOCONSTANTS"),i.removeDefine("ROTATIONSEPERATE"),i.removeDefine("ROTATIONCURVE"),i.removeDefine("ROTATIONTWOCURVES");var o=r.rotationOverLifetime;if(o.enable){var a=r.rotationOverLifetime.x.mode,s=o.separateAxes;switch(s?i.addDefine("ROTATIONSEPERATE"):i.addDefine("ROTATIONOVERLIFETIME"),a){case 0:i.addDefine("ROTATIONCONSTANT"),s?i.setVector3("u_rotationConstSeprarate",new e.Vector3(o.x.constant,o.y.constant,o.z.constant)):i.setFloat("u_rotationConst",o.z.constant);break;case 3:i.addDefine("ROTATIONTWOCONSTANTS"),s?(i.setVector3("u_rotationConstSeprarate",new e.Vector3(o.x.constantMin,o.y.constantMin,o.z.constantMin)),i.setVector3("u_rotationConstMaxSeprarate",new e.Vector3(o.x.constantMax,o.y.constantMax,o.z.constantMax))):(i.setFloat("u_rotationConst",o.z.constantMin),i.setFloat("u_rotationConstMax",o.z.constantMax));break;case 1:i.addDefine("ROTATIONCURVE"),s?(i.setVector2v("u_rotationCurveX[0]",o.x.curve.floatValues),i.setVector2v("u_rotationCurveY[0]",o.y.curve.floatValues),i.setVector2v("u_rotationCurveZ[0]",o.z.curve.floatValues)):i.setVector2v("u_rotationCurve[0]",o.z.curve.floatValues);break;case 2:i.addDefine("ROTATIONTWOCURVES"),s?(i.setVector2v("u_rotationCurveX[0]",o.x.curveMin.floatValues),i.setVector2v("u_rotationCurveY[0]",o.y.curveMin.floatValues),i.setVector2v("u_rotationCurveZ[0]",o.z.curveMin.floatValues),i.setVector2v("u_rotationCurveMaxX[0]",o.x.curveMax.floatValues),i.setVector2v("u_rotationCurveMaxY[0]",o.y.curveMax.floatValues),i.setVector2v("u_rotationCurveMaxZ[0]",o.z.curveMax.floatValues)):(i.setVector2v("u_rotationCurve[0]",o.z.curveMin.floatValues),i.setVector2v("u_rotationCurveMax[0]",o.z.curveMin.floatValues))}}}},n.prototype._onTextureSheetAnimation=function(e){if(this._enabled&&this._groups[0].hasGameObject(e.gameObject)){var r=e.gameObject.getComponent(t.ParticleRenderer),n=r.batchMaterial;n.removeDefine("TEXTURESHEETANIMATIONCURVE"),n.removeDefine("TEXTURESHEETANIMATIONTWOCURVE");var i=e.textureSheetAnimation;if(i.enable){var o=i.frameOverTime.mode;switch(o){case 1:n.addDefine("TEXTURESHEETANIMATIONCURVE"),n.setVector2v("u_uvCurve[0]",i.frameOverTime.curve.floatValues);break;case 2:n.addDefine("TEXTURESHEETANIMATIONTWOCURVE"),n.setVector2v("u_uvCurve[0]",i.frameOverTime.curveMin.floatValues),n.setVector2v("u_uvCurveMax[0]",i.frameOverTime.curveMax.floatValues)}(1===o||2===o)&&(n.setFloat("u_cycles",i.cycleCount),n.setVector4v("u_subUV",i.floatValues))}}},n.prototype._updateDrawCalls=function(r,n){if(void 0===n&&(n=!0),this._enabled&&this._groups[0].hasGameObject(r)){var i=this._drawCallCollecter,o=r.getComponent(t.ParticleComponent),a=r.getComponent(t.ParticleRenderer);if(this._onUpdateBatchMesh(o,n),i.removeDrawCalls(a),a.batchMesh&&a.batchMaterial){5===a.renderMode&&console.error("ParticleSystem : error renderMode"),a.batchMesh._createBuffer(),this._drawCallCollecter.renderers.push(a);for(var s=0,l=0,c=a.batchMesh.glTFMesh.primitives;l<c.length;l++){var u=(c[l],e.DrawCall.create());u.renderer=a,u.matrix=r.transform.localToWorldMatrix,u.subMeshIndex=s++,u.mesh=a.batchMesh,u.material=a.batchMaterial||e.DefaultMaterials.MISSING,i.drawCalls.push(u)}}}},n.prototype.onEnable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._updateDrawCalls(r)}},n.prototype.onAddGameObject=function(e,r){this._updateDrawCalls(e,!1);var n=e.getComponent(t.ParticleComponent);n.main.playOnAwake&&n.play()},n.prototype.onRemoveGameObject=function(e){this._drawCallCollecter.removeDrawCalls(e.renderer)},n.prototype.onUpdate=function(e){e>.3&&(e=.3);for(var r=0,n=this._groups[0].gameObjects;r<n.length;r++){var i=n[r];i.getComponent(t.ParticleComponent).update(e)}},n.prototype.onDisable=function(){for(var e=0,t=this._groups[0].gameObjects;e<t.length;e++){var r=t[e];this._drawCallCollecter.removeDrawCalls(r.renderer)}},n}(paper.BaseSystem);t.ParticleSystem=r,__reflect(r.prototype,"egret3d.particle.ParticleSystem")}(t=e.particle||(e.particle={}))}(egret3d||(egret3d={}));var egret3d;!function(e){function t(e,t){for(var r=0,n=h;r<n.length;r++){var i=n[r],o=e.getExtension(i+t);if(o)return o}return null}function r(e,t){if(void 0===t&&(t="highp"),"highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}function n(e){var t="#extension GL_OES_standard_derivatives : enable \n";return t+="precision "+e+" float; \n",t+="precision "+e+" int; \n"}function i(t,r){if(!(r in e.ShaderChunk))throw new Error("Can not resolve #include <"+r+">");return o(e.ShaderChunk[r])}function o(e){return e.replace(d,i)}function a(e){function t(e,t,r,n){for(var i="",o=parseInt(t);o<parseInt(r);o++)i+=n.replace(/\[ i \]/g,"[ "+o+" ]");return i}var r=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;return e.replace(r,t)}function s(e,t,r,n){var i=t.createShader(e),s=o(r.uri);s=a(s),t.shaderSource(i,n+s),t.compileShader(i);var l=t.getShaderParameter(i,t.COMPILE_STATUS);return l?i:(console.error("Shader compile:"+r.name+" error! ->"+t.getShaderInfoLog(i)+"\n. did you want see the code?"),t.deleteShader(i),null)}function l(t,r,n){for(var i=r.program,o=r.attributes,a=t.getProgramParameter(i,t.ACTIVE_ATTRIBUTES),s=0;a>s;s++){var l=t.getActiveAttrib(i,s),c=t.getAttribLocation(i,l.name),u="";n.attributes[l.name]?u=n.attributes[l.name].semantic:(u=e.globalAttributeSemantic[l.name],u||console.error("未知Uniform定义："+l.name)),o.push({name:l.name,type:l.type,size:l.size,location:c,semantic:u})}}function c(t,r,n){for(var i=r.program,o=r.contextUniforms,a=r.uniforms,s=t.getProgramParameter(i,t.ACTIVE_UNIFORMS),l=0;s>l;l++){var c=t.getActiveUniform(i,l),u=t.getUniformLocation(i,c.name),p=n.uniforms[c.name],d="";p?d=p.semantic:(d=e.globalUniformSemantic[c.name],d||console.error("未知Uniform定义："+c.name)),d?o.push({name:c.name,type:c.type,size:c.size,semantic:d,location:u}):a.push({name:c.name,type:c.type,size:c.size,location:u})}}function u(e){for(var t=e.contextUniforms.concat(e.uniforms),r=[],n=[],i=0,o=t;i<o.length;i++){var a=o[i],s=a.name;(35678===a.type||35680===a.type)&&(s.indexOf("[")>-1?r.push(s):n.push(s))}for(var l=0,c=n.concat(r),u=0,p=t;u<p.length;u++){var a=p[u];if(!(c.indexOf(a.name)<0)){a.textureUnits||(a.textureUnits=[]),a.textureUnits.length=a.size;for(var d=0;d<a.size;d++)a.textureUnits[d]=l++}}}var p,d=/#include +<([\w\d.]+)>/g,h=["","MOZ_","OP_","WEBKIT_"];!function(e){e[e.None=0]="None",e[e.LinearToneMapping=1]="LinearToneMapping",e[e.ReinhardToneMapping=2]="ReinhardToneMapping",e[e.Uncharted2ToneMapping=3]="Uncharted2ToneMapping",e[e.CineonToneMapping=4]="CineonToneMapping"}(p=e.ToneMapping||(e.ToneMapping={})),e.globalAttributeSemantic={corner:"_CORNER",position:"POSITION",normal:"NORMAL",uv:"TEXCOORD_0",uv2:"TEXCOORD_1",color:"COLOR_0",skinIndex:"JOINTS_0",skinWeight:"WEIGHTS_0",startPosition:"_START_POSITION",startVelocity:"_START_VELOCITY",startColor:"_START_COLOR",startSize:"_START_SIZE",startRotation:"_START_ROTATION",time:"_TIME",random0:"_RANDOM0",random1:"_RANDOM1",startWorldPosition:"_WORLD_POSITION",startWorldRotation:"_WORLD_ROTATION",lineDistance:"_INSTANCE_DISTANCE",instanceStart:"_INSTANCE_START",instanceEnd:"_INSTANCE_END",instanceColorStart:"_INSTANCE_COLOR_START",instanceColorEnd:"_INSTANCE_COLOR_END",instanceDistanceStart:"_INSTANCE_DISTANCE_START",instanceDistanceEnd:"_INSTANCE_DISTANCE_END"},e.globalUniformSemantic={modelMatrix:"MODEL",modelViewMatrix:"MODELVIEW",projectionMatrix:"PROJECTION",viewMatrix:"VIEW",normalMatrix:"MODELVIEWINVERSE",modelViewProjectionMatrix:"MODELVIEWPROJECTION",viewProjectionMatrix:"_VIEWPROJECTION",cameraPosition:"_CAMERA_POS",cameraForward:"_CAMERA_FORWARD",cameraUp:"_CAMERA_UP",ambientLightColor:"_AMBIENTLIGHTCOLOR","directionalLights[0]":"_DIRECTLIGHTS","pointLights[0]":"_POINTLIGHTS","spotLights[0]":"_SPOTLIGHTS","boneMatrices[0]":"JOINTMATRIX","directionalShadowMatrix[0]":"_DIRECTIONSHADOWMAT","spotShadowMatrix[0]":"_SPOTSHADOWMAT","pointShadowMatrix[0]":"_POINTSHADOWMAT","directionalShadowMap[0]":"_DIRECTIONSHADOWMAP","spotShadowMap[0]":"_SPOTSHADOWMAP","pointShadowMap[0]":"_POINTSHADOWMAP",lightMap:"_LIGHTMAPTEX",lightMapIntensity:"_LIGHTMAPINTENSITY",lightMapScaleOffset:"_LIGHTMAP_SCALE_OFFSET",referencePosition:"_REFERENCEPOSITION",nearDistance:"_NEARDICTANCE",farDistance:"_FARDISTANCE",fogColor:"_FOG_COLOR",fogDensity:"_FOG_DENSITY",fogNear:"_FOG_NEAR",fogFar:"_FOG_FAR",toneMappingExposure:"_TONE_MAPPING_EXPOSURE",toneMappingWhitePoint:"_TONE_MAPPING_WHITE_POINT"};var f=function(i){function o(){var e=null!==i&&i.apply(this,arguments)||this;return e.precision="highp",e.toneMapping=p.None,e.toneMappingExposure=1,e.toneMappingWhitePoint=1,e}return __extends(o,i),o.prototype.initialize=function(a){i.prototype.initialize.call(this),o.canvas=a.canvas,o.webgl=a.webgl;var s=o.webgl;s&&(this.version=parseFloat(/^WebGL\ ([0-9])/.exec(s.getParameter(s.VERSION))[1]),this.maxPrecision=r(s,this.precision),this.maxTextures=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=s.getParameter(s.MAX_TEXTURE_SIZE),this.maxCubemapSize=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxVertexUniformVectors=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),this.floatTextures=!!t(s,"OES_texture_float"),this.anisotropyExt=t(s,"EXT_texture_filter_anisotropic"),this.shaderTextureLOD=t(s,"EXT_shader_texture_lod"),this.maxAnisotropy=null!==this.anisotropyExt?s.getParameter(this.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,this.oes_standard_derivatives=!!t(s,"OES_standard_derivatives"),this.gl_oes_standard_derivatives=!!t(s,"GL_OES_standard_derivatives"),o.commonDefines=n(this.maxPrecision),e.SkinnedMeshRendererSystem.maxBoneCount=Math.floor((this.maxVertexUniformVectors-20)/4),console.info("WebGL version:",this.version),console.info("Maximum shader precision:",this.maxPrecision),console.info("Maximum texture count:",this.maxTextures),console.info("Maximum vertex texture count:",this.maxVertexTextures),console.info("Maximum texture size:",this.maxTextureSize),console.info("Maximum cube map texture size:",this.maxCubemapSize),console.info("Maximum vertex uniform vectors:",this.maxVertexUniformVectors),console.info("Maximum GPU skinned bone count:",e.SkinnedMeshRendererSystem.maxBoneCount))},o.canvas=null,o.webgl=null,o.commonDefines="",o}(paper.SingletonComponent);e.WebGLCapabilities=f,__reflect(f.prototype,"egret3d.WebGLCapabilities");var _=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r.clearColor=e.Color.create(),r.viewPort=e.Rectangle.create(),r.renderTarget=null,r.render=null,r.draw=null,r._stateEnables=[3042,2884,2929],r._programs={},r._vsShaders={},r._fsShaders={},r._cacheStateEnable={},r._cacheProgram=null,r._cacheState=null,r}return __extends(r,t),r.prototype._getWebGLProgram=function(t,r,n){var i=f.webgl,o=i.createProgram(),a=t.name+n,l=this._vsShaders[a];l||(l=s(i.VERTEX_SHADER,i,t,f.commonDefines+n+e.ShaderChunk.common_vert_def),this._vsShaders[a]=l),a=r.name+n;var c=this._fsShaders[a];c||(c=s(i.FRAGMENT_SHADER,i,r,f.commonDefines+n+e.ShaderChunk.common_frag_def),this._fsShaders[a]=c),i.attachShader(o,l),i.attachShader(o,c),i.linkProgram(o);var u=i.getProgramParameter(o,i.LINK_STATUS);return u?o:(console.error("program compile: "+t.name+"_"+r.name+" error! ->"+i.getProgramInfoLog(o)),i.deleteProgram(o),null)},r.prototype.initialize=function(e){t.prototype.initialize.call(this),e&&(this.render=e.render.bind(e),this.draw=e.draw.bind(e))},r.prototype.updateViewport=function(t,r){var n,i,o=f.webgl;if(this.viewPort.copy(t),this.renderTarget=r,r)n=r.width,i=r.height,r.use();else{var a=e.stage.viewport;n=a.w,i=a.h,o.bindFramebuffer(o.FRAMEBUFFER,null)}o.viewport(n*t.x,i*(1-t.y-t.h),n*t.w,i*t.h),o.depthRange(0,1)},r.prototype.updateState=function(e){if(this._cacheState!==e){this._cacheState=e;for(var t=f.webgl,r=this._stateEnables,n=this._cacheStateEnable,i=0,o=r;i<o.length;i++){var a=o[i],s=e?e.enable&&e.enable.indexOf(a)>=0:!1;n[a]!==s&&(n[a]=s,s?t.enable(a):t.disable(a))}if(e){var l=e.functions;if(l)for(var c in l)t[c].apply(t,l[c])}}},r.prototype.clearState=function(){for(var e in this._cacheStateEnable)delete this._cacheStateEnable[e];this._cacheProgram=null,this._cacheState=null},r.prototype.useProgram=function(e){return this._cacheProgram!==e?(this._cacheProgram=e,f.webgl.useProgram(e.program),!0):!1},r.prototype.getProgram=function(t,r,n){var i=t._shader,o=i.config.extensions.KHR_techniques_webgl,a=o.shaders[0],s=o.shaders[1],p=a.name+"_"+s.name+"_"+n,d=f.webgl,h=this._programs[p];if(!h){var _=this._getWebGLProgram(a,s,n);_&&(h=new e.GlProgram(_),this._programs[p]=h,l(d,h,r),c(d,h,r),u(h))}return r.program!==h.id&&(r.program=h.id),h},r.prototype.clearBuffer=function(e,t){var r=f.webgl;256&e&&(r.depthMask(!0),r.clearDepth(1)),1024&e&&r.clearStencil(1),0!==(16384&e)&&t&&r.clearColor(t.r,t.g,t.b,t.a),r.clear(e)},r.prototype.copyFramebufferToTexture=function(e,t,r){void 0===r&&(r=0);var n=f.webgl;n.activeTexture(n.TEXTURE0),n.bindTexture(n.TEXTURE_2D,t.texture),n.copyTexImage2D(n.TEXTURE_2D,r,t.format,e.x,e.y,t.width,t.height,0)},r}(paper.SingletonComponent);e.WebGLRenderState=_,__reflect(_.prototype,"egret3d.WebGLRenderState")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=t.call(this)||this;return r.origin=e.Vector3.create(),r.direction=e.Vector3.create(),r}return __extends(r,t),r.create=function(t,n){if(void 0===t&&(t=e.Vector3.ZERO),void 0===n&&(n=e.Vector3.FORWARD),this._instances.length>0){var i=this._instances.pop().set(t,n);return i._released=!1,i}return(new r).set(t,n)},r.prototype.serialize=function(){return[this.origin.x,this.origin.y,this.origin.z,this.direction.x,this.direction.y,this.direction.z]},r.prototype.deserialize=function(e){return this.fromArray(e)},r.prototype.copy=function(e){return this.set(e.origin,e.direction)},r.prototype.clone=function(){return r.create(this.origin,this.direction)},r.prototype.set=function(e,t){return this.origin.copy(e),this.direction.copy(t),this},r.prototype.fromArray=function(e,t){return void 0===t&&(t=0),this.origin.fromArray(e,t),this.direction.fromArray(e,t+3),this},r.prototype.fromPoints=function(e,t){return this.direction.subtract(t,this.origin.copy(e)).normalize(),this},r.prototype.applyMatrix=function(e,t){return this.origin.applyMatrix(e,(t||this).origin),this.direction.applyDirection(e,(t||this).direction),this},r.prototype.getClosestPointToPoint=function(t,r){r||(r=e.Vector3.create());var n=r!==this.origin?this.origin:e.helpVector3A.copy(this.origin),i=this.direction,o=r.subtract(t,n).dot(i);return 0>o?r.copy(n):r.copy(i).multiplyScalar(o).add(n)},r.prototype.getPointAt=function(t,r){r||(r=e.Vector3.create());var n=r!==this.origin?this.origin:e.helpVector3A.copy(this.origin);return r.multiplyScalar(t,this.direction).add(n)},r.prototype.getSquaredDistance=function(t){var r=this.origin,n=e.helpVector3A.subtract(t,r).dot(this.direction);return 0>n?r.getSquaredDistance(t):this.getPointAt(n,e.helpVector3A).getSquaredDistance(t)},r.prototype.getDistance=function(e){return Math.sqrt(this.getSquaredDistance(e))},r.prototype.getDistanceToPlane=function(e){var t=this.origin,r=e.normal,n=r.dot(this.direction);if(0===n)return 0===e.getDistance(t)?0:-1;var i=-(t.dot(r)+e.constant)/n;return i>=0?i:-1},r._instances=[],r}(paper.BaseRelease);e.Ray=t,__reflect(t.prototype,"egret3d.Ray",["paper.ICCS","paper.ISerializable"]),e.helpRay=t.create()}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var r=t.call(this)||this;return r.constant=0,r.normal=e.Vector3.create(),r}return __extends(r,t),r.create=function(t,n){if(void 0===t&&(t=e.Vector3.ZERO),void 0===n&&(n=0),this._instances.length>0){var i=this._instances.pop().set(t,n);return i._released=!1,i}return(new r).set(t,n)},r.prototype.serialize=function(){return[this.normal.x,this.normal.y,this.normal.z,this.constant]},r.prototype.deserialize=function(e){return this.constant=e[3],this.normal.fromArray(e),this},r.prototype.clone=function(){return r.create(this.normal,this.constant)},r.prototype.copy=function(e){return this.set(e.normal,e.constant)},r.prototype.set=function(e,t){return this.constant=t,this.normal.copy(e),this},r.prototype.fromPoint=function(t,r){return void 0===r&&(r=e.Vector3.UP),this.constant=-r.dot(t),this.normal.copy(r),this},r.prototype.fromPoints=function(t,r,n){var i=e.helpVector3A.subtract(n,r).cross(e.helpVector3B.subtract(t,r)).normalize();return this.fromPoint(t,i),this},r.prototype.normalize=function(e){e||(e=this);var t=e.normal.length;return this.constant=e.constant*(1/t),this.normal.multiplyScalar(t,e.normal),this},r.prototype.negate=function(e){return e||(e=this),this.constant=-e.constant,this.normal.negate(e.normal),this},r.prototype.applyMatrix=function(t,r){r||(r=e.helpMatrix3A.getNormalMatrix(t));var n=this.getCoplanarPoint(e.helpVector3A).applyMatrix(t),i=this.normal.applyMatrix3(r).normalize();return this.constant=-n.dot(i),this},r.prototype.getDistance=function(e){return this.normal.dot(e)+this.constant},r.prototype.getProjectionPoint=function(t,r){return r||(r=e.Vector3.create()),r.multiplyScalar(-this.getDistance(t),this.normal).add(t)},r.prototype.getCoplanarPoint=function(t){return t||(t=e.Vector3.create()),t.copy(this.normal).multiplyScalar(-this.constant)},r.prototype.raycast=function(e,t){var r=e.getDistanceToPlane(this);if(r>0){if(t){var n=t.normal;t.distance=r,e.getPointAt(r,t.position),n&&n.copy(this.normal)}return!0}return!1},r._instances=[],r}(paper.BaseRelease);e.Plane=t,__reflect(t.prototype,"egret3d.Plane",["paper.ICCS","paper.ISerializable","egret3d.IRaycast"]);t.create()}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(){function t(e,t){this.beizerPoints=e,this.bezierPointNum=t}return t.createLinearBezier=function(r,n,i){i=i>2?i:3;var o=new Array,a=function(e,t,r){var n=(1-e)*t+e*r;return n};o.push(r);for(var s=1;i>=s;s++)o.push(new e.Vector3(a(s/i,r.x,n.x),a(s/i,r.y,r.y),a(s/i,r.z,r.z)));return new t(o,i)},t.createQuadraticBezier=function(r,n,i,o){o=o>2?o:3;for(var a=new Array,s=function(e,t,r,n){var i=(1-e)*(1-e)*t+2*e*(1-e)*r+e*e*n;return i},l=1;o>=l;l++)a.push(new e.Vector3(s(l/o,r.x,n.x,i.x),s(l/o,r.y,n.y,i.y),s(l/o,r.z,n.z,i.z)));return new t(a,o)},t.createCubicBezier=function(r,n,i,o,a){a=a>3?a:4;for(var s=new Array,l=function(e,t,r,n,i){var o=(1-e)*(1-e)*(1-e)*t+3*e*(1-e)*(1-e)*r+3*e*e*(1-e)*n+e*e*e*i;return o},c=1;a>=c;c++)s.push(new e.Vector3(l(c/a,r.x,n.x,i.x,o.x),l(c/a,r.y,n.y,i.y,o.y),l(c/a,r.z,n.z,i.z,o.z)));return new t(s,a)},t}();e.Curve3=t,__reflect(t.prototype,"egret3d.Curve3")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=e.Vector3.create(),r=function(){function r(){}return r.createPlane=function(t,r,n,i,o,a){void 0===t&&(t=1),void 0===r&&(r=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=1),void 0===a&&(a=1);for(var s=t/2,l=r/2,c=o+1,u=a+1,p=t/o,d=r/a,h=[],f=[],_=[],m=[],v=0;u>v;v++)for(var g=v*d-l,y=0;c>y;y++){var b=y*p-s;f.push(b+n,-g+i,0),_.push(0,0,-1),m.push(y/o,v/a)}for(var v=0;a>v;v++)for(var y=0;o>y;y++){var x=y+c*v,T=y+c*(v+1),C=y+1+c*(v+1),S=y+1+c*v;h.push(x,T,S,S,T,C)}var E=e.Mesh.create(f.length/3,h.length);return E.setAttributes("POSITION",f),E.setAttributes("NORMAL",_),E.setAttributes("TEXCOORD_0",m),E.setIndices(h),E},r.createCube=function(r,n,i,o,a,s,l,c,u,p){function d(e,t,r,n,i,l,c,u,p,d){for(var y=l/p,b=c/d,x=l/2,T=c/2,C=u/2,S=p+1,E=d+1,M=0,A=0;E>A;A++)for(var R=A*b-T,w=0;S>w;w++){var O=w*y-x;f[e]=O*n,f[t]=R*i,f[r]=C,m.push(f.x+o,f.y+a,f.z+s),f[e]=0,f[t]=0,f[r]=u>0?1:-1,v.push(f.x,f.y,f.z),g.push(w/p,A/d),M+=1}for(var A=0;d>A;A++)for(var w=0;p>w;w++){var L=h+w+S*A,P=h+w+S*(A+1),D=h+(w+1)+S*(A+1),I=h+(w+1)+S*A;_.push(L,P,I,P,D,I)}h+=M}void 0===r&&(r=1),void 0===n&&(n=1),void 0===i&&(i=1),void 0===o&&(o=0),void 0===a&&(a=0),void 0===s&&(s=0),void 0===l&&(l=1),void 0===c&&(c=1),void 0===u&&(u=1),void 0===p&&(p=!1);var h=0,f=t,_=[],m=[],v=[],g=[];if(d("z","y","x",-1,-1,i,n,-r,u,c),d("z","y","x",1,-1,i,n,r,u,c),d("x","z","y",1,1,r,i,-n,l,u),d("x","z","y",1,-1,r,i,n,l,u),d("x","y","z",1,-1,r,n,-i,l,c),d("x","y","z",-1,-1,r,n,i,l,c),p){var y=_.length/6,b=e.Mesh.create(m.length/3,0);b.setAttributes("POSITION",m),b.setAttributes("NORMAL",v),b.setAttributes("TEXCOORD_0",g);for(var x=0;6>x;++x)b.addSubMesh(y,x),b.setIndices(_,x,y*x);return b}var b=e.Mesh.create(m.length/3,_.length);return b.setAttributes("POSITION",m),b.setAttributes("NORMAL",v),b.setAttributes("TEXCOORD_0",g),b.setIndices(_),b},r.createCylinder=function(r,n,i,o,a,s,l,c,u,p,d,h){function f(){for(var e=0,t=(n-r)/i,u=0;c>=u;u++){for(var h=[],f=u/c,_=f*(n-r)+r,M=0;l>=M;M++){var A=M/l,R=A*d+p,w=Math.sin(R),O=Math.cos(R);C.x=_*w,C.y=-f*i+T,C.z=-_*O,v.push(C.x+o,C.y+a,C.z+s),C.set(w,t,O).normalize(),g.push(C.x,C.y,-C.z),y.push(A,f),h.push(b++)}S.push(h)}for(var M=0;l>M;M++)for(var u=0;c>u;u++){var L=S[u][M],P=S[u+1][M],D=S[u+1][M+1],I=S[u][M+1];m.push(L,P,I,P,D,I),e+=6}E.push(x,e,0),x+=e}function _(e){var t=0,i=0,c=0,u=e?r:n,h=e?1:-1;t=b;for(var f=1;l>=f;f++)v.push(0,T*h,0),g.push(0,h,0),y.push(.5,.5),b++;i=b;for(var f=0;l>=f;f++){var _=f/l,S=_*d+p,M=Math.cos(S),A=Math.sin(S);C.x=u*A,C.y=T*h,C.z=-u*M,v.push(C.x+o,C.y+a,C.z+s),g.push(0,h,0),y.push(.5*A*h+.5,.5*M+.5),b++}for(var f=0;l>f;f++){var R=t+f,w=i+f;e===!0?m.push(w,w+1,R):m.push(w+1,w,R),c+=3}E.push(x,c,e===!0?1:2),x+=c
}void 0===r&&(r=.5),void 0===n&&(n=.5),void 0===i&&(i=1),void 0===o&&(o=0),void 0===a&&(a=0),void 0===s&&(s=0),void 0===l&&(l=16),void 0===c&&(c=1),void 0===u&&(u=!1),void 0===p&&(p=0),void 0===d&&(d=2*Math.PI),void 0===h&&(h=!1);var m=[],v=[],g=[],y=[],b=0,x=0,T=i/2,C=t,S=[],E=[];if(f(),u===!1&&(r>0&&_(!0),n>0&&_(!1)),h){var M=e.Mesh.create(v.length/3,0);M.setAttributes("POSITION",v),M.setAttributes("NORMAL",g),M.setAttributes("TEXCOORD_0",y);for(var A=0;A<E.length;A+=3)M.addSubMesh(E[1],E[2]),M.setIndices(m,A,E[0]);return M}var M=e.Mesh.create(v.length/3,m.length);return M.setAttributes("POSITION",v),M.setAttributes("NORMAL",g),M.setAttributes("TEXCOORD_0",y),M.setIndices(m),M},r.createCircle=function(t,r,n){void 0===t&&(t=.5),void 0===r&&(r=1),void 0===n&&(n=3);for(var i=[],o=0;64*r>=o;++o)switch(n){case 1:i.push(0,Math.cos(o/32*Math.PI)*t,-Math.sin(o/32*Math.PI)*t);break;case 2:i.push(Math.cos(o/32*Math.PI)*t,0,-Math.sin(o/32*Math.PI)*t);break;case 3:i.push(Math.cos(o/32*Math.PI)*t,Math.sin(o/32*Math.PI)*t,-0)}var a=e.Mesh.create(i.length/3,0,["POSITION"]);return a.setAttributes("POSITION",i),a.glTFMesh.primitives[0].mode=3,a},r.createTorus=function(t,r,n,i,o,a){void 0===t&&(t=.5),void 0===r&&(r=.1),void 0===n&&(n=4),void 0===i&&(i=12),void 0===o&&(o=1),void 0===a&&(a=3);var s,l,c=[],u=[],p=[],d=[],h=e.Vector3.create(),f=e.Vector3.create(),_=e.Vector3.create();for(s=0;n>=s;s++)for(l=0;i>=l;l++){var m=l/i*Math.PI*2*o,v=s/n*Math.PI*2;switch(a){case 1:f.x=r*Math.sin(v),f.y=(t+r*Math.cos(v))*Math.cos(m),f.z=(t+r*Math.cos(v))*Math.sin(m);break;case 2:f.x=(t+r*Math.cos(v))*Math.cos(m),f.y=r*Math.sin(v),f.z=(t+r*Math.cos(v))*Math.sin(m);break;default:f.x=(t+r*Math.cos(v))*Math.cos(m),f.y=(t+r*Math.cos(v))*Math.sin(m),f.z=r*Math.sin(v)}u.push(f.x,f.y,-f.z),h.x=t*Math.cos(m),h.y=t*Math.sin(m),_.subtract(f,h).normalize(),p.push(_.x,_.y,-_.z),d.push(l/i),d.push(s/n)}for(s=1;n>=s;s++)for(l=1;i>=l;l++){var g=(i+1)*s+l-1,y=(i+1)*(s-1)+l-1,b=(i+1)*(s-1)+l,x=(i+1)*s+l;c.push(g,y,x,y,b,x)}h.release(),f.release(),_.release();var T=e.Mesh.create(u.length/3,c.length,["POSITION","NORMAL","TEXCOORD_0"]);return T.setAttributes("POSITION",u),T.setAttributes("NORMAL",p),T.setAttributes("TEXCOORD_0",d),T.setIndices(c),T},r.createSphere=function(r,n,i,o,a,s,l,c,u,p){void 0===r&&(r=.5),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=24),void 0===s&&(s=12),void 0===l&&(l=0),void 0===c&&(c=2*Math.PI),void 0===u&&(u=0),void 0===p&&(p=Math.PI),a=Math.max(3,Math.floor(a)),s=Math.max(2,Math.floor(s));for(var d=u+p,h=0,f=[],_=t,m=[],v=[],g=[],y=[],b=0;s>=b;b++){for(var x=[],T=b/s,C=0;a>=C;C++){var S=C/a;_.x=-r*Math.cos(l+S*c)*Math.sin(u+T*p),_.y=r*Math.cos(u+T*p),_.z=r*Math.sin(l+S*c)*Math.sin(u+T*p),v.push(_.x+n,_.y+i,-_.z+o),_.normalize(),g.push(_.x,_.y,-_.z),y.push(S,T),x.push(h++)}f.push(x)}for(var E=0;s>E;E++)for(var M=0;a>M;M++){var A=f[E][M+1],R=f[E][M],w=f[E+1][M],O=f[E+1][M+1];(0!==E||u>0)&&m.push(A,R,O),(E!==s-1||d<Math.PI)&&m.push(R,w,O)}var L=e.Mesh.create(v.length/3,m.length,["POSITION","NORMAL","TEXCOORD_0"]);return L.setAttributes("POSITION",v),L.setAttributes("NORMAL",g),L.setAttributes("TEXCOORD_0",y),L.setIndices(m),L},r}();e.MeshBuilder=r,__reflect(r.prototype,"egret3d.MeshBuilder")}(egret3d||(egret3d={}));var paper;!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.componentIndex=-1,t.componentClass=null,t.components=[],t}return __extends(t,e),t.prototype.addComponent=function(e){this.components.push(e)},t.prototype.removeComponent=function(e){var t=this.components.indexOf(e);t>=0&&this.components.splice(1,0)},t}(e.BaseComponent);e.GroupComponent=t,__reflect(t.prototype,"paper.GroupComponent")}(paper||(paper={}));var egret3d;!function(e){var t;!function(e){e.USE_COLOR="USE_COLOR",e.USE_MAP="USE_MAP",e.USE_SKINNING="USE_SKINNING",e.USE_LIGHTMAP="USE_LIGHTMAP",e.USE_SHADOWMAP="USE_SHADOWMAP",e.USE_SIZEATTENUATION="USE_SIZEATTENUATION",e.MAX_BONES="MAX_BONES",e.FLIP_V="FLIP_V",e.NUM_POINT_LIGHTS="NUM_POINT_LIGHTS",e.NUM_SPOT_LIGHTS="NUM_SPOT_LIGHTS",e.SHADOWMAP_TYPE_PCF="SHADOWMAP_TYPE_PCF",e.SHADOWMAP_TYPE_PCF_SOFT="SHADOWMAP_TYPE_PCF_SOFT",e.DEPTH_PACKING_3200="DEPTH_PACKING 3200",e.DEPTH_PACKING_3201="DEPTH_PACKING 3201",e.USE_FOG="USE_FOG",e.FOG_EXP2="FOG_EXP2"}(t=e.ShaderDefine||(e.ShaderDefine={}));var r;!function(e){e.Diffuse="diffuse",e.Opacity="opacity",e.Size="size",e.Map="map",e.Specular="specular",e.Shininess="shininess",e.UVTransform="uvTransform"}(r=e.ShaderUniformName||(e.ShaderUniformName={}));var n=function(e){function t(t,r){var n=e.call(this,r)||this;return n.config=t,n}return __extends(t,e),t}(e.GLTFAsset);e.Shader=n,__reflect(n.prototype,"egret3d.Shader")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=0,r=function(r){function n(n,i){var o=r.call(this,i)||this;if(o.renderQueue=2e3,o._id=t++,o._version=0,o._cacheDefines="",o._defines=[],o._textures=[],o._shader=null,o._glTFTechnique=null,n)if("string"==typeof n){var a=paper.Asset.find(n);a||console.error("Cannot find shader.",n),o._reset(a||e.DefaultShaders.MESH_BASIC)}else o._reset(n);else o._reset(e.DefaultShaders.MESH_BASIC);return o}return __extends(n,r),n.create=function(e,t){return new n(e,t)},n.prototype._reset=function(t){var r;if(t instanceof e.Shader)this.config=e.GLTFAsset.createGLTFExtensionsConfig(),r=this.config.materials[0]={extensions:{KHR_techniques_webgl:{technique:t.name,values:{}},paper:{renderQueue:t._renderQueue||this.renderQueue}}},this._shader=t;else{this.config=t,r=this.config.materials[0];var n=r.extensions.KHR_techniques_webgl.technique,i=paper.Asset.find(n);this._shader=i||e.DefaultShaders.MESH_BASIC}this.renderQueue=r.extensions.paper.renderQueue,this._glTFTechnique=e.GLTFAsset.createTechnique(this._shader.config.extensions.KHR_techniques_webgl.techniques[0]);var o=r.extensions.KHR_techniques_webgl.values,a=this._glTFTechnique.uniforms;for(var s in o)if(s in a){var l=o[s];Array.isArray(l)?a[s].value=l.concat():a[s].value=l}r.extensions.paper.states?this._glTFTechnique.states=r.extensions.paper.states:this._shader._states?this._glTFTechnique.states=e.GLTFAsset.copyTechniqueStates(this._shader._states):(this.setDepth(!0,!0),this.setCullFace(!0,2305,1029),this.setRenderQueue(2e3)),this._glTFTechnique.states.enable||(this._glTFTechnique.states.enable=[]),this._glTFTechnique.states.functions||(this._glTFTechnique.states.functions={});var c=r.extensions.paper.defines;if(c&&c.length>0)for(var u=0,p=c;u<p.length;u++){var d=p[u];this.addDefine(d)}else if(this._shader._defines)for(var h=0,f=this._shader._defines;h<f.length;h++){var d=f[h];this.addDefine(d)}},n.prototype.dispose=function(e){if(!r.prototype.dispose.call(this))return!1;if(e)for(var t=0,n=this._textures;t<n.length;t++){var i=n[t];i.dispose()}return this._version++,this._cacheDefines="",this._defines.length=0,this._textures.length=0,this._glTFTechnique=null,this._shader=null,!0},n.prototype.copy=function(e){this.renderQueue=e.renderQueue;var t=e._glTFTechnique.uniforms,r=this._glTFTechnique.uniforms;for(var n in t){var i=t[n],o=Array.isArray(i.value)?i.value.concat():i.value;r[n]={type:i.type,semantic:i.semantic,value:o}}var a=e._glTFTechnique.states,s=this._glTFTechnique.states;if(a.enable&&(s.enable=a.enable.concat()),a.functions){s.functions||(s.functions={});for(var n in a.functions)Array.isArray(a.functions[n])?s.functions[n]=a.functions[n].concat():s.functions[n]=a.functions[n]}for(var l=0,c=e._defines;l<c.length;l++){var u=c[l];this.addDefine(u)}return this},n.prototype.clone=function(){return new n(this._shader).copy(this)},n.prototype.addDefine=function(e,t){return void 0!==t&&(e+=" "+t),this._defines.indexOf(e)<0&&(this._defines.push(e),this._defines.sort(),this._version++),this},n.prototype.removeDefine=function(e,t){void 0!==t&&(e+=" "+t);var r=this._defines.indexOf(e);return r>=0&&(this._defines.splice(r,1),this._version++),this},n.prototype.setBoolean=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?r.value!==t&&(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setInt=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?r.value!==t&&(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setIntv=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setFloat=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?r.value!==t&&(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setFloatv=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector2=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value[0]!==t.x||r.value[1]!==t.y)&&(r.value[0]=t.x,r.value[1]=t.y,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector2v=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector3=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value[0]!==t.x||r.value[1]!==t.y||r.value[2]!==t.z)&&(r.value[0]=t.x,r.value[1]=t.y,r.value[2]=t.z,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector3v=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector4=function(e,t){if("_MainTex_ST"===e&&this._glTFTechnique.uniforms.uvTransform)return e="uvTransform",console.warn("已废弃的键值_MainTex_ST，建议改为:uvTransform-Matrix3"),void(this._glTFTechnique.uniforms[e].value=[t.x,0,0,0,t.y,0,t.z,t.w,1]);if(("_MainColor"===e||"_Color"===e)&&this._glTFTechnique.uniforms.diffuse)return e="diffuse",console.warn("已废弃的键值_MainColor、_Color，建议改为:diffuse-Vector3"),void(this._glTFTechnique.uniforms[e].value=[t.x,t.y,t.z]);var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value[0]!==t.x||r.value[1]!==t.y||r.value[2]!==t.z||r.value[3]!==t.w)&&(r.value[0]=t.x,r.value[1]=t.y,r.value[2]=t.z,r.value[3]=t.w,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setVector4v=function(e,t){if("_MainTex_ST"===e&&this._glTFTechnique.uniforms.uvTransform)return e="uvTransform",console.warn("已废弃的键值_MainTex_ST，建议改为:uvTransform-Matrix3"),void(this._glTFTechnique.uniforms[e].value=[t[0],0,0,0,t[1],0,t[2],t[3],1]);if(("_MainColor"===e||"_Color"===e)&&this._glTFTechnique.uniforms.diffuse)return e="diffuse",console.warn("已废弃的键值_MainColor、_Color，建议改为:diffuse-Vector3"),void(this._glTFTechnique.uniforms[e].value=[t[0],t[1],t[2]]);var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setMatrix=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t.rawData,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setMatrixv=function(e,t){var r=this._glTFTechnique.uniforms[e];return void 0!==r?(r.value=t,this._version++):console.warn("尝试设置不存在的Uniform值:"+e),this},n.prototype.setBlend=function(e,t,r){this._glTFTechnique.states||(this._glTFTechnique.states={enable:[],functions:{}});var n=this._glTFTechnique.states.enable,i=this._glTFTechnique.states.functions;switch(e){case 3:i.blendEquationSeparate=[32774,32774],i.blendFuncSeparate=[770,1,770,1];break;case 4:i.blendEquationSeparate=[32774,32774],i.blendFuncSeparate=[1,1,1,1];break;case 1:i.blendEquationSeparate=[32774,32774],i.blendFuncSeparate=[770,771,1,771];break;case 2:i.blendEquationSeparate=[32774,32774],i.blendFuncSeparate=[1,32772,1,32772];break;case 5:i.blendEquationSeparate=[32774,32774],i.blendFuncSeparate=[0,769,0,769];break;case 6:i.blendEquationSeparate=[32774,32774],i.blendFuncSeparate=[0,0,769,771];break;case 7:i.blendEquationSeparate=[32774,32774],i.blendFuncSeparate=[0,768,0,768];break;case 8:i.blendEquationSeparate=[32774,32774],i.blendFuncSeparate=[0,768,0,770];break;default:delete i.blendEquationSeparate,delete i.blendFuncSeparate}var o=n.indexOf(3042);return 0===e?o>=0&&n.splice(o,1):0>o&&n.push(3042),t&&(this.renderQueue=t),void 0!==r&&(this.opacity=r),this},n.prototype.setCullFace=function(e,t,r){void 0===t&&(t=2305),void 0===r&&(r=1029),this._glTFTechnique.states||(this._glTFTechnique.states={enable:[],functions:{}});var n=this._glTFTechnique.states.enable,i=this._glTFTechnique.states.functions,o=n.indexOf(2884);return e?(i.frontFace=[t],i.cullFace=[r],0>o&&n.push(2884)):(delete i.frontFace,delete i.cullFace,o>=0&&n.splice(o,1)),this},n.prototype.setDepth=function(e,t){this._glTFTechnique.states||(this._glTFTechnique.states={enable:[],functions:{}});var r=this._glTFTechnique.states.enable,n=this._glTFTechnique.states.functions,i=r.indexOf(2929);return e?(0>i&&r.push(2929),n.depthFunc=[515]):i>=0&&r.splice(i,1),t?n.depthMask=[!0]:n.depthMask=[!1],this},n.prototype.setStencil=function(e){this._glTFTechnique.states||(this._glTFTechnique.states={enable:[],functions:{}});var t=this._glTFTechnique.states.enable,r=(this._glTFTechnique.states.functions,t.indexOf(2960));return e?0>r&&t.push(2960):r>=0&&t.splice(r),this},n.prototype.clearStates=function(){return this._glTFTechnique.states&&delete this._glTFTechnique.states,this},n.prototype.getColor=function(t,r){var n;t?t instanceof e.Color?(n="diffuse",r=t):(n=t,r||(r=e.Color.create())):(n="diffuse",r=e.Color.create());var i=this._glTFTechnique.uniforms[n];return i&&i.value&&Array.isArray(i.value)&&(r.r=i.value[0],r.g=i.value[1],r.b=i.value[2]),r},n.prototype.setColor=function(t,r){var n;return t.hasOwnProperty("r")?(n="diffuse",r=t):n=t,this.setVector3(n,e.Vector3.create(r.r,r.g,r.b).release()),this},n.prototype.getUVTransform=function(t){t||(t=e.Matrix3.create());var r=this._glTFTechnique.uniforms.uvTransform;return r&&r.value&&Array.isArray(r.value)&&t.fromArray(r.value),t},n.prototype.setUVTTransform=function(e){var t=new Array(9);return e.toArray(t),this.setMatrixv("uvTransform",t)},n.prototype.getTexture=function(e){e||(e="map");var t=this._glTFTechnique.uniforms[e];return t?t.value||null:null},n.prototype.setTexture=function(t,r){var n;null===t||t instanceof e.Texture?(n="map",r=t):n=t,r||(r=e.DefaultTextures.WHITE),"_MainTex"===n&&this._glTFTechnique.uniforms.map&&(n="map",console.warn("已废弃的键值_MainTex，建议改为:map"));var i=this._glTFTechnique.uniforms[n];if(i){if(i.value){var o=this._textures.indexOf(i.value);o>-1&&this._textures.splice(o,1)}i.value!==r&&(i.value=r,this._version++)}return r instanceof e.BaseRenderTarget&&this.addDefine("FLIP_V"),r&&this._textures.push(r),this},Object.defineProperty(n.prototype,"shaderDefine",{get:function(){this._cacheDefines="";for(var e=0,t=this._defines;e<t.length;e++){var r=t[e];this._cacheDefines+="#define "+r+" \n"}return this._cacheDefines},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"opacity",{get:function(){var e=this._glTFTechnique.uniforms.opacity;return e?e.value!==e.value?1:e.value:1},set:function(e){this.setFloat("opacity",e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"shader",{get:function(){return this._shader},set:function(t){t||(t=e.DefaultShaders.MESH_BASIC),this._shader!==t&&this._reset(t)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"glTFTechnique",{get:function(){return this._glTFTechnique},enumerable:!0,configurable:!0}),n.prototype.setRenderQueue=function(e){return this.renderQueue=e,this},n.prototype.setOpacity=function(e){return this.setFloat("opacity",e)},n.prototype.setShader=function(t){return t||(t=e.DefaultShaders.MESH_BASIC),this._shader!==t?(this._reset(t),this):void 0},n}(e.GLTFAsset);e.Material=r,__reflect(r.prototype,"egret3d.Material")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e.copy={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"copy_vert",type:35633,uri:"varying vec2 vUv;\r\n\r\nvoid main() {\r\n	vUv = uv;\r\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n}"},{name:"copy_frag",type:35632,uri:"uniform float opacity;\r\nuniform sampler2D map;\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n	vec4 texel = texture2D( map, vUv );\r\n	gl_FragColor = opacity * texel;\r\n}"}],techniques:[{name:"copy",attributes:{},uniforms:{opacity:{type:5126,value:1},map:{type:35678}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.cube={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"cube_vert",type:35633,uri:"varying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n	vWorldPosition = transformDirection( position, modelMatrix );\r\n\r\n	#include <begin_vertex>\r\n	#include <project_vertex>\r\n\r\n	gl_Position.z = gl_Position.w; // set z to camera.far\r\n\r\n}\r\n"},{name:"cube_frag",type:35632,uri:"uniform samplerCube tCube;\r\nuniform float tFlip;\r\nuniform float opacity;\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\nvoid main() {\r\n\r\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\r\n	gl_FragColor.a *= opacity;\r\n\r\n}\r\n"}],techniques:[{name:"cube",attributes:{},uniforms:{tCube:{type:35680},tFlip:{type:5126},opacity:{type:5126,value:1}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.depth={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"depth_vert",type:35633,uri:"#include <common>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n\r\n	#include <skinbase_vertex>\r\n\r\n	#ifdef USE_DISPLACEMENTMAP\r\n\r\n		#include <beginnormal_vertex>\r\n		#include <morphnormal_vertex>\r\n		#include <skinnormal_vertex>\r\n\r\n	#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <displacementmap_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n\r\n}\r\n"},{name:"depth_frag",type:35632,uri:"#if DEPTH_PACKING == 3200\r\n\r\n	uniform float opacity;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( 1.0 );\r\n\r\n	#if DEPTH_PACKING == 3200\r\n\r\n		diffuseColor.a = opacity;\r\n\r\n	#endif\r\n\r\n	#include <map_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n\r\n	#include <logdepthbuf_fragment>\r\n\r\n	#if DEPTH_PACKING == 3200\r\n\r\n		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\r\n\r\n	#elif DEPTH_PACKING == 3201\r\n\r\n		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );\r\n\r\n	#endif\r\n\r\n}\r\n"}],techniques:[{name:"depth",attributes:{},uniforms:{uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},displacementMap:{type:35678},displacementScale:{type:5126},displacementBias:{type:5126},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},logDepthBufFC:{type:5126},opacity:{type:5126,value:1},map:{type:35678},alphaMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.distanceRGBA={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"distanceRGBA_vert",type:35633,uri:"#define DISTANCE\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n\r\n	#include <skinbase_vertex>\r\n\r\n	#ifdef USE_DISPLACEMENTMAP\r\n\r\n		#include <beginnormal_vertex>\r\n		#include <morphnormal_vertex>\r\n		#include <skinnormal_vertex>\r\n\r\n	#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <displacementmap_vertex>\r\n	#include <project_vertex>\r\n	#include <worldpos_vertex>\r\n	#include <clipping_planes_vertex>\r\n\r\n	vWorldPosition = worldPosition.xyz;\r\n\r\n}\r\n"},{name:"distanceRGBA_frag",type:35632,uri:"#define DISTANCE\r\n\r\nuniform vec3 referencePosition;\r\nuniform float nearDistance;\r\nuniform float farDistance;\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main () {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( 1.0 );\r\n\r\n	#include <map_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n\r\n	float dist = length( vWorldPosition - referencePosition );\r\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\r\n	dist = saturate( dist ); // clamp to [ 0, 1 ]\r\n\r\n	gl_FragColor = packDepthToRGBA( dist );\r\n\r\n}\r\n"}],techniques:[{name:"distanceRGBA",attributes:{},uniforms:{uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},displacementMap:{type:35678},displacementScale:{type:5126},displacementBias:{type:5126},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},map:{type:35678},alphaMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.equirect={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"equirect_vert",type:35633,uri:"varying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n	vWorldPosition = transformDirection( position, modelMatrix );\r\n\r\n	#include <begin_vertex>\r\n	#include <project_vertex>\r\n\r\n}\r\n"},{name:"equirect_frag",type:35632,uri:"uniform sampler2D tEquirect;\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n	vec3 direction = normalize( vWorldPosition );\r\n\r\n	vec2 sampleUV;\r\n\r\n	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\r\n\r\n	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\r\n\r\n	gl_FragColor = texture2D( tEquirect, sampleUV );\r\n\r\n}\r\n"}],techniques:[{name:"equirect",attributes:{},uniforms:{tEquirect:{type:35678}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.linebasic={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"linebasic_vert",type:35633,uri:"#include <common>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\nuniform float linewidth;\r\nuniform vec2 resolution;\r\nattribute vec3 instanceStart;\r\nattribute vec3 instanceEnd;\r\nattribute vec3 instanceColorStart;\r\nattribute vec3 instanceColorEnd;\r\nvarying vec2 vUv;\r\n#ifdef USE_DASH\r\n	uniform float dashScale;\r\n	attribute float instanceDistanceStart;\r\n	attribute float instanceDistanceEnd;\r\n	varying float vLineDistance;\r\n#endif\r\nvoid trimSegment( const in vec4 start, inout vec4 end ) {\r\n	// trim end segment so it terminates between the camera plane and the near plane\r\n	// conservative estimate of the near plane\r\n	float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\r\n	float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\r\n	float nearEstimate = - 0.5 * b / a;\r\n	float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\r\n	end.xyz = mix( start.xyz, end.xyz, alpha );\r\n}\r\nvoid main() {\r\n	#ifdef USE_COLOR\r\n		vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\r\n	#endif\r\n	#ifdef USE_DASH\r\n		vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\r\n	#endif\r\n	float aspect = resolution.x / resolution.y;\r\n	vUv = uv;\r\n	// camera space\r\n	vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\r\n	vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\r\n	// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\r\n	// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\r\n	// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\r\n	// perhaps there is a more elegant solution -- WestLangley\r\n	bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\r\n	if ( perspective ) {\r\n		if ( start.z < 0.0 && end.z >= 0.0 ) {\r\n			trimSegment( start, end );\r\n		} else if ( end.z < 0.0 && start.z >= 0.0 ) {\r\n			trimSegment( end, start );\r\n		}\r\n	}\r\n	// clip space\r\n	vec4 clipStart = projectionMatrix * start;\r\n	vec4 clipEnd = projectionMatrix * end;\r\n	// ndc space\r\n	vec2 ndcStart = clipStart.xy / clipStart.w;\r\n	vec2 ndcEnd = clipEnd.xy / clipEnd.w;\r\n	// direction\r\n	vec2 dir = ndcEnd - ndcStart;\r\n	// account for clip-space aspect ratio\r\n	dir.x *= aspect;\r\n	dir = normalize( dir );\r\n	// perpendicular to dir\r\n	vec2 offset = vec2( dir.y, - dir.x );\r\n	// undo aspect ratio adjustment\r\n	dir.x /= aspect;\r\n	offset.x /= aspect;\r\n	// sign flip\r\n	if ( position.x < 0.0 ) offset *= - 1.0;\r\n	// endcaps\r\n	if ( position.y < 0.0 ) {\r\n		offset += - dir;\r\n	} else if ( position.y > 1.0 ) {\r\n		offset += dir;\r\n	}\r\n	// adjust for linewidth\r\n	offset *= linewidth;\r\n	// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\r\n	offset /= resolution.y;\r\n	// select end\r\n	vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\r\n	// back to clip space\r\n	offset *= clip.w;\r\n	clip.xy += offset;\r\n	gl_Position = clip;\r\n	vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n	#include <fog_vertex>\r\n}"},{name:"linebasic_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#ifdef USE_DASH\r\n\r\n	uniform float dashSize;\r\n	uniform float gapSize;\r\n\r\n#endif\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	#ifdef USE_DASH\r\n\r\n		if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\r\n\r\n		if ( mod( vLineDistance, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\r\n\r\n	#endif\r\n\r\n	if ( abs( vUv.y ) > 1.0 ) {\r\n\r\n		float a = vUv.x;\r\n		float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\r\n		float len2 = a * a + b * b;\r\n\r\n		if ( len2 > 1.0 ) discard;\r\n\r\n	}\r\n\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <color_fragment>\r\n\r\n	gl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\r\n\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n\r\n}"}],techniques:[{name:"linebasic",attributes:{},uniforms:{logDepthBufFC:{type:5126},linewidth:{type:5126,value:1},dashScale:{type:5126,value:1},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1},dashSize:{type:5126,value:1},gapSize:{type:5126,value:1},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.linedashed={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"linedashed_vert",type:35633,uri:"uniform float scale;\r\nattribute float lineDistance;\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <color_vertex>\r\n\r\n	vLineDistance = scale * lineDistance;\r\n\r\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n	gl_Position = projectionMatrix * mvPosition;\r\n\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"linedashed_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\nuniform float dashSize;\r\nuniform float totalSize;\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\r\n\r\n		discard;\r\n\r\n	}\r\n\r\n	vec3 outgoingLight = vec3( 0.0 );\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <color_fragment>\r\n\r\n	outgoingLight = diffuseColor.rgb; // simple shader\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"linedashed",attributes:{},uniforms:{scale:{type:5126,value:1},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1},dashSize:{type:5126,value:1},totalSize:{type:5126,value:1},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.meshbasic={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"meshbasic_vert",type:35633,uri:"#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n	#include <uv2_vertex>\r\n	#include <color_vertex>\r\n	#include <skinbase_vertex>\r\n\r\n	#ifdef USE_ENVMAP\r\n\r\n	#include <beginnormal_vertex>\r\n	#include <morphnormal_vertex>\r\n	#include <skinnormal_vertex>\r\n	#include <defaultnormal_vertex>\r\n\r\n	#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n\r\n	#include <worldpos_vertex>\r\n	#include <clipping_planes_vertex>\r\n	#include <envmap_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"meshbasic_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_fragment>\r\n	#include <color_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n	#include <specularmap_fragment>\r\n\r\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\r\n	// accumulation (baked indirect lighting only)\r\n	#ifdef USE_LIGHTMAP\r\n			lowp vec4 lightmapTex = texture2D(lightMap, vUv2);\r\n		//    highp float power =pow( 2.0 ,lightmapTex.a * 255.0 - 128.0);\r\n		   	highp float power = 5.0 * lightmapTex.a;\r\n		   	reflectedLight.indirectDiffuse +=lightmapTex.rgb * power * lightMapIntensity;//EGRET\r\n		// reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\r\n\r\n	#else\r\n\r\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\r\n\r\n	#endif\r\n\r\n	// modulation\r\n	#include <aomap_fragment>\r\n\r\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\r\n\r\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\r\n\r\n	#include <envmap_fragment>\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <tonemapping_fragment>\r\n	// #include <encodings_fragment>\r\n	#include <fog_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"meshbasic",attributes:{},uniforms:{uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},refractionRatio:{type:5126},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1},map:{type:35678},alphaMap:{type:35678},aoMap:{type:35678},aoMapIntensity:{type:5126,value:1},reflectivity:{type:5126},envMapIntensity:{type:5126,value:1},envMap:{type:35678},flipEnvMap:{type:5126,value:1},maxMipLevel:{type:5124},specularMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.meshlambert={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"meshlambert_vert",type:35633,uri:"#define LAMBERT\r\nvarying vec3 vLightFront;\r\n\r\n#ifdef DOUBLE_SIDED\r\n\r\n	varying vec3 vLightBack;\r\n\r\n#endif\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_pars_maps>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n	#include <uv2_vertex>\r\n	#include <color_vertex>\r\n\r\n	#include <beginnormal_vertex>\r\n	#include <morphnormal_vertex>\r\n	#include <skinbase_vertex>\r\n	#include <skinnormal_vertex>\r\n	#include <defaultnormal_vertex>\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n\r\n	#include <worldpos_vertex>\r\n	#include <envmap_vertex>\r\n	#include <lights_lambert_vertex>\r\n	#include <shadowmap_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"meshlambert_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float opacity;\r\n\r\nvarying vec3 vLightFront;\r\n\r\n#ifdef DOUBLE_SIDED\r\n\r\n	varying vec3 vLightBack;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_pars_maps>\r\n#include <fog_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <shadowmask_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n	vec3 totalEmissiveRadiance = emissive;\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_fragment>\r\n	#include <color_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n	#include <specularmap_fragment>\r\n	#include <emissivemap_fragment>\r\n\r\n	// accumulation\r\n	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\r\n\r\n	#include <lightmap_fragment>\r\n\r\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\r\n\r\n	#ifdef DOUBLE_SIDED\r\n\r\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\r\n\r\n	#else\r\n\r\n		reflectedLight.directDiffuse = vLightFront;\r\n\r\n	#endif\r\n\r\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\r\n\r\n	// modulation\r\n	#include <aomap_fragment>\r\n\r\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\r\n\r\n	#include <envmap_fragment>\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <tonemapping_fragment>\r\n	// #include <encodings_fragment>\r\n	#include <fog_fragment>\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <dithering_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"meshlambert",attributes:{},uniforms:{uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},refractionRatio:{type:5126},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},emissive:{type:35665,value:[0,0,0]},opacity:{type:5126,value:1},map:{type:35678},alphaMap:{type:35678},aoMap:{type:35678},aoMapIntensity:{type:5126,value:1},emissiveMap:{type:35678},reflectivity:{type:5126},envMapIntensity:{type:5126,value:1},envMap:{type:35678},flipEnvMap:{type:5126,value:1},maxMipLevel:{type:5124},specularMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.meshphong={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"meshphong_vert",type:35633,uri:"#define PHONG\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n	#include <uv2_vertex>\r\n	#include <color_vertex>\r\n\r\n	#include <beginnormal_vertex>\r\n	#include <morphnormal_vertex>\r\n	#include <skinbase_vertex>\r\n	#include <skinnormal_vertex>\r\n	#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n	vNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <displacementmap_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n\r\n	vViewPosition = - mvPosition.xyz;\r\n\r\n	#include <worldpos_vertex>\r\n	#include <envmap_vertex>\r\n	#include <shadowmap_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"meshphong_frag",type:35632,uri:"#define PHONG\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <gradientmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_phong_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n	vec3 totalEmissiveRadiance = emissive;\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_fragment>\r\n	#include <color_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n	#include <specularmap_fragment>\r\n	#include <normal_fragment_begin>\r\n	#include <normal_fragment_maps>\r\n	#include <emissivemap_fragment>\r\n\r\n	// accumulation\r\n	#include <lights_phong_fragment>\r\n	#include <lights_fragment_begin>\r\n	#include <lights_fragment_maps>\r\n	#include <lights_fragment_end>\r\n\r\n	// modulation\r\n	#include <aomap_fragment>\r\n\r\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n	#include <envmap_fragment>\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <dithering_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"meshphong",attributes:{},uniforms:{uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},displacementMap:{type:35678},displacementScale:{type:5126},displacementBias:{type:5126},refractionRatio:{type:5126},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},emissive:{type:35665,value:[0,0,0]},specular:{type:35665,value:[1,1,1]},shininess:{type:5126,value:30},opacity:{type:5126,value:1},map:{type:35678},alphaMap:{type:35678},aoMap:{type:35678},aoMapIntensity:{type:5126,value:1},emissiveMap:{type:35678},reflectivity:{type:5126},envMapIntensity:{type:5126,value:1},envMap:{type:35678},flipEnvMap:{type:5126,value:1},maxMipLevel:{type:5124},gradientMap:{type:35678},bumpMap:{type:35678},bumpScale:{type:5126},normalMap:{type:35678},normalScale:{type:35664,value:[1,1]},specularMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.meshphysical={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"meshphysical_vert",type:35633,uri:"#define PHYSICAL\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n	#include <uv2_vertex>\r\n	#include <color_vertex>\r\n\r\n	#include <beginnormal_vertex>\r\n	#include <morphnormal_vertex>\r\n	#include <skinbase_vertex>\r\n	#include <skinnormal_vertex>\r\n	#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n	vNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <displacementmap_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n\r\n	vViewPosition = - mvPosition.xyz;\r\n\r\n	#include <worldpos_vertex>\r\n	#include <shadowmap_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"meshphysical_frag",type:35632,uri:"#define PHYSICAL\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float roughness;\r\nuniform float metalness;\r\nuniform float opacity;\r\n\r\n#ifndef STANDARD\r\n	uniform float clearCoat;\r\n	uniform float clearCoatRoughness;\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <bsdfs>\r\n#include <cube_uv_reflection_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <envmap_physical_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <lights_pars_begin>\r\n#include <lights_physical_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <roughnessmap_pars_fragment>\r\n#include <metalnessmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n	vec3 totalEmissiveRadiance = emissive;\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_fragment>\r\n	#include <color_fragment>\r\n	#include <alphamap_fragment>\r\n	#include <alphatest_fragment>\r\n	#include <roughnessmap_fragment>\r\n	#include <metalnessmap_fragment>\r\n	#include <normal_fragment_begin>\r\n	#include <normal_fragment_maps>\r\n	#include <emissivemap_fragment>\r\n\r\n	// accumulation\r\n	#include <lights_physical_fragment>\r\n	#include <lights_fragment_begin>\r\n	#include <lights_fragment_maps>\r\n	#include <lights_fragment_end>\r\n\r\n	// modulation\r\n	#include <aomap_fragment>\r\n\r\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <dithering_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"meshphysical",attributes:{},uniforms:{uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},displacementMap:{type:35678},displacementScale:{type:5126},displacementBias:{type:5126},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},emissive:{type:35665,value:[0,0,0]},roughness:{type:5126},metalness:{type:5126},opacity:{type:5126,value:1},clearCoat:{type:5126},clearCoatRoughness:{type:5126},map:{type:35678},alphaMap:{type:35678},aoMap:{type:35678},aoMapIntensity:{type:5126,value:1},emissiveMap:{type:35678},reflectivity:{type:5126},envMapIntensity:{type:5126,value:1},envMap:{type:35678},flipEnvMap:{type:5126,value:1},maxMipLevel:{type:5124},refractionRatio:{type:5126},bumpMap:{type:35678},bumpScale:{type:5126},normalMap:{type:35678},normalScale:{type:35664,value:[1,1]},roughnessMap:{type:35678},metalnessMap:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.motionBlur={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"motionBlur_vert",type:35633,uri:"varying vec2 vUv;\r\n			\r\nvoid main() {\r\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n	vUv = vec2(uv.x, uv.y);\r\n}"},{name:"motionBlur_frag",type:35632,uri:"varying vec2 vUv;\r\nuniform sampler2D tDiffuse;\r\nuniform sampler2D tColor;\r\nuniform vec2 resolution;\r\nuniform mat4 viewProjectionInverseMatrix;\r\nuniform mat4 previousViewProjectionMatrix;\r\nuniform float velocityFactor;\r\nfloat unpack_depth(const in vec4 color) {\r\n				return color.r;\r\n				//return ( color.r * 256. * 256. * 256. + color.g * 256. * 256. + color.b * 256. + color.a ) / ( 256. * 256. * 256. );\r\n}\r\nvoid main() {\r\n	\r\n    float zOverW = unpack_depth( texture2D( tDiffuse, vUv ) );\r\n    //float zOverW = 1.0;\r\n\r\n	// H is the viewport position at this pixel in the range -1 to 1.  \r\n	vec4 H = vec4( vUv.x * 2. - 1., vUv.y * 2. - 1., zOverW, 1. );  \r\n	// Transform by the view-projection inverse.  \r\n	vec4 D = H * viewProjectionInverseMatrix;\r\n	// Divide by w to get the world position.  \r\n	vec4 worldPos = D / D.w;\r\n\r\n	vec4 currentPos = H;  \r\n	// Use the world position, and transform by the previous view-projection matrix.  \r\n	vec4 previousPos = worldPos * previousViewProjectionMatrix;  \r\n	// Convert to nonhomogeneous points [-1,1] by dividing by w.  \r\n	previousPos /= previousPos.w;  \r\n	// Use this frame's position and last frame's to compute the pixel velocity.  \r\n	vec2 velocity = velocityFactor * ( currentPos.xy - previousPos.xy ) * .5;\r\n	//velocity = .01 *  normalize( velocity )\r\n	vec4 finalColor = vec4( 0. );\r\n	vec2 offset = vec2( 0. ); \r\n	float weight = 0.;\r\n	#if defined( SAMPLE_NUM ) && SAMPLE_NUM > 0\r\n		const int samples = SAMPLE_NUM;\r\n	#else\r\n		const int samples = 20;\r\n	#endif\r\n	\r\n	for( int i = 0; i < samples; i++ ) {  \r\n		offset = velocity * ( float( i ) / ( float( samples ) - 1. ) - .5 );\r\n		vec4 c = texture2D( tColor, vUv + offset );\r\n		finalColor += c;\r\n	}  \r\n	finalColor /= float( samples );\r\n	gl_FragColor = vec4( finalColor.rgb, 1. );\r\n	//gl_FragColor = vec4( velocity, 0., 1. );\r\n	//gl_FragColor.xyz = previousPos.xyz;\r\n	//gl_FragColor = vec4( gl_FragCoord.xy / resolution, 0., 1. );\r\n	//gl_FragColor = vec4( vec3( zOverW ), 1. );\r\n}"}],techniques:[{name:"motionBlur",attributes:{},uniforms:{tDiffuse:{type:35678},tColor:{type:35678},viewProjectionInverseMatrix:{type:35676},previousViewProjectionMatrix:{type:35676},velocityFactor:{type:5126}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.normal={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"normal_vert",type:35633,uri:"#define NORMAL\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\r\n\r\n	varying vec3 vViewPosition;\r\n\r\n#endif\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n\r\n	#include <beginnormal_vertex>\r\n	#include <morphnormal_vertex>\r\n	#include <skinbase_vertex>\r\n	#include <skinnormal_vertex>\r\n	#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n	vNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <skinning_vertex>\r\n	#include <displacementmap_vertex>\r\n	#include <project_vertex>\r\n	#include <logdepthbuf_vertex>\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\r\n\r\n	vViewPosition = - mvPosition.xyz;\r\n\r\n#endif\r\n\r\n}\r\n"},{name:"normal_frag",type:35632,uri:"#define NORMAL\r\n\r\nuniform float opacity;\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\r\n\r\n	varying vec3 vViewPosition;\r\n\r\n#endif\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n	varying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <normal_fragment_begin>\r\n	#include <normal_fragment_maps>\r\n\r\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\r\n\r\n}\r\n"}],techniques:[{name:"normal",attributes:{},uniforms:{uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},displacementMap:{type:35678},displacementScale:{type:5126},displacementBias:{type:5126},"morphTargetInfluences[0]":{type:5126},boneTexture:{type:35678},boneTextureSize:{type:5124},logDepthBufFC:{type:5126},opacity:{type:5126,value:1},bumpMap:{type:35678},bumpScale:{type:5126},normalMap:{type:35678},normalScale:{type:35664,value:[1,1]}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.particle={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"particle_vert",type:35633,uri:"//inspired by layaair:https://github.com/layabox/layaair/blob/master/src/d3/src/laya/d3/shader/files/ParticleShuriKen.vs\r\n#include <common>\r\n#if defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\r\n	attribute vec2 corner;\r\n#endif\r\nattribute vec3 startPosition;\r\nattribute vec3 startVelocity;\r\nattribute vec4 startColor;\r\nattribute vec3 startSize;\r\nattribute vec3 startRotation;\r\nattribute vec2 time;\r\n#if defined(COLOROGRADIENT)||defined(COLORTWOGRADIENTS)||defined(SIZETWOCURVES)||defined(SIZETWOCURVESSEPERATE)||defined(ROTATIONTWOCONSTANTS)||defined(ROTATIONTWOCURVES)\r\n  attribute vec4 random0;\r\n#endif\r\n#if defined(TEXTURESHEETANIMATIONTWOCURVE)||defined(VELOCITYTWOCONSTANT)||defined(VELOCITYTWOCURVE)\r\n  attribute vec4 random1;\r\n#endif\r\nattribute vec3 startWorldPosition;\r\nattribute vec4 startWorldRotation;\r\n\r\n#include <particle_common>\r\n\r\nvoid main()\r\n{\r\n	float age = u_currentTime - time.y;\r\n	float t = age/time.x;\r\n	if(t>1.0){ 			\r\n			v_discard=1.0;\r\n			return;\r\n  }\r\n	  \r\n	#include <particle_affector>\r\n	gl_Position=viewProjectionMatrix*vec4(center,1.0);\r\n	v_color = computeColor(startColor, t);\r\n	v_texcoord =computeUV(uv, t);\r\n	v_discard=0.0;\r\n}\r\n\r\n"},{name:"particle_frag",type:35632,uri:"//inspired by layaair:https://github.com/layabox/layaair/blob/master/src/d3/src/laya/d3/shader/files/ParticleShuriKen.ps\r\n#include <common>\r\nuniform sampler2D map;\r\nuniform vec3 diffuse;\r\nuniform float opacity;\r\nvarying float v_discard;\r\nvarying vec4 v_color;\r\nvarying vec2 v_texcoord;\r\n\r\n#ifdef RENDERMODE_MESH\r\n	varying vec4 v_mesh_color;\r\n#endif\r\n\r\nvoid main()\r\n{	\r\n	#ifdef RENDERMODE_MESH\r\n		gl_FragColor=v_mesh_color;\r\n	#else\r\n		gl_FragColor=vec4(1.0);	\r\n	#endif\r\n\r\n	if(v_discard!=0.0)\r\n		discard;\r\n	gl_FragColor*=texture2D(map,v_texcoord)*vec4(diffuse, opacity)*v_color*2.0;\r\n}"}],techniques:[{name:"particle",attributes:{},uniforms:{u_currentTime:{type:5126},u_gravity:{type:35665},u_worldPosition:{type:35665,value:[0,0,0]},u_worldRotation:{type:35666,value:[0,0,0,1]},u_startRotation3D:{type:35670},u_scalingMode:{type:5124},u_positionScale:{type:35665},u_sizeScale:{type:35665},u_lengthScale:{type:5126},u_speeaScale:{type:5126},u_simulationSpace:{type:5124},u_spaceType:{type:5124},u_velocityConst:{type:35665},"u_velocityCurveX[0]":{type:35664},"u_velocityCurveY[0]":{type:35664},"u_velocityCurveZ[0]":{type:35664},u_velocityConstMax:{type:35665},"u_velocityCurveMaxX[0]":{type:35664},"u_velocityCurveMaxY[0]":{type:35664},"u_velocityCurveMaxZ[0]":{type:35664},"u_colorGradient[0]":{type:35666},"u_alphaGradient[0]":{type:35664},"u_colorGradientMax[0]":{type:35666},"u_alphaGradientMax[0]":{type:35664},"u_sizeCurve[0]":{type:35664},"u_sizeCurveMax[0]":{type:35664},"u_sizeCurveX[0]":{type:35664},"u_sizeCurveY[0]":{type:35664},"u_sizeCurveZ[0]":{type:35664},"u_sizeCurveMaxX[0]":{type:35664},"u_sizeCurveMaxY[0]":{type:35664},"u_sizeCurveMaxZ[0]":{type:35664},u_rotationConst:{type:5126},u_rotationConstMax:{type:5126},"u_rotationCurve[0]":{type:35664},"u_rotationCurveMax[0]":{type:35664},u_rotationConstSeprarate:{type:35665},u_rotationConstMaxSeprarate:{type:35665},"u_rotationCurveX[0]":{type:35664},"u_rotationCurveY[0]":{type:35664},"u_rotationCurveZ[0]":{type:35664},"u_rotationCurveW[0]":{type:35664},"u_rotationCurveMaxX[0]":{type:35664},"u_rotationCurveMaxY[0]":{type:35664},"u_rotationCurveMaxZ[0]":{type:35664},"u_rotationCurveMaxW[0]":{type:35664},u_cycles:{type:5126},u_subUV:{type:35666},"u_uvCurve[0]":{type:35664},"u_uvCurveMax[0]":{type:35664},map:{type:35678},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.points={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"points_vert",type:35633,uri:"uniform float size;\r\nuniform float scale;\r\n\r\n#include <common>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <color_vertex>\r\n	#include <begin_vertex>\r\n	#include <morphtarget_vertex>\r\n	#include <project_vertex>\r\n\r\n	gl_PointSize = size;\r\n\r\n	#ifdef USE_SIZEATTENUATION\r\n\r\n		bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\r\n\r\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\r\n\r\n	#endif\r\n\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n	#include <worldpos_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"points_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <map_particle_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec3 outgoingLight = vec3( 0.0 );\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_particle_fragment>\r\n	#include <color_fragment>\r\n	#include <alphatest_fragment>\r\n\r\n	outgoingLight = diffuseColor.rgb;\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <premultiplied_alpha_fragment>\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"points",attributes:{},uniforms:{size:{type:5126},scale:{type:5126,value:1},"morphTargetInfluences[0]":{type:5126},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1},uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},map:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.shadow={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"shadow_vert",type:35633,uri:"\r\n#include <fog_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <begin_vertex>\r\n	#include <project_vertex>\r\n	#include <worldpos_vertex>\r\n	#include <shadowmap_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"shadow_frag",type:35632,uri:"uniform vec3 color;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <shadowmap_pars_fragment>\r\n#include <shadowmask_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\r\n\r\n	#include <fog_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"shadow",attributes:{},uniforms:{color:{type:35665},opacity:{type:5126,value:1}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]},e.sprite={version:"3",asset:{version:"2.0"},extensions:{KHR_techniques_webgl:{shaders:[{name:"sprite_vert",type:35633,uri:"uniform float rotation;\r\nuniform vec2 center;\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n	#include <uv_vertex>\r\n\r\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\r\n	vec2 scale;\r\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\r\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\r\n\r\n	#ifndef USE_SIZEATTENUATION\r\n\r\n		bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\r\n\r\n		if ( isPerspective ) scale *= - mvPosition.z;\r\n\r\n	#endif\r\n\r\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\r\n\r\n	vec2 rotatedPosition;\r\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\r\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\r\n\r\n	mvPosition.xy += rotatedPosition;\r\n\r\n	gl_Position = projectionMatrix * mvPosition;\r\n\r\n	#include <logdepthbuf_vertex>\r\n	#include <clipping_planes_vertex>\r\n	#include <fog_vertex>\r\n\r\n}\r\n"},{name:"sprite_frag",type:35632,uri:"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n	#include <clipping_planes_fragment>\r\n\r\n	vec3 outgoingLight = vec3( 0.0 );\r\n	vec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n	#include <logdepthbuf_fragment>\r\n	#include <map_fragment>\r\n	#include <alphatest_fragment>\r\n\r\n	outgoingLight = diffuseColor.rgb;\r\n\r\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n	#include <tonemapping_fragment>\r\n	#include <encodings_fragment>\r\n	#include <fog_fragment>\r\n\r\n}\r\n"}],techniques:[{name:"sprite",attributes:{},uniforms:{rotation:{type:5126},center:{type:35664},uvTransform:{type:35675,value:[1,0,0,0,1,0,0,0,1]},logDepthBufFC:{type:5126},diffuse:{type:35665,value:[1,1,1]},opacity:{type:5126,value:1},map:{type:35678},"clippingPlanes[0]":{type:35666}},states:{enable:[],functions:{}}}]},paper:{}},extensionsRequired:["paper","KHR_techniques_webgl"],extensionsUsed:["paper","KHR_techniques_webgl"]}
}(t=e.ShaderLib||(e.ShaderLib={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",e.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n uniform sampler2D alphaMap;\n\n#endif\n",e.alphatest_fragment="#ifdef ALPHATEST\n\n if ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",e.aomap_fragment="#ifdef USE_AOMAP\n\n // reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n reflectedLight.indirectDiffuse *= ambientOcclusion;\n\n #if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\n  float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n  reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n #endif\n\n#endif\n",e.aomap_pars_fragment="#ifdef USE_AOMAP\n\n uniform sampler2D aoMap;\n uniform float aoMapIntensity;\n\n#endif",e.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n",e.begin_vertex="\nvec3 transformed = vec3( position );\n",e.bsdfs='float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n if( decayExponent > 0.0 ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n  // based upon Frostbite 3 Moving to Physically-based Rendering\n  // page 32, equation 26: E[window1]\n  // https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n  // this is intended to be used on spot and point lights who are represented as luminous intensity\n  // but who must be converted to luminous irradiance for surface lighting calculation\n  float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n  float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n  return distanceFalloff * maxDistanceCutoffFactor;\n\n#else\n\n  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n#endif\n\n }\n\n return 1.0;\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n return RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n // Original approximation by Christophe Schlick \'94\n // float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n // Optimized variant (presented by Epic at SIGGRAPH \'13)\n // https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n return ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n // geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n // also see #12151\n\n float a2 = pow2( alpha );\n\n float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n return 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n float a2 = pow2( alpha );\n\n // dotNL and dotNV are explicitly swapped. This is not a mistake.\n float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n return 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n float a2 = pow2( alpha );\n\n float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n return RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n float alpha = pow2( roughness ); // UE4\'s roughness\n\n vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n float dotNH = saturate( dot( geometry.normal, halfDir ) );\n float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n vec3 F = F_Schlick( specularColor, dotLH );\n\n float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n float D = D_GGX( alpha, dotNH );\n\n return F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n const float LUT_SIZE  = 64.0;\n const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n const float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n float dotNV = saturate( dot( N, V ) );\n\n // texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n uv = uv * LUT_SCALE + LUT_BIAS;\n\n return uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n // Real-Time Area Lighting: a Journey from Research to Production (p.102)\n // An approximation of the form factor of a horizon-clipped rectangle.\n\n float l = length( f );\n\n return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n float x = dot( v1, v2 );\n\n float y = abs( x );\n\n // rational polynomial approximation to theta / sin( theta ) / 2PI\n float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n float b = 3.4175940 + ( 4.1616724 + y ) * y;\n float v = a / b;\n\n float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n return cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n // bail if point is on back side of plane of light\n // assumes ccw winding order of light vertices\n vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n vec3 lightNormal = cross( v1, v2 );\n\n if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n // construct orthonormal basis around N\n vec3 T1, T2;\n T1 = normalize( V - N * dot( V, N ) );\n T2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n // compute transform\n mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n // transform rect\n vec3 coords[ 4 ];\n coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n // project rect onto sphere\n coords[ 0 ] = normalize( coords[ 0 ] );\n coords[ 1 ] = normalize( coords[ 1 ] );\n coords[ 2 ] = normalize( coords[ 2 ] );\n coords[ 3 ] = normalize( coords[ 3 ] );\n\n // calculate vector form factor\n vec3 vectorFormFactor = vec3( 0.0 );\n vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n // adjust for horizon clipping\n float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n // alternate method of adjusting for horizon clipping (see referece)\n // refactoring required\n float len = length( vectorFormFactor );\n float z = vectorFormFactor.z / len;\n\n const float LUT_SIZE  = 64.0;\n const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n const float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n // tabulated horizon-clipped sphere, apparently...\n vec2 uv = vec2( z * 0.5 + 0.5, len );\n uv = uv * LUT_SCALE + LUT_BIAS;\n\n float scale = texture2D( ltc_2, uv ).w;\n\n float result = len * scale;\n*/\n\n return vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n vec4 r = roughness * c0 + c1;\n\n float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n return specularColor * AB.x + AB.y;\n\n} // validated\n\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n // geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n return 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n //float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n //float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n float dotNH = saturate( dot( geometry.normal, halfDir ) );\n float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n vec3 F = F_Schlick( specularColor, dotLH );\n\n float G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n float D = D_BlinnPhong( shininess, dotNH );\n\n return F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n',e.bumpMap_pars_frag="#ifdef USE_BUMPMAP\n\n uniform sampler2D bumpMap;\n uniform float bumpScale;\n\n // Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n // http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n // Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n vec2 dHdxy_fwd(vec2 uv) {\n\n  vec2 dSTdx = dFdx( uv );\n  vec2 dSTdy = dFdy( uv );\n\n  float Hll = bumpScale * texture2D( bumpMap, uv ).x;\n  float dBx = bumpScale * texture2D( bumpMap, uv + dSTdx ).x - Hll;\n  float dBy = bumpScale * texture2D( bumpMap, uv + dSTdy ).x - Hll;\n\n  return vec2( dBx, dBy );\n\n }\n\n vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy) {\n\n  vec3 vSigmaX = dFdx( surf_pos );\n  vec3 vSigmaY = dFdy( surf_pos );\n  vec3 vN = surf_norm;  // normalized\n\n  vec3 R1 = cross( vSigmaY, vN );\n  vec3 R2 = cross( vN, vSigmaX );\n\n  float fDet = dot( vSigmaX, R1 );\n\n  vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n  return normalize( abs( fDet ) * surf_norm - vGrad );\n\n }\n\n#endif\n",e.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n uniform sampler2D bumpMap;\n uniform float bumpScale;\n\n // Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n // http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n // Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n vec2 dHdxy_fwd() {\n\n  vec2 dSTdx = dFdx( vUv );\n  vec2 dSTdy = dFdy( vUv );\n\n  float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n  float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n  float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n  return vec2( dBx, dBy );\n\n }\n\n vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n  // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n  vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n  vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n  vec3 vN = surf_norm;  // normalized\n\n  vec3 R1 = cross( vSigmaY, vN );\n  vec3 R2 = cross( vN, vSigmaX );\n\n  float fDet = dot( vSigmaX, R1 );\n\n  fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n  vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n  return normalize( abs( fDet ) * surf_norm - vGrad );\n\n }\n\n#endif\n",e.clipping_planes_fragment="#if defined(NUM_CLIPPING_PLANES) && NUM_CLIPPING_PLANES > 0\n\n vec4 plane;\n\n #pragma unroll_loop\n for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n  plane = clippingPlanes[ i ];\n  if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\n }\n\n #if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n  bool clipped = true;\n\n  #pragma unroll_loop\n  for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n   plane = clippingPlanes[ i ];\n   clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\n  }\n\n  if ( clipped ) discard;\n\n #endif\n\n#endif\n",e.clipping_planes_pars_fragment="#if defined(NUM_CLIPPING_PLANES) && NUM_CLIPPING_PLANES > 0\n\n #if ! defined( PHYSICAL ) && ! defined( PHONG )\n  varying vec3 vViewPosition;\n #endif\n\n uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n",e.clipping_planes_pars_vertex="#if defined(NUM_CLIPPING_PLANES) && NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n varying vec3 vViewPosition;\n#endif\n",e.clipping_planes_vertex="#if defined(NUM_CLIPPING_PLANES) && NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n vViewPosition = - mvPosition.xyz;\n#endif\n\n",e.color_fragment="#ifdef USE_COLOR\n\n diffuseColor.rgb *= vColor;\n\n#endif",e.color_pars_fragment="#ifdef USE_COLOR\n\n varying vec3 vColor;\n\n#endif\n",e.color_pars_vertex="#ifdef USE_COLOR\n\n varying vec3 vColor;\n\n#endif",e.color_vertex="#ifdef USE_COLOR\n\n vColor.xyz = color.xyz;\n\n#endif",e.common="#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n return fract(sin(sn) * c);\n}\n\nstruct IncidentLight {\n vec3 color;\n vec3 direction;\n bool visible;\n};\n\nstruct ReflectedLight {\n vec3 directDiffuse;\n vec3 directSpecular;\n vec3 indirectDiffuse;\n vec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n vec3 position;\n vec3 normal;\n vec3 viewDir;\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n float distance = dot( planeNormal, point - pointOnPlane );\n\n return - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n return sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n mat3 tmp;\n\n tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n return tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n return dot( weights, color.rgb );\n\n}\n",e.common_frag_def="//------------------------------------------------\nuniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n//------------------------------------------------\n",e.common_vert_def="\n//------------------------------------------------\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\n\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n\n#ifdef USE_COLOR\n\n attribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n attribute vec3 morphTarget0;\n attribute vec3 morphTarget1;\n attribute vec3 morphTarget2;\n attribute vec3 morphTarget3;\n #ifdef USE_MORPHNORMALS\n  attribute vec3 morphNormal0;\n  attribute vec3 morphNormal1;\n  attribute vec3 morphNormal2;\n  attribute vec3 morphNormal3;\n #else\n  attribute vec3 morphTarget4;\n  attribute vec3 morphTarget5;\n  attribute vec3 morphTarget6;\n  attribute vec3 morphTarget7;\n #endif\n#endif\n#ifdef USE_SKINNING\n attribute vec4 skinIndex;\n attribute vec4 skinWeight;\n#endif\n//------------------------------------------------\n",e.cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\n\n#define cubeUV_textureSize (1024.0)\n\nint getFaceFromDirection(vec3 direction) {\n vec3 absDirection = abs(direction);\n int face = -1;\n if( absDirection.x > absDirection.z ) {\n  if(absDirection.x > absDirection.y )\n   face = direction.x > 0.0 ? 0 : 3;\n  else\n   face = direction.y > 0.0 ? 1 : 4;\n }\n else {\n  if(absDirection.z > absDirection.y )\n   face = direction.z > 0.0 ? 2 : 5;\n  else\n   face = direction.y > 0.0 ? 1 : 4;\n }\n return face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\n\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n float dxRoughness = dFdx(roughness);\n float dyRoughness = dFdy(roughness);\n vec3 dx = dFdx( vec * scale * dxRoughness );\n vec3 dy = dFdy( vec * scale * dyRoughness );\n float d = max( dot( dx, dx ), dot( dy, dy ) );\n // Clamp the value to the max mip level counts. hard coded to 6 mips\n d = clamp(d, 1.0, cubeUV_rangeClamp);\n float mipLevel = 0.5 * log2(d);\n return vec2(floor(mipLevel), fract(mipLevel));\n}\n\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\n\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n float a = 16.0 * cubeUV_rcpTextureSize;\n\n vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n // float powScale = exp2(roughnessLevel + mipLevel);\n float powScale = exp2_packed.x * exp2_packed.y;\n // float scale =  1.0 / exp2(roughnessLevel + 2.0 + mipLevel);\n float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n // float mipOffset = 0.75*(1.0 - 1.0/exp2(mipLevel))/exp2(roughnessLevel);\n float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\n bool bRes = mipLevel == 0.0;\n scale =  bRes && (scale < a) ? a : scale;\n\n vec3 r;\n vec2 offset;\n int face = getFaceFromDirection(direction);\n\n float rcpPowScale = 1.0 / powScale;\n\n if( face == 0) {\n  r = vec3(direction.x, -direction.z, direction.y);\n  offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n }\n else if( face == 1) {\n  r = vec3(direction.y, direction.x, direction.z);\n  offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n }\n else if( face == 2) {\n  r = vec3(direction.z, direction.x, direction.y);\n  offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n }\n else if( face == 3) {\n  r = vec3(direction.x, direction.z, direction.y);\n  offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n }\n else if( face == 4) {\n  r = vec3(direction.y, direction.x, -direction.z);\n  offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n }\n else {\n  r = vec3(direction.z, -direction.x, direction.y);\n  offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n  offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n }\n r = normalize(r);\n float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n vec2 base = offset + vec2( texelOffset );\n return base + s * ( scale - 2.0 * texelOffset );\n}\n\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\n\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n float roughnessVal = roughness* cubeUV_maxLods3;\n float r1 = floor(roughnessVal);\n float r2 = r1 + 1.0;\n float t = fract(roughnessVal);\n vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n float s = mipInfo.y;\n float level0 = mipInfo.x;\n float level1 = level0 + 1.0;\n level1 = level1 > 5.0 ? 5.0 : level1;\n\n // round to nearest mipmap if we are not interpolating.\n level0 += min( floor( s + 0.5 ), 5.0 );\n\n // Tri linear interpolation.\n vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\n vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\n vec4 result = mix(color10, color20, t);\n\n return vec4(result.rgb, 1.0);\n}\n\n#endif\n",e.defaultnormal_vertex="vec3 transformedNormal = normalMatrix * objectNormal;\n\n#ifdef FLIP_SIDED\n\n transformedNormal = - transformedNormal;\n\n#endif\n",e.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\n uniform sampler2D displacementMap;\n uniform float displacementScale;\n uniform float displacementBias;\n\n#endif\n",e.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\n transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n",e.dithering_fragment="#if defined( DITHERING )\n\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n",e.dithering_pars_fragment="#if defined( DITHERING )\n\n // based on https://www.shadertoy.com/view/MslGR8\n vec3 dithering( vec3 color ) {\n  //Calculate grid position\n  float grid_position = rand( gl_FragCoord.xy );\n\n  //Shift the individual colors differently, thus making it even harder to see the dithering pattern\n  vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n  //modify shift acording to grid position.\n  dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n  //shift the color by dither_shift\n  return color + dither_shift_RGB;\n }\n\n#endif\n",e.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\n vec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n totalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n",e.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\n uniform sampler2D emissiveMap;\n\n#endif\n",e.encodings_fragment="  // gl_FragColor = linearToOutputTexel( gl_FragColor );\n",e.encodings_pars_fragment="// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n return value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n float maxComponent = max( max( value.r, value.g ), value.b );\n float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n float maxRGB = max( value.x, max( value.g, value.b ) );\n float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n M            = ceil( M * 255.0 ) / 255.0;\n return vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n float maxRGB = max( value.x, max( value.g, value.b ) );\n float D      = max( maxRange / maxRGB, 1.0 );\n D            = min( floor( D ) / 255.0, 1.0 );\n return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n vec4 vResult;\n vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n vResult.w = fract(Le);\n vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n return vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n float Le = value.z * 255.0 + value.w;\n vec3 Xp_Y_XYZp;\n Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n return vec4( max(vRGB, 0.0), 1.0 );\n}\n",e.envmap_fragment="#ifdef USE_ENVMAP\n\n #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n  vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n  // Transforming Normal Vectors with the Inverse Transformation\n  vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n  #ifdef ENVMAP_MODE_REFLECTION\n\n   vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n  #else\n\n   vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n  #endif\n\n #else\n\n  vec3 reflectVec = vReflect;\n\n #endif\n\n #ifdef ENVMAP_TYPE_CUBE\n\n  vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n #elif defined( ENVMAP_TYPE_EQUIREC )\n\n  vec2 sampleUV;\n\n  reflectVec = normalize( reflectVec );\n\n  sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n  sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n  vec4 envColor = texture2D( envMap, sampleUV );\n\n #elif defined( ENVMAP_TYPE_SPHERE )\n\n  reflectVec = normalize( reflectVec );\n\n  vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\n  vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\n #else\n\n  vec4 envColor = vec4( 0.0 );\n\n #endif\n\n envColor = envMapTexelToLinear( envColor );\n\n #ifdef ENVMAP_BLENDING_MULTIPLY\n\n  outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n #elif defined( ENVMAP_BLENDING_MIX )\n\n  outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n #elif defined( ENVMAP_BLENDING_ADD )\n\n  outgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n #endif\n\n#endif\n",e.envmap_pars_fragment="#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n uniform float reflectivity;\n uniform float envMapIntensity;\n#endif\n\n#ifdef USE_ENVMAP\n\n #if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n  varying vec3 vWorldPosition;\n #endif\n\n #ifdef ENVMAP_TYPE_CUBE\n  uniform samplerCube envMap;\n #else\n  uniform sampler2D envMap;\n #endif\n uniform float flipEnvMap;\n uniform int maxMipLevel;\n\n #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n  uniform float refractionRatio;\n #else\n  varying vec3 vReflect;\n #endif\n\n#endif\n",e.envmap_pars_vertex="#ifdef USE_ENVMAP\n\n #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n  varying vec3 vWorldPosition;\n\n #else\n\n  varying vec3 vReflect;\n  uniform float refractionRatio;\n\n #endif\n\n#endif\n",e.envmap_physical_pars_fragment="#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\n vec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n  vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n  #ifdef ENVMAP_TYPE_CUBE\n\n   vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n   // TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n   // of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n   #else\n\n    // force the bias high to get the last LOD level as it is the most blurred.\n    vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_CUBE_UV )\n\n   vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n   vec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\n  #else\n\n   vec4 envMapColor = vec4( 0.0 );\n\n  #endif\n\n  return PI * envMapColor.rgb * envMapIntensity;\n\n }\n\n // taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n  //float envMapWidth = pow( 2.0, maxMIPLevelScalar );\n  //float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n  float maxMIPLevelScalar = float( maxMIPLevel );\n  float desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n  // clamp to allowable LOD ranges.\n  return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n }\n\n vec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n  #ifdef ENVMAP_MODE_REFLECTION\n\n   vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\n  #else\n\n   vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\n  #endif\n\n  reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n  float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\n  #ifdef ENVMAP_TYPE_CUBE\n\n   vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_CUBE_UV )\n\n   vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n   vec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\n\n  #elif defined( ENVMAP_TYPE_EQUIREC )\n\n   vec2 sampleUV;\n   sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n   sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_SPHERE )\n\n   vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #endif\n\n  return envMapColor.rgb * envMapIntensity;\n\n }\n\n#endif\n",e.envmap_vertex="#ifdef USE_ENVMAP\n\n #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n  vWorldPosition = worldPosition.xyz;\n\n #else\n\n  vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n  vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n  #ifdef ENVMAP_MODE_REFLECTION\n\n   vReflect = reflect( cameraToVertex, worldNormal );\n\n  #else\n\n   vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n  #endif\n\n #endif\n\n#endif\n",e.fog_fragment="#ifdef USE_FOG\n\n float fogDepth = length( vFogPosition );\n\n #ifdef FOG_EXP2\n\n  float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\n #else\n\n  float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n #endif\n\n gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n",e.fog_pars_fragment="#ifdef USE_FOG\n\n uniform vec3 fogColor;\n varying vec3 vFogPosition;\n\n #ifdef FOG_EXP2\n\n  uniform float fogDensity;\n\n #else\n\n  uniform float fogNear;\n  uniform float fogFar;\n\n #endif\n\n#endif\n",e.fog_pars_vertex="#ifdef USE_FOG\n\n varying vec3 vFogPosition;\n\n#endif\n",e.fog_vertex="#ifdef USE_FOG\n\n vFogPosition = mvPosition.xyz;\n\n#endif\n",e.gradientmap_pars_fragment="#ifdef TOON\n\n uniform sampler2D gradientMap;\n\n vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n  // dotNL will be from -1.0 to 1.0\n  float dotNL = dot( normal, lightDirection );\n  vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n  #ifdef USE_GRADIENTMAP\n\n   return texture2D( gradientMap, coord ).rgb;\n\n  #else\n\n   return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n  #endif\n\n\n }\n\n#endif\n",e.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n",e.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n uniform sampler2D lightMap;\n uniform float lightMapIntensity;\n\n#endif",e.lights_fragment_begin="/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\n\nIncidentLight directLight;\n\n#if (defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n PointLight pointLight;\n\n #pragma unroll_loop\n for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n  // pointLight = pointLights[ i ];\n  pointLight.position = vec3(pointLights[i* 15 + 0], pointLights[i * 15 + 1], pointLights[i * 15 + 2]);\n  pointLight.color = vec3(pointLights[i* 15 + 3], pointLights[i * 15 + 4], pointLights[i * 15 + 5]);\n  pointLight.distance = pointLights[i * 15 + 6];\n  pointLight.decay = pointLights[i * 15 + 7];\n\n  getPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n  #ifdef USE_SHADOWMAP\n  directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n  #endif\n\n  RE_Direct( directLight, geometry, material, reflectedLight );\n\n }\n\n#endif\n\n#if (defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n SpotLight spotLight;\n\n #pragma unroll_loop\n for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n  // spotLight = spotLights[ i ];\n  spotLight.position = vec3(spotLights[i * 18 + 0], spotLights[i * 18 + 1], spotLights[i * 18 + 2]);\n  spotLight.direction = vec3(spotLights[i * 18 + 3], spotLights[i * 18 + 4], spotLights[i * 18 + 5]);\n  spotLight.color = vec3(spotLights[i * 18 + 6], spotLights[i * 18 + 7], spotLights[i * 18 + 8]);\n  spotLight.distance = spotLights[i * 18 + 9];\n  spotLight.decay = spotLights[i * 18 + 10];\n  spotLight.coneCos = spotLights[i * 18 + 11];\n  spotLight.penumbraCos = spotLights[i * 18 + 12];\n  getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n  #ifdef USE_SHADOWMAP\n  directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n  #endif\n\n  RE_Direct( directLight, geometry, material, reflectedLight );\n\n }\n\n#endif\n\n#if (defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n DirectionalLight directionalLight;\n\n #pragma unroll_loop\n for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n  // directionalLight = directionalLights[ i ];\n  directionalLight.direction = vec3(directionalLights[i * 11 + 0], directionalLights[i * 11 + 1], directionalLights[i * 11 + 2]);\n  directionalLight.color = vec3(directionalLights[i * 11 + 3], directionalLights[i * 11 + 4], directionalLights[i * 11 + 5]);\n  getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n  #ifdef USE_SHADOWMAP\n  directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n  #endif\n\n  RE_Direct( directLight, geometry, material, reflectedLight );\n\n }\n\n#endif\n\n#if (defined(NUM_RECT_AREA_LIGHTS) &&  NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n RectAreaLight rectAreaLight;\n\n #pragma unroll_loop\n for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n  rectAreaLight = rectAreaLights[ i ];\n  RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n }\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n #if (defined(NUM_HEMI_LIGHTS) &&  NUM_HEMI_LIGHTS > 0 )\n\n  #pragma unroll_loop\n  for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n   irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n  }\n\n #endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n vec3 radiance = vec3( 0.0 );\n vec3 clearCoatRadiance = vec3( 0.0 );\n\n#endif\n",e.lights_fragment_end="#if defined( RE_IndirectDiffuse )\n\n RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n\n#endif\n",e.lights_fragment_maps="#if defined( RE_IndirectDiffuse )\n\n #ifdef USE_LIGHTMAP\n\n  vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\n\n   lightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n  #endif\n\n  irradiance += lightMapIrradiance;\n\n #endif\n\n #if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n  irradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n #endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n radiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\n #ifndef STANDARD\n  clearCoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n #endif\n\n#endif\n",e.lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n vLightBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\n#if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0\n PointLight pointLight;\n #pragma unroll_loop\n for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n  pointLight.position = vec3(pointLights[i * 15 + 0], pointLights[i * 15 + 1], pointLights[i * 15 + 2]);\n  pointLight.color = vec3(pointLights[i * 15 + 3], pointLights[i * 15 + 4], pointLights[i * 15 + 5]);\n  pointLight.distance = pointLights[i * 15 + 6];\n  pointLight.decay = pointLights[i * 15 + 7];\n  getPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n  dotNL = dot( geometry.normal, directLight.direction );\n  directLightColor_Diffuse = PI * directLight.color;\n\n  vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n  #ifdef DOUBLE_SIDED\n\n   vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n  #endif\n\n }\n\n#endif\n\n#if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0\n SpotLight spotLight;\n #pragma unroll_loop\n for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n  spotLight.position = vec3(spotLights[i * 18 + 0], spotLights[i * 18 + 1], spotLights[i * 18 + 2]);\n  spotLight.direction = vec3(spotLights[i * 18 + 3], spotLights[i * 18 + 4], spotLights[i * 18 + 5]);\n  spotLight.color = vec3(spotLights[i * 18 + 6], spotLights[i * 18 + 7], spotLights[i * 18 + 8]);\n  spotLight.distance = spotLights[i * 18 + 9];\n  spotLight.decay = spotLights[i * 18 + 10];\n  spotLight.coneCos = spotLights[i * 18 + 11];\n  spotLight.penumbraCos = spotLights[i * 18 + 12];\n\n  getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n  dotNL = dot( geometry.normal, directLight.direction );\n  directLightColor_Diffuse = PI * directLight.color;\n\n  vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n  #ifdef DOUBLE_SIDED\n\n   vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n  #endif\n }\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n  // TODO (abelnation): implement\n\n }\n\n#endif\n*/\n\n#if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0\n DirectionalLight directionalLight;\n #pragma unroll_loop\n for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n  directionalLight.direction = vec3(directionalLights[i * 11 + 0], directionalLights[i * 11 + 1], directionalLights[i * 11 + 2]);\n  directionalLight.color = vec3(directionalLights[i * 11 + 3], directionalLights[i * 11 + 4], directionalLights[i * 11 + 5]);\n  getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n  dotNL = dot( geometry.normal, directLight.direction );\n  directLightColor_Diffuse = PI * directLight.color;\n  // directLightColor_Diffuse = directLight.color;\n\n  vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n  // vLightFront += directLightColor_Diffuse;\n\n  #ifdef DOUBLE_SIDED\n\n   vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n  #endif\n\n }\n\n#endif\n\n#if defined(NUM_HEMI_LIGHTS) && NUM_HEMI_LIGHTS > 0\n\n #pragma unroll_loop\n for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n  vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n  #ifdef DOUBLE_SIDED\n\n   vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n  #endif\n\n }\n\n#endif\n",e.lights_pars_begin="uniform vec3 ambientLightColor;\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n vec3 irradiance = ambientLightColor;\n\n #ifndef PHYSICALLY_CORRECT_LIGHTS\n\n  irradiance *= PI;\n\n #endif\n\n return irradiance;\n\n}\n\n#if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0\n\n struct DirectionalLight {\n  vec3 direction;\n  vec3 color;\n\n  int shadow;\n  float shadowBias;\n  float shadowRadius;\n  vec2 shadowMapSize;\n };\n\n uniform float directionalLights[NUM_DIR_LIGHTS * 11];\n\n void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n  directLight.direction = directionalLight.direction;\n  directLight.color = directionalLight.color;\n  directLight.visible = true;\n }\n\n#endif\n\n\n#if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0\n\n struct PointLight {\n  vec3 position;\n  vec3 color;\n  float distance;\n  float decay;\n\n  int shadow;\n  float shadowBias;\n  float shadowRadius;\n  vec2 shadowMapSize;\n  float shadowCameraNear;\n  float shadowCameraFar;\n };\n\n uniform float pointLights[NUM_POINT_LIGHTS * 15 ];\n\n // directLight is an out parameter as having it as a return value caused compiler errors on some devices\n void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n  vec3 lVector = pointLight.position - geometry.position;\n  directLight.direction = normalize( lVector );\n\n  float lightDistance = length( lVector );\n\n  directLight.color = pointLight.color;\n  directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n  directLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n }\n\n#endif\n\n\n#if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0\n\n struct SpotLight {\n  vec3 position;\n  vec3 direction;\n  vec3 color;\n  float distance;\n  float decay;\n  float coneCos;\n  float penumbraCos;\n\n  int shadow;\n  float shadowBias;\n  float shadowRadius;\n  vec2 shadowMapSize;\n };\n\n uniform float spotLights[NUM_SPOT_LIGHTS * 18];\n\n // directLight is an out parameter as having it as a return value caused compiler errors on some devices\n void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\n  vec3 lVector = spotLight.position - geometry.position;\n  directLight.direction = normalize( lVector );\n\n  float lightDistance = length( lVector );\n  float angleCos = dot( directLight.direction, spotLight.direction );\n\n  if ( angleCos > spotLight.coneCos ) {\n\n   float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n   directLight.color = spotLight.color;\n   directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n   directLight.visible = true;\n\n  } else {\n\n   directLight.color = vec3( 0.0 );\n   directLight.visible = false;\n\n  }\n }\n\n#endif\n\n\n#if defined(NUM_RECT_AREA_LIGHTS) && NUM_RECT_AREA_LIGHTS > 0\n\n struct RectAreaLight {\n  vec3 color;\n  vec3 position;\n  vec3 halfWidth;\n  vec3 halfHeight;\n };\n\n // Pre-computed values of LinearTransformedCosine approximation of BRDF\n // BRDF approximation Texture is 64x64\n uniform sampler2D ltc_1; // RGBA Float\n uniform sampler2D ltc_2; // RGBA Float\n\n uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if defined(NUM_HEMI_LIGHTS) && NUM_HEMI_LIGHTS > 0\n\n struct HemisphereLight {\n  vec3 direction;\n  vec3 skyColor;\n  vec3 groundColor;\n };\n\n uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n  float dotNL = dot( geometry.normal, hemiLight.direction );\n  float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n  vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n  #ifndef PHYSICALLY_CORRECT_LIGHTS\n\n   irradiance *= PI;\n\n  #endif\n\n  return irradiance;\n\n }\n\n#endif\n",e.lights_pars_maps="#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\n vec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n  vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n  #ifdef ENVMAP_TYPE_CUBE\n\n   vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n   // TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n   // of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n   #else\n\n    // force the bias high to get the last LOD level as it is the most blurred.\n    vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_CUBE_UV )\n\n   vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n   vec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\n  #else\n\n   vec4 envMapColor = vec4( 0.0 );\n\n  #endif\n\n  return PI * envMapColor.rgb * envMapIntensity;\n\n }\n\n // taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n  //float envMapWidth = pow( 2.0, maxMIPLevelScalar );\n  //float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n  float maxMIPLevelScalar = float( maxMIPLevel );\n  float desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n  // clamp to allowable LOD ranges.\n  return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n }\n\n vec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n  #ifdef ENVMAP_MODE_REFLECTION\n\n   vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\n  #else\n\n   vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\n  #endif\n\n  reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n  float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\n  #ifdef ENVMAP_TYPE_CUBE\n\n   vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_CUBE_UV )\n\n   vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n   vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\n  #elif defined( ENVMAP_TYPE_EQUIREC )\n\n   vec2 sampleUV;\n   sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n   sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #elif defined( ENVMAP_TYPE_SPHERE )\n\n   vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\n   #ifdef TEXTURE_LOD_EXT\n\n    vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n   #else\n\n    vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n   #endif\n\n   envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n  #endif\n\n  return envMapColor.rgb * envMapIntensity;\n\n }\n\n#endif\n",e.lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",e.lights_phong_pars_fragment="varying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n varying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n vec3 diffuseColor;\n vec3 specularColor;\n float specularShininess;\n float specularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n #ifdef TOON\n\n  vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n #else\n\n  float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n  vec3 irradiance = dotNL * directLight.color;\n\n #endif\n\n #ifndef PHYSICALLY_CORRECT_LIGHTS\n\n  irradiance *= PI; // punctual light\n\n #endif\n\n reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct    RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse  RE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material ) (0)\n",e.lights_physical_fragment="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n material.clearCoat = saturate( clearCoat ); // Burley clearcoat model\n material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",e.lights_physical_pars_fragment="struct PhysicalMaterial {\n\n vec3 diffuseColor;\n float specularRoughness;\n vec3 specularColor;\n\n #ifndef STANDARD\n  float clearCoat;\n  float clearCoatRoughness;\n #endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n  vec3 normal = geometry.normal;\n  vec3 viewDir = geometry.viewDir;\n  vec3 position = geometry.position;\n  vec3 lightPos = rectAreaLight.position;\n  vec3 halfWidth = rectAreaLight.halfWidth;\n  vec3 halfHeight = rectAreaLight.halfHeight;\n  vec3 lightColor = rectAreaLight.color;\n  float roughness = material.specularRoughness;\n\n  vec3 rectCoords[ 4 ];\n  rectCoords[ 0 ] = lightPos - halfWidth - halfHeight; // counterclockwise\n  rectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n  rectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n  rectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\n  vec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n  vec4 t1 = texture2D( ltc_1, uv );\n  vec4 t2 = texture2D( ltc_2, uv );\n\n  mat3 mInv = mat3(\n   vec3( t1.x, 0, t1.y ),\n   vec3(    0, 1,    0 ),\n   vec3( t1.z, 0, t1.w )\n  );\n\n  // LTC Fresnel Approximation by Stephen Hill\n  // http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n  vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n  reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n  reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n }\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n vec3 irradiance = dotNL * directLight.color;\n\n #ifndef PHYSICALLY_CORRECT_LIGHTS\n\n  irradiance *= PI; // punctual light\n\n #endif\n\n #ifndef STANDARD\n  float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n #else\n  float clearCoatDHR = 0.0;\n #endif\n\n reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\n reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n #ifndef STANDARD\n\n  reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\n #endif\n\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n #ifndef STANDARD\n  float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n  float dotNL = dotNV;\n  float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n #else\n  float clearCoatDHR = 0.0;\n #endif\n\n reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\n #ifndef STANDARD\n\n  reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\n #endif\n\n}\n\n#define RE_Direct    RE_Direct_Physical\n#define RE_Direct_RectArea  RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse  RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular  RE_IndirectSpecular_Physical\n\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n",e.logdepthbuf_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif",e.logdepthbuf_pars_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n uniform float logDepthBufFC;\n varying float vFragDepth;\n\n#endif\n",e.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n #ifdef USE_LOGDEPTHBUF_EXT\n\n  varying float vFragDepth;\n\n #else\n\n  uniform float logDepthBufFC;\n\n #endif\n\n#endif\n",e.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n #ifdef USE_LOGDEPTHBUF_EXT\n\n  vFragDepth = 1.0 + gl_Position.w;\n\n #else\n\n  gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n  gl_Position.z *= gl_Position.w;\n\n #endif\n\n#endif\n",e.map_fragment="#ifdef USE_MAP\n\n vec4 texelColor = texture2D( map, vUv );\n\n // texelColor = mapTexelToLinear( texelColor );TODO\n diffuseColor *= texelColor;\n\n#endif\n",e.map_pars_fragment="#ifdef USE_MAP\n\n uniform sampler2D map;\n\n#endif\n",e.map_particle_fragment="#ifdef USE_MAP\n\n vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n vec4 mapTexel = texture2D( map, uv );\n diffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n",e.map_particle_pars_fragment="#ifdef USE_MAP\n\n uniform mat3 uvTransform;\n uniform sampler2D map;\n\n#endif\n",e.metalnessmap_fragment="float metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n vec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n // reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n metalnessFactor *= texelMetalness.b;\n\n#endif\n",e.metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\n uniform sampler2D metalnessMap;\n\n#endif",e.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n",e.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n #ifndef USE_MORPHNORMALS\n\n uniform float morphTargetInfluences[ 8 ];\n\n #else\n\n uniform float morphTargetInfluences[ 4 ];\n\n #endif\n\n#endif",e.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n #ifndef USE_MORPHNORMALS\n\n transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n #endif\n\n#endif\n",e.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n uniform sampler2D normalMap;\n uniform vec2 normalScale;\n\n #ifdef OBJECTSPACE_NORMALMAP\n\n  uniform mat3 normalMatrix;\n\n #else\n\n  // Per-Pixel Tangent Space Normal Mapping\n  // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n  vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n   // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n   vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n   vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n   vec2 st0 = dFdx( vUv.st );\n   vec2 st1 = dFdy( vUv.st );\n\n   float scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n   vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n   vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n   vec3 N = normalize( surf_norm );\n   mat3 tsn = mat3( S, T, N );\n\n   vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\n   mapN.xy *= normalScale;\n   mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n   return normalize( tsn * mapN );\n\n  }\n\n #endif\n\n#endif\n",e.normal_fragment_begin="#ifdef FLAT_SHADED\n\n // Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n\n vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n vec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n vec3 normal = normalize( vNormal );\n\n #ifdef DOUBLE_SIDED\n\n  normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n #endif\n\n#endif\n",e.normal_fragment_maps="#ifdef USE_NORMALMAP\n\n #ifdef OBJECTSPACE_NORMALMAP\n\n  normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n  #ifdef FLIP_SIDED\n\n   normal = - normal;\n\n  #endif\n\n  #ifdef DOUBLE_SIDED\n\n   normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n  #endif\n\n  normal = normalize( normalMatrix * normal );\n\n #else // tangent-space normal map\n\n  normal = perturbNormal2Arb( -vViewPosition, normal );\n\n #endif\n\n#elif defined( USE_BUMPMAP )\n\n normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n",e.packing="vec3 packNormalToRGB( const in vec3 normal ) {\n return normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n return 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n vec4 r = vec4( fract( v * PackFactors ), v );\n r.yzw -= r.xyz * ShiftRight8; // tidy overflow\n return r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n return dot( v, UnpackFactors );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n return linearClipZ * ( near - far ) - near;\n}\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",e.particle_affector="vec3 lifeVelocity = computeVelocity(t);\nvec4 worldRotation;\nif(u_simulationSpace==1)\n worldRotation=startWorldRotation;\nelse\n worldRotation=u_worldRotation;\nvec3 gravity=u_gravity*age;\n\nvec3 center=computePosition(startVelocity, lifeVelocity, age, t,gravity,worldRotation); \n#ifdef SPHERHBILLBOARD\n   vec2 corner=corner.xy;\n      vec3 cameraUpVector =normalize(cameraUp);\n      vec3 sideVector = normalize(cross(cameraForward,cameraUpVector));\n      vec3 upVector = normalize(cross(sideVector,cameraForward));\n     corner*=computeBillbardSize(startSize.xy,t);\n  #if defined(ROTATIONOVERLIFETIME)||defined(ROTATIONSEPERATE)\n   if(u_startRotation3D){\n    vec3 rotation=vec3(startRotation.xy,computeRotation(startRotation.z,age,t));\n    center += u_sizeScale.xzy*rotation_euler(corner.x*sideVector+corner.y*upVector,rotation);\n   }\n   else{\n    float rot = computeRotation(startRotation.x, age,t);\n    float c = cos(rot);\n    float s = sin(rot);\n    mat2 rotation= mat2(c, -s, s, c);\n    corner=rotation*corner;\n    center += u_sizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\n   }\n  #else\n   if(u_startRotation3D){\n    center += u_sizeScale.xzy*rotation_euler(corner.x*sideVector+corner.y*upVector,startRotation);\n   }\n   else{\n    float c = cos(startRotation.x);\n    float s = sin(startRotation.x);\n    mat2 rotation= mat2(c, -s, s, c);\n    corner=rotation*corner;\n    center += u_sizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\n   }\n  #endif\n #endif\n #ifdef STRETCHEDBILLBOARD\n  vec2 corner=corner.xy;\n  vec3 velocity;\n  #if defined(VELOCITYCONSTANT)||defined(VELOCITYCURVE)||defined(VELOCITYTWOCONSTANT)||defined(VELOCITYTWOCURVE)\n      if(u_spaceType==0)\n       velocity=rotation_quaternions(u_sizeScale*(startVelocity+lifeVelocity),worldRotation)+gravity;\n      else\n       velocity=rotation_quaternions(u_sizeScale*startVelocity,worldRotation)+lifeVelocity+gravity;\n   #else\n      velocity= rotation_quaternions(u_sizeScale*startVelocity,worldRotation)+gravity;\n   #endif \n  vec3 cameraUpVector = normalize(velocity);\n  vec3 direction = normalize(center-cameraPosition);\n    vec3 sideVector = normalize(cross(direction,normalize(velocity)));\n  sideVector=u_sizeScale.xzy*sideVector;\n  cameraUpVector=length(vec3(u_sizeScale.x,0.0,0.0))*cameraUpVector;\n    vec2 size=computeBillbardSize(startSize.xy,t);\n    const mat2 rotaionZHalfPI=mat2(0.0, -1.0, 1.0, 0.0);\n    corner=rotaionZHalfPI*corner;\n    corner.y=corner.y-abs(corner.y);\n    float speed=length(velocity);\n    center +=sign(u_sizeScale.x)*(sign(u_lengthScale)*size.x*corner.x*sideVector+(speed*u_speeaScale+size.y*u_lengthScale)*corner.y*cameraUpVector);\n #endif\n #ifdef HORIZONTALBILLBOARD\n  vec2 corner=corner.xy;\n    const vec3 cameraUpVector=vec3(0.0,0.0,1.0);\n    const vec3 sideVector = vec3(-1.0,0.0,0.0);\n  float rot = computeRotation(startRotation.x, age,t);\n    float c = cos(rot);\n    float s = sin(rot);\n    mat2 rotation= mat2(c, -s, s, c);\n    corner=rotation*corner;\n  corner*=computeBillbardSize(startSize.xy,t);\n    center +=u_sizeScale.xzy*(corner.x*sideVector+ corner.y*cameraUpVector);\n #endif\n #ifdef VERTICALBILLBOARD\n  vec2 corner=corner.xy;\n    const vec3 cameraUpVector =vec3(0.0,1.0,0.0);\n    vec3 sideVector = normalize(cross(cameraForward,cameraUpVector));\n  float rot = computeRotation(startRotation.x, age,t);\n    float c = cos(rot);\n    float s = sin(rot);\n    mat2 rotation= mat2(c, -s, s, c);\n    corner=rotation*corner;\n  corner*=computeBillbardSize(startSize.xy,t);\n    center +=u_sizeScale.xzy*(corner.x*sideVector+ corner.y*cameraUpVector);\n #endif\n #ifdef RENDERMESH\n    vec3 size=computeMeshSize(startSize,t);\n  #if defined(ROTATIONOVERLIFETIME)||defined(ROTATIONSEPERATE)\n    if(u_startRotation3D){\n     vec3 rotation=vec3(startRotation.xy,-computeRotation(startRotation.z, age,t));\n     center+= rotation_quaternions(u_sizeScale*rotation_euler(position*size,rotation),worldRotation);\n    }\n    else{\n     #ifdef ROTATIONOVERLIFETIME\n      float angle=computeRotation(startRotation.x, age,t);\n      if(startPosition.x>0.1 || startPosition.x < -0.1||startPosition.y>0.1 || startPosition.y < -0.1){\n       center+= (rotation_quaternions(rotation_axis(u_sizeScale*position*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(startPosition.xy,0.0))),angle),worldRotation));//已验证\n      }\n      else{\n       #ifdef SHAPE\n        center+= u_sizeScale.xzy*(rotation_quaternions(rotation_axis(position*size,vec3(0.0,-1.0,0.0),angle),worldRotation));\n       #else\n        if(u_simulationSpace==1)\n         center+=rotation_axis(u_sizeScale*position*size,vec3(0.0,0.0,-1.0),angle);\n        else if(u_simulationSpace==0)\n         center+=rotation_quaternions(u_sizeScale*rotation_axis(position*size,vec3(0.0,0.0,-1.0),angle),worldRotation);\n       #endif\n      }\n     #endif\n     #ifdef ROTATIONSEPERATE\n      vec3 angle=compute3DRotation(vec3(0.0,0.0,startRotation.z), age,t);\n      center+= (rotation_quaternions(rotation_euler(u_sizeScale*position*size,vec3(angle.x,angle.y,angle.z)),worldRotation));\n     #endif \n    }\n  #else\n  if(u_startRotation3D){\n   center+= rotation_quaternions(u_sizeScale*rotation_euler(position*size,startRotation),worldRotation);\n  }\n  else{\n   if(startPosition.x>0.1 || startPosition.x < -0.1||startPosition.y>0.1 || startPosition.y < -0.1){\n    if(u_simulationSpace==1)\n     center+= rotation_axis(u_sizeScale*position*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(startPosition.xy,0.0))),startRotation.x);\n    else if(u_simulationSpace==0)\n     center+= (rotation_quaternions(u_sizeScale*rotation_axis(position*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(startPosition.xy,0.0))),startRotation.x),worldRotation));\n   }\n   else{\n    #ifdef SHAPE\n     if(u_simulationSpace==1)\n      center+= u_sizeScale*rotation_axis(position*size,vec3(0.0,-1.0,0.0),startRotation.x);\n     else if(u_simulationSpace==0)\n      center+= rotation_quaternions(u_sizeScale*rotation_axis(position*size,vec3(0.0,-1.0,0.0),startRotation.x),worldRotation); \n    #else\n     if(u_simulationSpace==1)\n      center+= rotation_axis(u_sizeScale*position*size,vec3(0.0,0.0,-1.0),startRotation.x);\n     else if(u_simulationSpace==0)\n      center+= rotation_quaternions(u_sizeScale*rotation_axis(position*size,vec3(0.0,0.0,-1.0),startRotation.x),worldRotation);\n    #endif\n   }\n  }\n  #endif\n  v_mesh_color=vec4(color, 1.0);\n  #endif",e.particle_common="\n\nuniform float u_currentTime;\nuniform vec3 u_gravity;\n\nuniform vec3 u_worldPosition;\nuniform vec4 u_worldRotation;\nuniform bool u_startRotation3D;\nuniform int u_scalingMode;\nuniform vec3 u_positionScale;\nuniform vec3 u_sizeScale;\nuniform mat4 viewProjectionMatrix;\n\nuniform vec3 cameraForward;\nuniform vec3 cameraUp;\n\nuniform float u_lengthScale;\nuniform float u_speeaScale;\nuniform int u_simulationSpace;\n\n#if defined(VELOCITYCONSTANT)||defined(VELOCITYCURVE)||defined(VELOCITYTWOCONSTANT)||defined(VELOCITYTWOCURVE)\n  uniform int u_spaceType;\n#endif\n#if defined(VELOCITYCONSTANT)||defined(VELOCITYTWOCONSTANT)\n  uniform vec3 u_velocityConst;\n#endif\n#if defined(VELOCITYCURVE)||defined(VELOCITYTWOCURVE)\n  uniform vec2 u_velocityCurveX[4];\n  uniform vec2 u_velocityCurveY[4];\n  uniform vec2 u_velocityCurveZ[4];\n#endif\n#ifdef VELOCITYTWOCONSTANT\n  uniform vec3 u_velocityConstMax;\n#endif\n#ifdef VELOCITYTWOCURVE\n  uniform vec2 u_velocityCurveMaxX[4];\n  uniform vec2 u_velocityCurveMaxY[4];\n  uniform vec2 u_velocityCurveMaxZ[4];\n#endif\n\n#ifdef COLOROGRADIENT\n  uniform vec4 u_colorGradient[4];\n  uniform vec2 u_alphaGradient[4];\n#endif\n#ifdef COLORTWOGRADIENTS\n  uniform vec4 u_colorGradient[4];\n  uniform vec2 u_alphaGradient[4];\n  uniform vec4 u_colorGradientMax[4];\n  uniform vec2 u_alphaGradientMax[4];\n#endif\n\n#if defined(SIZECURVE)||defined(SIZETWOCURVES)\n  uniform vec2 u_sizeCurve[4];\n#endif\n#ifdef SIZETWOCURVES\n  uniform vec2 u_sizeCurveMax[4];\n#endif\n#if defined(SIZECURVESEPERATE)||defined(SIZETWOCURVESSEPERATE)\n  uniform vec2 u_sizeCurveX[4];\n  uniform vec2 u_sizeCurveY[4];\n  uniform vec2 u_sizeCurveZ[4];\n#endif\n#ifdef SIZETWOCURVESSEPERATE\n  uniform vec2 u_sizeCurveMaxX[4];\n  uniform vec2 u_sizeCurveMaxY[4];\n  uniform vec2 u_sizeCurveMaxZ[4];\n#endif\n\n#ifdef ROTATIONOVERLIFETIME\n  #if defined(ROTATIONCONSTANT)||defined(ROTATIONTWOCONSTANTS)\n    uniform float u_rotationConst;\n  #endif\n  #ifdef ROTATIONTWOCONSTANTS\n    uniform float u_rotationConstMax;\n  #endif\n  #if defined(ROTATIONCURVE)||defined(ROTATIONTWOCURVES)\n    uniform vec2 u_rotationCurve[4];\n  #endif\n  #ifdef ROTATIONTWOCURVES\n    uniform vec2 u_rotationCurveMax[4];\n  #endif\n#endif\n#ifdef ROTATIONSEPERATE\n  #if defined(ROTATIONCONSTANT)||defined(ROTATIONTWOCONSTANTS)\n    uniform vec3 u_rotationConstSeprarate;\n  #endif\n  #ifdef ROTATIONTWOCONSTANTS\n    uniform vec3 u_rotationConstMaxSeprarate;\n  #endif\n  #if defined(ROTATIONCURVE)||defined(ROTATIONTWOCURVES)\n    uniform vec2 u_rotationCurveX[4];\n    uniform vec2 u_rotationCurveY[4];\n    uniform vec2 u_rotationCurveZ[4];\n  uniform vec2 u_rotationCurveW[4];\n  #endif\n  #ifdef ROTATIONTWOCURVES\n    uniform vec2 u_rotationCurveMaxX[4];\n    uniform vec2 u_rotationCurveMaxY[4];\n    uniform vec2 u_rotationCurveMaxZ[4];\n  uniform vec2 u_rotationCurveMaxW[4];\n  #endif\n#endif\n\n#if defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONTWOCURVE)\n  uniform float u_cycles;\n  uniform vec4 u_subUV;\n  uniform vec2 u_uvCurve[4];\n#endif\n#ifdef TEXTURESHEETANIMATIONTWOCURVE\n  uniform vec2 u_uvCurveMax[4];\n#endif\n\nvarying float v_discard;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\n#ifdef RENDERMESH\n varying vec4 v_mesh_color;\n#endif\n\nvec3 rotation_euler(in vec3 vector,in vec3 euler)\n{\n  float halfPitch = euler.x * 0.5;\n float halfYaw = euler.y * 0.5;\n float halfRoll = euler.z * 0.5;\n\n float sinPitch = sin(halfPitch);\n float cosPitch = cos(halfPitch);\n float sinYaw = sin(halfYaw);\n float cosYaw = cos(halfYaw);\n float sinRoll = sin(halfRoll);\n float cosRoll = cos(halfRoll);\n\n float quaX = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\n float quaY = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\n float quaZ = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\n float quaW = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\n \n float x = quaX + quaX;\n  float y = quaY + quaY;\n  float z = quaZ + quaZ;\n  float wx = quaW * x;\n  float wy = quaW * y;\n  float wz = quaW * z;\n float xx = quaX * x;\n  float xy = quaX * y;\n float xz = quaX * z;\n  float yy = quaY * y;\n  float yz = quaY * z;\n  float zz = quaZ * z;\n\n  return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n              ((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n              ((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n \n}\n\nvec3 rotation_axis(in vec3 vector,in vec3 axis, in float angle)\n{\n float halfAngle = angle * 0.5;\n float sin = sin(halfAngle);\n \n float quaX = axis.x * sin;\n float quaY = axis.y * sin;\n float quaZ = axis.z * sin;\n float quaW = cos(halfAngle);\n \n float x = quaX + quaX;\n  float y = quaY + quaY;\n  float z = quaZ + quaZ;\n  float wx = quaW * x;\n  float wy = quaW * y;\n  float wz = quaW * z;\n float xx = quaX * x;\n  float xy = quaX * y;\n float xz = quaX * z;\n  float yy = quaY * y;\n  float yz = quaY * z;\n  float zz = quaZ * z;\n\n  return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n              ((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n              ((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n}\n\nvec3 rotation_quaternions(in vec3 v,in vec4 q) \n{\n return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\n#if defined(VELOCITYCURVE)||defined(VELOCITYTWOCURVE)||defined(SIZECURVE)||defined(SIZECURVESEPERATE)||defined(SIZETWOCURVES)||defined(SIZETWOCURVESSEPERATE)\nfloat evaluate_curve_float(in vec2 curves[4],in float t)\n{\n float res;\n for(int i=1;i<4;i++)\n {\n  vec2 curve=curves[i];\n  float curTime=curve.x;\n  if(curTime>=t)\n  {\n   vec2 lastCurve=curves[i-1];\n   float lastTime=lastCurve.x;\n   float tt=(t-lastTime)/(curTime-lastTime);\n   res=mix(lastCurve.y,curve.y,tt);\n   break;\n  }\n }\n return res;\n}\n#endif\n\n#if defined(VELOCITYCURVE)||defined(VELOCITYTWOCURVE)||defined(ROTATIONCURVE)||defined(ROTATIONTWOCURVES)\nfloat evaluate_curve_total(in vec2 curves[4],in float t)\n{\n float res=0.0;\n for(int i=1;i<4;i++)\n {\n  vec2 curve=curves[i];\n  float curTime=curve.x;\n  vec2 lastCurve=curves[i-1];\n  float lastValue=lastCurve.y;\n  \n  if(curTime>=t){\n   float lastTime=lastCurve.x;\n   float tt=(t-lastTime)/(curTime-lastTime);\n   res+=(lastValue+mix(lastValue,curve.y,tt))/2.0*time.x*(t-lastTime);\n   break;\n  }\n  else{\n   res+=(lastValue+curve.y)/2.0*time.x*(curTime-lastCurve.x);\n  }\n }\n return res;\n}\n#endif\n\n#if defined(COLOROGRADIENT)||defined(COLORTWOGRADIENTS)\nvec4 evaluate_curve_color(in vec2 gradientAlphas[4],in vec4 gradientColors[4],in float t)\n{\n vec4 overTimeColor;\n for(int i=1;i<4;i++)\n {\n  vec2 gradientAlpha=gradientAlphas[i];\n  float alphaKey=gradientAlpha.x;\n  if(alphaKey>=t)\n  {\n   vec2 lastGradientAlpha=gradientAlphas[i-1];\n   float lastAlphaKey=lastGradientAlpha.x;\n   float age=(t-lastAlphaKey)/(alphaKey-lastAlphaKey);\n   overTimeColor.a=mix(lastGradientAlpha.y,gradientAlpha.y,age);\n   break;\n  }\n }\n \n for(int i=1;i<4;i++)\n {\n  vec4 gradientColor=gradientColors[i];\n  float colorKey=gradientColor.x;\n  if(colorKey>=t)\n  {\n   vec4 lastGradientColor=gradientColors[i-1];\n   float lastColorKey=lastGradientColor.x;\n   float age=(t-lastColorKey)/(colorKey-lastColorKey);\n   overTimeColor.rgb=mix(gradientColors[i-1].yzw,gradientColor.yzw,age);\n   break;\n  }\n }\n return overTimeColor;\n}\n#endif\n\n\n#if defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONTWOCURVE)\nfloat evaluate_curve_frame(in vec2 gradientFrames[4],in float t)\n{\n float overTimeFrame;\n for(int i=1;i<4;i++)\n {\n  vec2 gradientFrame=gradientFrames[i];\n  float key=gradientFrame.x;\n  if(key>=t)\n  {\n   vec2 lastGradientFrame=gradientFrames[i-1];\n   float lastKey=lastGradientFrame.x;\n   float age=(t-lastKey)/(key-lastKey);\n   overTimeFrame=mix(lastGradientFrame.y,gradientFrame.y,age);\n   break;\n  }\n }\n return floor(overTimeFrame);\n}\n#endif\n\nvec3 computeVelocity(in float t)\n{\n  vec3 res;\n  #ifdef VELOCITYCONSTANT\n  res=u_velocityConst; \n  #endif\n  #ifdef VELOCITYCURVE\n     res= vec3(evaluate_curve_float(u_velocityCurveX,t),evaluate_curve_float(u_velocityCurveY,t),evaluate_curve_float(u_velocityCurveZ,t));\n  #endif\n  #ifdef VELOCITYTWOCONSTANT\n  res=mix(u_velocityConst,u_velocityConstMax,vec3(random1.y,random1.z,random1.w)); \n  #endif\n  #ifdef VELOCITYTWOCURVE\n     res=vec3(mix(evaluate_curve_float(u_velocityCurveX,t),evaluate_curve_float(u_velocityCurveMaxX,t),random1.y),\n             mix(evaluate_curve_float(u_velocityCurveY,t),evaluate_curve_float(u_velocityCurveMaxY,t),random1.z),\n        mix(evaluate_curve_float(u_velocityCurveZ,t),evaluate_curve_float(u_velocityCurveMaxZ,t),random1.w));\n  #endif\n     \n  return res;\n} \n\nvec3 computePosition(in vec3 startVelocity, in vec3 lifeVelocity,in float age,in float t,vec3 gravityVelocity,vec4 worldRotation)\n{\n    vec3 position;\n    vec3 lifePosition;\n  #if defined(VELOCITYCONSTANT)||defined(VELOCITYCURVE)||defined(VELOCITYTWOCONSTANT)||defined(VELOCITYTWOCURVE)\n   #ifdef VELOCITYCONSTANT\n      position=startVelocity*age;\n      lifePosition=lifeVelocity*age;\n   #endif\n   #ifdef VELOCITYCURVE\n      position=startVelocity*age;\n      lifePosition=vec3(evaluate_curve_total(u_velocityCurveX,t),evaluate_curve_total(u_velocityCurveY,t),evaluate_curve_total(u_velocityCurveZ,t));\n   #endif\n   #ifdef VELOCITYTWOCONSTANT\n      position=startVelocity*age;\n      lifePosition=lifeVelocity*age;\n   #endif\n   #ifdef VELOCITYTWOCURVE\n      position=startVelocity*age;\n      lifePosition=vec3(mix(evaluate_curve_total(u_velocityCurveX,t),evaluate_curve_total(u_velocityCurveMaxX,t),random1.y)\n                 ,mix(evaluate_curve_total(u_velocityCurveY,t),evaluate_curve_total(u_velocityCurveMaxY,t),random1.z)\n                 ,mix(evaluate_curve_total(u_velocityCurveZ,t),evaluate_curve_total(u_velocityCurveMaxZ,t),random1.w));\n   #endif\n\n   vec3 finalPosition;\n   if(u_spaceType==0){\n     if(u_scalingMode!=2)\n      finalPosition =rotation_quaternions(u_positionScale*(startPosition.xyz+position+lifePosition),worldRotation);\n     else\n      finalPosition =rotation_quaternions(u_positionScale*startPosition.xyz+position+lifePosition,worldRotation);\n   }\n   else{\n     if(u_scalingMode!=2)\n       finalPosition = rotation_quaternions(u_positionScale*(startPosition.xyz+position),worldRotation)+lifePosition;\n     else\n       finalPosition = rotation_quaternions(u_positionScale*startPosition.xyz+position,worldRotation)+lifePosition;\n   }\n    #else\n    position=startVelocity*age;\n    vec3 finalPosition;\n    if(u_scalingMode!=2)\n      finalPosition = rotation_quaternions(u_positionScale*(startPosition.xyz+position),worldRotation);\n    else\n      finalPosition = rotation_quaternions(u_positionScale*startPosition.xyz+position,worldRotation);\n  #endif\n  \n  if(u_simulationSpace==1)\n    finalPosition=finalPosition+startWorldPosition;\n  else if(u_simulationSpace==0) \n    finalPosition=finalPosition+u_worldPosition;\n  \n  finalPosition+=0.5*gravityVelocity*age;\n \n  return finalPosition;\n}\n\n\nvec4 computeColor(in vec4 color,in float t)\n{\n #ifdef COLOROGRADIENT\n   color*=evaluate_curve_color(u_alphaGradient,u_colorGradient,t);\n #endif \n #ifdef COLORTWOGRADIENTS\n   color*=mix(evaluate_curve_color(u_alphaGradient,u_colorGradient,t),evaluate_curve_color(u_alphaGradientMax,u_colorGradientMax,t),random0.y);\n #endif\n\n  return color;\n}\n\nvec2 computeBillbardSize(in vec2 size,in float t)\n{\n #ifdef SIZECURVE\n  size*=evaluate_curve_float(u_sizeCurve,t);\n #endif\n #ifdef SIZETWOCURVES\n   size*=mix(evaluate_curve_float(u_sizeCurve,t),evaluate_curve_float(u_sizeCurveMax,t),random0.z); \n #endif\n #ifdef SIZECURVESEPERATE\n  size*=vec2(evaluate_curve_float(u_sizeCurveX,t),evaluate_curve_float(u_sizeCurveY,t));\n #endif\n #ifdef SIZETWOCURVESSEPERATE\n   size*=vec2(mix(evaluate_curve_float(u_sizeCurveX,t),evaluate_curve_float(u_sizeCurveMaxX,t),random0.z)\n         ,mix(evaluate_curve_float(u_sizeCurveY,t),evaluate_curve_float(u_sizeCurveMaxY,t),random0.z));\n #endif\n return size;\n}\n\n#ifdef RENDERMESH\nvec3 computeMeshSize(in vec3 size,in float t)\n{\n #ifdef SIZECURVE\n  size*=evaluate_curve_float(u_sizeCurve,t);\n #endif\n #ifdef SIZETWOCURVES\n   size*=mix(evaluate_curve_float(u_sizeCurve,t),evaluate_curve_float(u_sizeCurveMax,t),random0.z); \n #endif\n #ifdef SIZECURVESEPERATE\n  size*=vec3(evaluate_curve_float(u_sizeCurveX,t),evaluate_curve_float(u_sizeCurveY,t),evaluate_curve_float(u_sizeCurveZ,t));\n #endif\n #ifdef SIZETWOCURVESSEPERATE\n   size*=vec3(mix(evaluate_curve_float(u_sizeCurveX,t),evaluate_curve_float(u_sizeCurveMaxX,t),random0.z)\n         ,mix(evaluate_curve_float(u_sizeCurveY,t),evaluate_curve_float(u_sizeCurveMaxY,t),random0.z)\n       ,mix(evaluate_curve_float(u_sizeCurveZ,t),evaluate_curve_float(u_sizeCurveMaxZ,t),random0.z));\n #endif\n return size;\n}\n#endif\n\nfloat computeRotation(in float rotation,in float age,in float t)\n{ \n #ifdef ROTATIONOVERLIFETIME\n  #ifdef ROTATIONCONSTANT\n   float ageRot=u_rotationConst*age;\n         rotation+=ageRot;\n  #endif\n  #ifdef ROTATIONCURVE\n   rotation+=evaluate_curve_total(u_rotationCurve,t);\n  #endif\n  #ifdef ROTATIONTWOCONSTANTS\n   float ageRot=mix(u_rotationConst,u_rotationConstMax,random0.w)*age;\n     rotation+=ageRot;\n   #endif\n  #ifdef ROTATIONTWOCURVES\n   rotation+=mix(evaluate_curve_total(u_rotationCurve,t),evaluate_curve_total(u_rotationCurveMax,t),random0.w);\n  #endif\n #endif\n #ifdef ROTATIONSEPERATE\n  #ifdef ROTATIONCONSTANT\n   float ageRot=u_rotationConstSeprarate.z*age;\n         rotation+=ageRot;\n  #endif\n  #ifdef ROTATIONCURVE\n   rotation+=evaluate_curve_total(u_rotationCurveZ,t);\n  #endif\n  #ifdef ROTATIONTWOCONSTANTS\n   float ageRot=mix(u_rotationConstSeprarate.z,u_rotationConstMaxSeprarate.z,random0.w)*age;\n         rotation+=ageRot;\n     #endif\n  #ifdef ROTATIONTWOCURVES\n   rotation+=mix(evaluate_curve_total(u_rotationCurveZ,t),evaluate_curve_total(u_rotationCurveMaxZ,t),random0.w));\n  #endif\n #endif\n return rotation;\n}\n\n#if defined(RENDERMESH)&&(defined(ROTATIONOVERLIFETIME)||defined(ROTATIONSEPERATE))\nvec3 compute3DRotation(in vec3 rotation,in float age,in float t)\n{ \n #ifdef ROTATIONOVERLIFETIME\n   #ifdef ROTATIONCONSTANT\n     float ageRot=u_rotationConst*age;\n       rotation+=ageRot;\n   #endif\n   #ifdef ROTATIONCURVE\n     rotation+=evaluate_curve_total(u_rotationCurve,t);\n   #endif\n   #ifdef ROTATIONTWOCONSTANTS\n     float ageRot=mix(u_rotationConst,u_rotationConstMax,random0.w)*age;\n       rotation+=ageRot;\n   #endif\n   #ifdef ROTATIONTWOCURVES\n     rotation+=mix(evaluate_curve_total(u_rotationCurve,t),evaluate_curve_total(u_rotationCurveMax,t),random0.w);\n   #endif\n #endif\n #ifdef ROTATIONSEPERATE\n    #ifdef ROTATIONCONSTANT\n     vec3 ageRot=u_rotationConstSeprarate*age;\n           rotation+=ageRot;\n    #endif\n    #ifdef ROTATIONCURVE\n     rotation+=vec3(evaluate_curve_total(u_rotationCurveX,t),evaluate_curve_total(u_rotationCurveY,t),evaluate_curve_total(u_rotationCurveZ,t));\n    #endif\n    #ifdef ROTATIONTWOCONSTANTS\n     vec3 ageRot=mix(u_rotationConstSeprarate,u_rotationConstMaxSeprarate,random0.w)*age;\n           rotation+=ageRot;\n     #endif\n    #ifdef ROTATIONTWOCURVES\n     rotation+=vec3(mix(evaluate_curve_total(u_rotationCurveX,t),evaluate_curve_total(u_rotationCurveMaxX,t),random0.w)\n           ,mix(evaluate_curve_total(u_rotationCurveY,t),evaluate_curve_total(u_rotationCurveMaxY,t),random0.w)\n           ,mix(evaluate_curve_total(u_rotationCurveZ,t),evaluate_curve_total(u_rotationCurveMaxZ,t),random0.w));\n    #endif\n #endif\n return rotation;\n}\n#endif\n\nvec2 computeUV(in vec2 uv,in float t)\n{ \n #ifdef TEXTURESHEETANIMATIONCURVE\n  float cycleNormalizedAge=t*u_cycles;\n  float uvNormalizedAge=cycleNormalizedAge-floor(cycleNormalizedAge);\n  float frame=evaluate_curve_frame(u_uvCurve,uvNormalizedAge);\n  uv.x *= u_subUV.x + u_subUV.z;\n  uv.y *= u_subUV.y + u_subUV.w;\n  float totalULength=frame*u_subUV.x;\n  float floorTotalULength=floor(totalULength);\n   uv.x+=totalULength-floorTotalULength;\n  uv.y+=floorTotalULength*u_subUV.y;\n    #endif\n #ifdef TEXTURESHEETANIMATIONTWOCURVE\n  float cycleNormalizedAge=t*u_cycles;\n  float uvNormalizedAge=cycleNormalizedAge-floor(cycleNormalizedAge);\n   float frame=floor(mix(evaluate_curve_frame(u_uvCurve,uvNormalizedAge),evaluate_curve_frame(u_uvCurveMax,uvNormalizedAge),random1.x));\n  uv.x *= u_subUV.x + u_subUV.z;\n  uv.y *= u_subUV.y + u_subUV.w;\n  float totalULength=frame*u_subUV.x;\n  float floorTotalULength=floor(totalULength);\n   uv.x+=totalULength-floorTotalULength;\n  uv.y+=floorTotalULength*u_subUV.y;\n    #endif\n return uv;\n}",e.premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\n // Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n gl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n",e.project_vertex="vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\ngl_Position = projectionMatrix * mvPosition;\n",e.roughnessmap_fragment="float roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n vec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n // reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n roughnessFactor *= texelRoughness.g;\n\n#endif\n",e.roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\n uniform sampler2D roughnessMap;\n\n#endif",e.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n #if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0//Egret\n\n  uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n  varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n #endif\n\n #if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0//Egret\n\n  uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n  varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n #endif\n\n #if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0//Egret\n\n  uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n  varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n #endif\n\n /*\n #if NUM_RECT_AREA_LIGHTS > 0\n\n  // TODO (abelnation): create uniforms for area light shadows\n\n #endif\n */\n\n float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n  return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n }\n\n float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\n  const vec2 offset = vec2( 0.0, 1.0 );\n\n  vec2 texelSize = vec2( 1.0 ) / size;\n  vec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\n  float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n  float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n  float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n  float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\n  vec2 f = fract( uv * size + 0.5 );\n\n  float a = mix( lb, lt, f.y );\n  float b = mix( rb, rt, f.y );\n  float c = mix( a, b, f.x );\n\n  return c;\n\n }\n\n float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n  float shadow = 1.0;\n\n  shadowCoord.xyz /= shadowCoord.w;\n  shadowCoord.z += shadowBias;//Egret Right-hand\n\n  // if ( something && something ) breaks ATI OpenGL shader compiler\n  // if ( all( something, something ) ) using this instead\n\n  bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n  bool inFrustum = all( inFrustumVec );\n\n  bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n  bool frustumTest = all( frustumTestVec );\n\n  if ( frustumTest ) {\n\n  #if defined( SHADOWMAP_TYPE_PCF )\n\n   vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n   float dx0 = - texelSize.x * shadowRadius;\n   float dy0 = - texelSize.y * shadowRadius;\n   float dx1 = + texelSize.x * shadowRadius;\n   float dy1 = + texelSize.y * shadowRadius;\n\n   shadow = (\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n    texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n   ) * ( 1.0 / 9.0 );\n\n  #elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n   vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n   float dx0 = - texelSize.x * shadowRadius;\n   float dy0 = - texelSize.y * shadowRadius;\n   float dx1 = + texelSize.x * shadowRadius;\n   float dy1 = + texelSize.y * shadowRadius;\n\n   shadow = (\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n    texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n   ) * ( 1.0 / 9.0 );\n\n  #else // no percentage-closer filtering:\n\n   shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n  #endif\n\n  }\n\n  return shadow;\n\n }\n\n // cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n // vector suitable for 2D texture mapping. This code uses the following layout for the\n // 2D texture:\n //\n // xzXZ\n //  y Y\n //\n // Y - Positive y direction\n // y - Negative y direction\n // X - Positive x direction\n // x - Negative x direction\n // Z - Positive z direction\n // z - Negative z direction\n //\n // Source and test bed:\n // https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n vec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n  // Number of texels to avoid at the edge of each square\n\n  vec3 absV = abs( v );\n\n  // Intersect unit cube\n\n  float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n  absV *= scaleToCube;\n\n  // Apply scale to avoid seams\n\n  // two texels less per square (one texel will do for NEAREST)\n  v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n  // Unwrap\n\n  // space: -1 ... 1 range for each square\n  //\n  // #X##  dim    := ( 4 , 2 )\n  //  # #  center := ( 1 , 1 )\n\n  vec2 planar = v.xy;\n\n  float almostATexel = 1.5 * texelSizeY;\n  float almostOne = 1.0 - almostATexel;\n\n  if ( absV.z >= almostOne ) {\n\n   if ( v.z > 0.0 )\n    planar.x = 4.0 - v.x;\n\n  } else if ( absV.x >= almostOne ) {\n\n   float signX = sign( v.x );\n   planar.x = v.z * signX + 2.0 * signX;\n\n  } else if ( absV.y >= almostOne ) {\n\n   float signY = sign( v.y );\n   planar.x = v.x + 2.0 * signY + 2.0;\n   planar.y = v.z * signY - 2.0;\n\n  }\n\n  // Transform to UV space\n\n  // scale := 0.5 / dim\n  // translate := ( center + 0.5 ) / dim\n  return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n }\n\n float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n  vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n  // for point lights, the uniform @vShadowCoord is re-purposed to hold\n  // the vector from the light to the world-space position of the fragment.\n  vec3 lightToPosition = shadowCoord.xyz;\n\n  // dp = normalized distance from light to fragment position\n  float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n  dp += shadowBias;\n\n  // bd3D = base direction 3D\n  vec3 bd3D = normalize( lightToPosition );\n\n  #if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n   vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n   return (\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n    texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n   ) * ( 1.0 / 9.0 );\n\n  #else // no percentage-closer filtering\n\n   return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n  #endif\n\n }\n\n#endif\n",e.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n #if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0//Egret\n\n  uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n  varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n #endif\n\n #if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0//Egret\n\n  uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n  varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n #endif\n\n #if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0//Egret\n\n  uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n  varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n #endif\n\n /*\n #if NUM_RECT_AREA_LIGHTS > 0\n\n  // TODO (abelnation): uniforms for area light shadows\n\n #endif\n */\n\n#endif\n",e.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n #if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0//Egret\n\n #pragma unroll_loop\n for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n  vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\n }\n\n #endif\n\n #if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0//Egret\n\n #pragma unroll_loop\n for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n  vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\n }\n\n #endif\n\n #if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0//Egret\n\n #pragma unroll_loop\n for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n  vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\n }\n\n #endif\n\n /*\n #if NUM_RECT_AREA_LIGHTS > 0\n\n  // TODO (abelnation): update vAreaShadowCoord with area light info\n\n #endif\n */\n\n#endif\n",e.shadowmask_pars_fragment="float getShadowMask() {\n\n float shadow = 1.0;\n\n #ifdef USE_SHADOWMAP\n\n #if defined(NUM_DIR_LIGHTS) && NUM_DIR_LIGHTS > 0//Egret\n\n DirectionalLight directionalLight;\n\n #pragma unroll_loop\n for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n  // directionalLight = directionalLights[ i ];\n  directionalLight.shadow = int(directionalLights[i * 11 + 6]);\n  directionalLight.shadowBias = directionalLights[i * 11 + 7];\n  directionalLight.shadowRadius = directionalLights[i * 11 + 8];\n  directionalLight.shadowMapSize = vec2(directionalLights[i * 11 + 9], directionalLights[i * 11 + 10]);\n  shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n }\n\n #endif\n\n #if defined(NUM_SPOT_LIGHTS) && NUM_SPOT_LIGHTS > 0//Egret\n\n SpotLight spotLight;\n #pragma unroll_loop\n for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n  // spotLight = spotLights[ i ];\n  spotLight.shadow = int(spotLights[i * 18 + 13]);\n  spotLight.shadowBias = spotLights[i * 18 + 14];\n  spotLight.shadowRadius = spotLights[i * 18 + 15];\n  spotLight.shadowMapSize = vec2(spotLights[i * 18 + 16], spotLights[i * 18 + 17]);\n  shadow *= bool(spotLight.shadow) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n }\n\n #endif\n\n #if defined(NUM_POINT_LIGHTS) && NUM_POINT_LIGHTS > 0//Egret\n\n PointLight pointLight;\n\n #pragma unroll_loop\n for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n  // pointLight = pointLights[ i ];\n  pointLight.shadow = int(pointLights[i * 15 + 8]);\n  pointLight.shadowBias = pointLights[i * 15 + 9];\n  pointLight.shadowRadius = pointLights[i * 15 + 10];\n  pointLight.shadowMapSize = vec2(pointLights[i * 15 + 11],pointLights[i * 15 + 12]);\n  pointLight.shadowCameraNear = pointLights[i * 15 + 13];\n  pointLight.shadowCameraFar = pointLights[i * 15 + 14];\n  shadow *= bool(pointLight.shadow) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n }\n\n #endif\n\n /*\n #if NUM_RECT_AREA_LIGHTS > 0\n\n  // TODO (abelnation): update shadow for Area light\n\n #endif\n */\n\n #endif\n\n return shadow;\n\n}\n",e.skinbase_vertex="#ifdef USE_SKINNING\n\n mat4 boneMatX = getBoneMatrix( skinIndex.x );\n mat4 boneMatY = getBoneMatrix( skinIndex.y );\n mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",e.skinning_pars_vertex="#ifdef USE_SKINNING\n\n // Modify egret.\n // uniform_mat4 bindMatrix;\n // uniform_mat4 bindMatrixInverse;\n\n #ifdef BONE_TEXTURE\n\n  uniform sampler2D boneTexture;\n  uniform int boneTextureSize;\n\n  mat4 getBoneMatrix( const in float i ) {\n\n   float j = i * 4.0;\n   float x = mod( j, float( boneTextureSize ) );\n   float y = floor( j / float( boneTextureSize ) );\n\n   float dx = 1.0 / float( boneTextureSize );\n   float dy = 1.0 / float( boneTextureSize );\n\n   y = dy * ( y + 0.5 );\n\n   vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n   vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n   vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n   vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n   mat4 bone = mat4( v1, v2, v3, v4 );\n\n   return bone;\n\n  }\n\n #else\n\n  uniform mat4 boneMatrices[ MAX_BONES ];\n\n  mat4 getBoneMatrix( const in float i ) {\n\n   mat4 bone = boneMatrices[ int(i) ];\n   return bone;\n\n  }\n\n #endif\n\n#endif\n",e.skinning_vertex="#ifdef USE_SKINNING\n\n // Modify Egret.\n // vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n vec4 skinVertex = vec4( transformed, 1.0 );\n\n vec4 skinned = vec4( 0.0 );\n skinned += boneMatX * skinVertex * skinWeight.x;\n skinned += boneMatY * skinVertex * skinWeight.y;\n skinned += boneMatZ * skinVertex * skinWeight.z;\n skinned += boneMatW * skinVertex * skinWeight.w;\n\n // Modify Egret.\n // transformed = ( bindMatrixInverse * skinned ).xyz;\n transformed = skinned.xyz;\n\n#endif\n",e.skinnormal_vertex="#ifdef USE_SKINNING\n\n mat4 skinMatrix = mat4( 0.0 );\n skinMatrix += skinWeight.x * boneMatX;\n skinMatrix += skinWeight.y * boneMatY;\n skinMatrix += skinWeight.z * boneMatZ;\n skinMatrix += skinWeight.w * boneMatW;\n \n // Modify egret.\n // skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\n objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n",e.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n vec4 texelSpecular = texture2D( specularMap, vUv );\n specularStrength = texelSpecular.r;\n\n#else\n\n specularStrength = 1.0;\n\n#endif",e.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n uniform sampler2D specularMap;\n\n#endif",e.tonemapping_fragment="#if defined( TONE_MAPPING )\n\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n",e.tonemapping_pars_fragment="#ifndef saturate\n #define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n return toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n color *= toneMappingExposure;\n return saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\n // John Hable's filmic operator from Uncharted 2 video game\n color *= toneMappingExposure;\n return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n color *= toneMappingExposure;\n color = max( vec3( 0.0 ), color - 0.004 );\n return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n",e.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n varying vec2 vUv2;\n\n#endif",e.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n attribute vec2 uv2;\n varying vec2 vUv2;\n #ifdef USE_LIGHTMAP//Egret \n  uniform vec4 lightMapScaleOffset;\n #endif\n\n#endif",e.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n #ifdef USE_LIGHTMAP//Egret\n  vUv2 = vec2(uv2.x * lightMapScaleOffset.x + lightMapScaleOffset.z, 1.0 - ((1.0 - uv2.y) * lightMapScaleOffset.y + lightMapScaleOffset.w));\n #else \n  vUv2 = uv2;\n #endif\n\n#endif",e.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n varying vec2 vUv;\n\n#endif",e.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n varying vec2 vUv;\n uniform mat3 uvTransform;\n\n#endif\n",e.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n #if defined FLIP_V \n  vUv = ( uvTransform * vec3( uv.x, 1.0 - uv.y, 1 ) ).xy;//modify egret\n #else\n  vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n #endif\n#endif",e.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\n vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n#endif\n"
}(t=e.ShaderChunk||(e.ShaderChunk={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){e[e.NONE=0]="NONE",e[e.FOG=1]="FOG",e[e.FOG_EXP2=2]="FOG_EXP2"}(t=e.FogMode||(e.FogMode={}));var r=function(){function t(){this.mode=0,this.density=.01,this.near=.01,this.far=100,this.color=e.Color.create(.5,.5,.5,1)}return t.create=function(){return new t},t.prototype.serialize=function(){return[this.mode,this.density,this.near,this.far].concat(this.color.serialize())},t.prototype.deserialize=function(e){return this.mode=e[0],this.density=e[1],this.near=e[2],this.far=e[3],this.color.fromArray(e,4),this},__decorate([paper.editor.property("LIST",{listItems:paper.editor.getItemsFromEnum(e.FogMode)})],t.prototype,"mode",void 0),__decorate([paper.editor.property("FLOAT",{minimum:0})],t.prototype,"density",void 0),__decorate([paper.editor.property("FLOAT",{minimum:.01,step:1})],t.prototype,"near",void 0),__decorate([paper.editor.property("FLOAT",{minimum:.02,step:1})],t.prototype,"far",void 0),__decorate([paper.editor.property("COLOR")],t.prototype,"color",void 0),t}();e.Fog=r,__reflect(r.prototype,"egret3d.Fog",["paper.ISerializable"])}(egret3d||(egret3d={}));var egret3d;!function(e){function t(t,r){return Promise.all(t.assets.map(function(t){var r=RES.host,i=r.resourceConfig.getResource(t);return i?r.load(i):e.resRoot?n(t,e.resRoot):(0!==t.indexOf("builtin/")&&console.error("加载不存在的资源",t),Promise.resolve())}))}function r(e){for(var t=e.substr(e.lastIndexOf("/")+1),r=t.indexOf(".",0),n="";r>=0;){if(n=t.substr(r),".assetbundle.json"===n)return"Bundle";if(".png"===n||".jpg"===n)return"Texture";if(".pvr.bin"===n||".pvr"===n)return"PVR";if(".atlas.json"===n)return"Atlas";if(".font.json"===n)return"Font";if(".json"===n||".txt"===n||".effect.json"===n)return"TextAsset";if(".packs.bin"===n)return"PackBin";if(".packs.txt"===n)return"PackTxt";if(".path.json"===n)return"pathAsset";if(".mp3"===n||".ogg"===n)return"Sound";if(".prefab.json"===n)return"Prefab";if(".scene.json"===n)return"Scene";if(".vs.glsl"===n)return"text";if(".fs.glsl"===n)return"text";if(".glsl"===n)return"text";if(".shader.json"===n)return"Shader";if(".image.json"===n)return"TextureDesc";if(".mat.json"===n)return"Material";if(".mesh.bin"===n)return"Mesh";if(".ani.bin"===n)return"Animation";r=t.indexOf(".",r+1)}return"Unknown"}function n(e,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(n){return[2,new Promise(function(n){RES.getResByUrl(t+e,function(e){paper.Asset.register(e),n(e)},RES,r(e))})]})})}e.resRoot="",e.BitmapDataProcessor={onLoadStart:function(e,t){var r=this,n=new egret.ImageLoader;return n.load(t.root+t.url),new Promise(function(e,i){var o=function(){var t=n.data;n.removeEventListener(egret.Event.COMPLETE,o,r),n.removeEventListener(egret.IOErrorEvent.IO_ERROR,a,r),e(t)},a=function(){n.removeEventListener(egret.Event.COMPLETE,o,r),n.removeEventListener(egret.IOErrorEvent.IO_ERROR,a,r);var e=new RES.ResourceManagerError(1001,t.url);i(e)};n.addEventListener(egret.Event.COMPLETE,o,r),n.addEventListener(egret.IOErrorEvent.IO_ERROR,a,r)})},onRemoveStart:function(e,t){return Promise.resolve()}},e.ShaderProcessor={onLoadStart:function(t,r){return __awaiter(this,void 0,void 0,function(){var n,i,o,a,s,l,c,u;return __generator(this,function(p){switch(p.label){case 0:return[4,t.load(r,"json")];case 1:if(n=p.sent(),!n.extensions.KHR_techniques_webgl.shaders||2!==n.extensions.KHR_techniques_webgl.shaders.length)return[3,6];i=n.extensions.KHR_techniques_webgl.shaders,o=0,a=i,p.label=2;case 2:return o<a.length?(s=a[o],l=RES.host.resourceConfig.getResource(s.uri),l?[4,t.load(l,"text")]:[3,4]):[3,5];case 3:c=p.sent(),c?s.uri=c:console.error("Load shader error.",s.uri),p.label=4;case 4:return o++,[3,2];case 5:return[3,7];case 6:console.error("错误的Shader格式数据"),p.label=7;case 7:return u=new e.Shader(n,r.name),paper.Asset.register(u),[2,u]}})})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.TextureDescProcessor={onLoadStart:function(t,r){return t.load(r,"json").then(function(i){var o=i.name,a=i.filterMode,s=i.format,l=i.mipmap,c=i.wrap,u=6408;"RGB"==s?u=6407:"Gray"==s&&(u=6409);var p=!0;a.indexOf("linear")<0&&(p=!1);var d=!1;c.indexOf("Repeat")>=0&&(d=!0);var h=!1;void 0!==i.premultiply&&(h=i.premultiply>0);var f=RES.host.resourceConfig.getResource(o);return f?t.load(f,"bitmapdata").then(function(t){var n=new e.GLTexture2D(r.name,t.source.width,t.source.height,u);return n.uploadImage(t.source,l,p,h,d),paper.Asset.register(n),n}):e.resRoot?n(o,e.resRoot).then(function(t){var n=new e.GLTexture2D(r.name,t.source.width,t.source.height,u);return n.uploadImage(t.source,l,p,h,d),paper.Asset.register(n),n}):void 0})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.TextureProcessor={onLoadStart:function(t,r){return t.load(r,"bitmapdata").then(function(t){var n=new e.GLTexture2D(r.name,t.source.width,t.source.height,6408);return n.uploadImage(t.source,!0,!0,!1,!0),paper.Asset.register(n),n})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.MaterialProcessor={onLoadStart:function(t,r){return __awaiter(this,void 0,void 0,function(){var i,o,a,s,l,c,u,p,d,h,f,_,m,v,g,g,y;return __generator(this,function(b){switch(b.label){case 0:return[4,t.load(r,"json")];case 1:if(i=b.sent(),!(i.materials&&i.materials.length>0))return[3,12];o=0,a=i.materials,b.label=2;case 2:return o<a.length?(s=a[o],l=s.extensions.KHR_techniques_webgl.technique,c=RES.host.resourceConfig.getResource(l),c?[4,t.load(c,"Shader")]:[3,4]):[3,12];case 3:u=b.sent(),b.label=4;case 4:p=s.extensions.KHR_techniques_webgl.values,d=[];for(h in p)d.push(h);f=0,b.label=5;case 5:return f<d.length?(_=d[f],m=p[_],m&&"string"==typeof m?(v=RES.host.resourceConfig.getResource(m),v?[4,t.load(v,"TextureDesc")]:[3,7]):[3,10]):[3,11];case 6:return g=b.sent(),p[_]=g,[3,10];case 7:return e.resRoot?[4,n(m,e.resRoot)]:[3,9];case 8:return g=b.sent(),p[_]=g,[3,10];case 9:console.log("Load image error.",m),p[_]=e.DefaultTextures.MISSING,b.label=10;case 10:return f++,[3,5];case 11:return o++,[3,2];case 12:return y=new e.Material(i,r.name),paper.Asset.register(y),[2,y]}})})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.MeshProcessor={onLoadStart:function(t,r){return t.load(r,"bin").then(function(t){var n,i=e.GLTFAsset.parseFromBinary(new Uint32Array(t));if(i.config.meshes)n=new e.Mesh(i.config,i.buffers,r.name);else{n=new e.GLTFAsset,n.name=r.name,n.config=i.config;for(var o=0,a=i.buffers;o<a.length;o++){var s=a[o];n.buffers.push(s)}}return paper.Asset.register(n),n})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.AnimationProcessor={onLoadStart:function(t,r){return t.load(r,"bin").then(function(t){var n=e.GLTFAsset.parseFromBinary(new Uint32Array(t)),i=new e.GLTFAsset;i.name=r.name,i.config=n.config;for(var o=0,a=n.buffers;o<a.length;o++){var s=a[o];i.buffers.push(s)}return paper.Asset.register(i),i})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.PrefabProcessor={onLoadStart:function(e,r){return e.load(r,"json").then(function(e){var n=new paper.Prefab(r.name);return t(e,r).then(function(){return n.parse(e),paper.Asset.register(n),n})})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},e.SceneProcessor={onLoadStart:function(e,r){return e.load(r,"json").then(function(e){var n=new paper.RawScene(r.name);return t(e,r).then(function(){return n.parse(e),paper.Asset.register(n),n})})},onRemoveStart:function(e,t){var r=e.get(t);return r.dispose(),Promise.resolve()}},RES.processor.map("Shader",e.ShaderProcessor),RES.processor.map("Texture",e.TextureProcessor),RES.processor.map("TextureDesc",e.TextureDescProcessor),RES.processor.map("Material",e.MaterialProcessor),RES.processor.map("Mesh",e.MeshProcessor),RES.processor.map("Animation",e.AnimationProcessor),RES.processor.map("Prefab",e.PrefabProcessor),RES.processor.map("Scene",e.SceneProcessor),RES.processor.map("bitmapdata",e.BitmapDataProcessor)}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(){function e(){}return e.textureRegexp=/([_0-9a-zA-Z]+)[ ]*\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\)[ ]*=[ ]*'(.+)'[ ]*\{[ ]*([a-zA-Z]*)[ ]*([a-zA-Z]*)[ ]*\}/,e.vectorRegexp=/([_0-9a-zA-Z]+)[ ]*\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\)[ ]*=[ ]*\([ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*\)/,e.floatRegexp=/([_0-9a-zA-Z]+)[ ]*\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\)[ ]*=[ ]*([0-9.-]+)/,e.rangeRegexp=/([_0-9a-zA-Z]+)[ ]*\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\([ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*\)[ ]*\)[ ]*=[ ]*([0-9.-]+)/,e.vector4Regexp=/\([ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*\)/,e.vector3FloatOrRangeRegexp=/([0-9.-]+|\[[0-9.-]+,[0-9.-]+\]),([0-9.-]+|\[[0-9.-]+,[0-9.-]+\]),([0-9.-]+|\[[0-9.-]+,[0-9.-]+\])/,e}();e.RegexpUtil=t,__reflect(t.prototype,"egret3d.RegexpUtil")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){var t=function(){function e(e,t){void 0===t&&(t=0),this._seek=t,this._data=new DataView(e,t)}return e.prototype.seek=function(e){this._seek=e},e.prototype.peek=function(){return this._seek},e.prototype.length=function(){return this._data.byteLength},e.prototype.canread=function(){return this._data.byteLength-this._seek},e.prototype.readStringAnsi=function(){var e=this._data.getUint8(this._seek);this._seek++;for(var t="",r=0;e>r;r++)t+=String.fromCharCode(this._data.getUint8(this._seek)),this._seek++;return t},e.utf8ArrayToString=function(e){for(var t=[],r=0;r<e.length;r++){var n=e[r];if(0==n)break;var i=0;if(n>224)i=(15&n)<<12,n=e[++r],i|=(63&n)<<6,n=e[++r],i|=63&n,t.push(String.fromCharCode(i));else if(n>192)i=(31&n)<<6,n=e[++r],i|=(63&n)<<6,t.push(String.fromCharCode(i));else{if(n>128)throw new Error("InvalidCharacterError");t.push(String.fromCharCode(e[r]))}}return t.join("")},e.prototype.readStringUtf8=function(){var t=this._data.getInt8(this._seek);this._seek++;var r=new Uint8Array(t);return this.readUint8Array(r),e.utf8ArrayToString(r)},e.prototype.readStringUtf8FixLength=function(t){var r=new Uint8Array(t);return this.readUint8Array(r),e.utf8ArrayToString(r)},e.prototype.readSingle=function(){var e=this._data.getFloat32(this._seek,!0);return this._seek+=4,e},e.prototype.readDouble=function(){var e=this._data.getFloat64(this._seek,!0);return this._seek+=8,e},e.prototype.readInt8=function(){var e=this._data.getInt8(this._seek);return this._seek+=1,e},e.prototype.readUInt8=function(){var e=this._data.getUint8(this._seek);return this._seek+=1,e},e.prototype.readInt16=function(){var e=this._data.getInt16(this._seek,!0);return this._seek+=2,e},e.prototype.readUInt16=function(){var e=this._data.getUint16(this._seek,!0);return this._seek+=2,e},e.prototype.readInt32=function(){var e=this._data.getInt32(this._seek,!0);return this._seek+=4,e},e.prototype.readUInt32=function(){var e=this._data.getUint32(this._seek,!0);return this._seek+=4,e},e.prototype.readUint8Array=function(e,t,r){void 0===e&&(e=null),void 0===t&&(t=0),void 0===r&&(r=-1),0>r&&(r=e.length);for(var n=0;r>n;n++)e[n]=this._data.getUint8(this._seek),this._seek++;return e},e.prototype.readUint8ArrayByOffset=function(e,t,r){void 0===r&&(r=0),0>r&&(r=e.length);for(var n=0;r>n;n++)e[n]=this._data.getUint8(t),t++;return e},e.prototype.readUint16Array=function(e,t,r){void 0===e&&(e=null),void 0===t&&(t=0),void 0===r&&(r=-1),0>r&&(r=e.length);for(var n=0;r>n;n++)e[n]=this.readUInt16();return e},e.prototype.readSingleArray=function(e,t,r){void 0===e&&(e=null),void 0===t&&(t=0),void 0===r&&(r=-1),0>r&&(r=e.length);for(var n=0;r>n;n++)e[n]=this.readSingle();return e},Object.defineProperty(e.prototype,"position",{get:function(){return this.peek()},set:function(e){this.seek(e)},enumerable:!0,configurable:!0}),e.prototype.readBoolean=function(){return this.readUInt8()>0},e.prototype.readByte=function(){return this.readUInt8()},e.prototype.readBytes=function(e,t,r){return void 0===e&&(e=null),void 0===t&&(t=0),void 0===r&&(r=-1),this.readUint8Array(e,t,r)},e.prototype.readUnsignedShort=function(){return this.readUInt16()},e.prototype.readUnsignedInt=function(){return this.readUInt32()},e.prototype.readFloat=function(){return this.readSingle()},e.prototype.readUTFBytes=function(t){var r=new Uint8Array(t);return e.utf8ArrayToString(this.readUint8Array(r))},e.prototype.readSymbolByte=function(){return this.readInt8()},e.prototype.readShort=function(){return this.readInt16()},e.prototype.readInt=function(){return this.readInt32()},e}();e.BinReader=t,__reflect(t.prototype,"egret3d.io.BinReader");var r=function(){function e(){var e=new ArrayBuffer(1024);this._length=0,this._buf=new Uint8Array(e),this._data=new DataView(this._buf.buffer),this._seek=0}return e.prototype.sureData=function(e){for(var t=this._buf.byteLength;t<this._length+e;)t+=1024;if(t!=this._buf.byteLength){for(var r=new Uint8Array(t),n=0;n<this._length;n++)r[n]=this._buf[n];this._buf=r,this._data=new DataView(this._buf.buffer)}this._length+=e},e.prototype.getLength=function(){return length},e.prototype.getBuffer=function(){return this._buf.buffer.slice(0,this._length)},e.prototype.seek=function(e){this._seek=e},e.prototype.peek=function(){return this._seek},e.prototype.writeInt8=function(e){this.sureData(1),this._data.setInt8(this._seek,e),this._seek++},e.prototype.writeUInt8=function(e){this.sureData(1),this._data.setUint8(this._seek,e),this._seek++},e.prototype.writeInt16=function(e){this.sureData(2),this._data.setInt16(this._seek,e,!0),this._seek+=2},e.prototype.writeUInt16=function(e){this.sureData(2),this._data.setUint16(this._seek,e,!0),this._seek+=2},e.prototype.writeInt32=function(e){this.sureData(4),this._data.setInt32(this._seek,e,!0),this._seek+=4},e.prototype.writeUInt32=function(e){this.sureData(4),this._data.setUint32(this._seek,e,!0),this._seek+=4},e.prototype.writeSingle=function(e){this.sureData(4),this._data.setFloat32(this._seek,e,!0),this._seek+=4},e.prototype.writeDouble=function(e){this.sureData(8),this._data.setFloat64(this._seek,e,!0),this._seek+=8},e.prototype.writeStringAnsi=function(e){var t=e.length;this.sureData(t+1),this._data.setUint8(this._seek,t),this._seek++;for(var r=0;t>r;r++)this._data.setUint8(this._seek,e.charCodeAt(r)),this._seek++},e.prototype.writeStringUtf8=function(t){var r=e.stringToUtf8Array(t);this.writeUInt8(r.length),this.writeUint8Array(r)},e.stringToUtf8Array=function(e){for(var t=[],r=0;r<e.length;r++){var n=e.charAt(r),i=n.charCodeAt(0);if(i>65535)throw new Error("InvalidCharacterError");if(i>128)if(2047>i){var o=i>>>6|192,a=63&i|128;t.push(o,a)}else{var o=i>>>12|224,a=i>>>6&63|128,s=63&i|128;t.push(o,a,s)}else t.push(i)}return t},e.prototype.writeStringUtf8DataOnly=function(t){var r=e.stringToUtf8Array(t);this.writeUint8Array(r)},e.prototype.writeUint8Array=function(e,t,r){void 0===t&&(t=0),void 0===r&&(r=-1),0>r&&(r=e.length),this.sureData(r);for(var n=t;t+r>n;n++)this._data.setUint8(this._seek,e[n]),this._seek++},Object.defineProperty(e.prototype,"length",{get:function(){return this._seek},enumerable:!0,configurable:!0}),e.prototype.writeByte=function(e){this.writeUInt8(e)},e.prototype.writeBytes=function(e,t,r){void 0===t&&(t=0),void 0===r&&(r=0),this.writeUint8Array(e,t,r)},e.prototype.writeUnsignedShort=function(e){this.writeUInt16(e)},e.prototype.writeUnsignedInt=function(e){this.writeUInt32(e)},e.prototype.writeFloat=function(e){this.writeSingle(e)},e.prototype.writeUTFBytes=function(t){var r=e.stringToUtf8Array(t);this.writeUint8Array(r)},e.prototype.writeSymbolByte=function(e){this.writeInt8(e)},e.prototype.writeShort=function(e){this.writeInt16(e)},e.prototype.writeInt=function(e){this.writeInt32(e)},e}();e.BinWriter=r,__reflect(r.prototype,"egret3d.io.BinWriter")}(t=e.io||(e.io={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(e){function t(e,t){var r="";e=e.replace("\\","/"),t=t.replace("\\","/");for(var n=e.split("/"),i=t.split("/"),o=n.length,a=i.length,s=0;n[s]==i[s]&&o>s&&a>s;)s++;for(var l=0;a-s-1>l;l++)r+="../";return n=n.slice(s,n.length),r+=n.join("/"),r=r.replace(" ","_")}e.getRelativePath=t}(t=e.utils||(e.utils={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e._ibos=[],e._vbo=null,e}return __extends(r,t),r.create=function(e,t,n,i,o){return new r(e,t,n,i,o)},r.prototype.dispose=function(){if(!t.prototype.dispose.call(this))return!1;var r=e.WebGLCapabilities.webgl;if(r){for(var n=0,i=this._ibos;n<i.length;n++){var o=i[n];r.deleteBuffer(o)}this._vbo&&r.deleteBuffer(this._vbo)}return this._ibos.length=0,this._vbo=null,!0},r.prototype._createBuffer=function(){var t=e.WebGLCapabilities.webgl;if(!this._vbo&&t){var r=this.getAccessor(this._glTFMesh.primitives[0].attributes.POSITION||0),n=this.createTypeArrayFromBufferView(this.getBufferView(r),5126),i=t.createBuffer();if(i){this._vbo=i;var o=[];for(var a in this._glTFMesh.primitives[0].attributes)o.push(a);for(var s=0,l=0,c=this._glTFMesh.primitives;l<c.length;l++){var u=c[l];if(void 0!==u.indices)if(this._ibos.length===s){var p=t.createBuffer();p?(this._ibos.push(p),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,p),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.getBufferLength(this.getAccessor(u.indices)),this.drawMode),this.uploadSubIndexBuffer(s)):console.error("Create webgl element buffer error.")}else console.error("Error arguments.");else this._ibos.length>0&&console.error("Error arguments.");s++}t.bindBuffer(t.ARRAY_BUFFER,this._vbo),t.bufferData(t.ARRAY_BUFFER,n.byteLength,this.drawMode),this.uploadVertexBuffer(o)}else console.error("Create webgl buffer error.")}},r.prototype.uploadVertexBuffer=function(t,r,n){void 0===t&&(t=null),void 0===r&&(r=0),void 0===n&&(n=0);var i=e.WebGLCapabilities.webgl;if(this._vbo&&i){var o=this._glTFMesh.primitives[0].attributes;if(i.bindBuffer(i.ARRAY_BUFFER,this._vbo),!t){t=[];for(var a in this._glTFMesh.primitives[0].attributes)t.push(a)}if(Array.isArray(t))for(var s=0,l=t;s<l.length;s++){var a=l[s],c=o[a];if(void 0!==c){var u=this.getAccessor(c),p=this.getBufferOffset(u),d=this.createTypeArrayFromAccessor(u,r,n);if(r>0){var h=this.getAccessorTypeCount(u.type);p+=r*h*this.getComponentTypeCount(u.componentType)}i.bufferSubData(i.ARRAY_BUFFER,p,d)}else console.warn("Error arguments.")}else{var c=o[t];if(void 0!==c){var u=this.getAccessor(c),p=this.getBufferOffset(u),d=this.createTypeArrayFromAccessor(u);i.bufferSubData(i.ARRAY_BUFFER,p,d)}else console.warn("Error arguments.")}}},r.prototype.uploadSubIndexBuffer=function(t){void 0===t&&(t=0);var r=e.WebGLCapabilities.webgl;if(this._vbo&&r)if(t>=0&&t<this._glTFMesh.primitives.length){var n=this._glTFMesh.primitives[t];if(void 0!==n.indices){var i=this.getAccessor(n.indices),o=this.createTypeArrayFromAccessor(i),a=this._ibos[t];r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a),r.bufferSubData(r.ELEMENT_ARRAY_BUFFER,0,o)}else console.warn("Error arguments.")}else console.warn("Error arguments.")},r}(e.BaseMesh);e.Mesh=t,__reflect(t.prototype,"egret3d.Mesh")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(r,n,i,o,a){void 0===r&&(r=""),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=6408),void 0===a&&(a=!1);var s=t.call(this,r)||this;s.width=n,s.height=i,s.format=o,s.mipmap=a;var l=e.WebGLCapabilities.webgl;return l&&(s.texture=l.createTexture()),s}return __extends(r,t),r}(e.Texture);e.GLTexture=t,__reflect(t.prototype,"egret3d.GLTexture",["egret3d.ITexture"]);var r=function(t){function r(e,r,n,i,o){return void 0===e&&(e=""),void 0===r&&(r=0),void 0===n&&(n=0),void 0===i&&(i=6408),void 0===o&&(o=!1),t.call(this,e,r,n,i,o)||this}return __extends(r,t),r.createColorTexture=function(e,t,n,i){var o=!0,a=!0,s=1,l=1,c=new Uint8Array([t,n,i,255]),u=new r(e,s,l,6408);return u.uploadImage(c,o,a,!0,!1),u},r.createGridTexture=function(e){for(var t=!0,n=!0,i=128,o=128,a=new Uint8Array(i*o*4),s=0;o>s;s++)for(var l=0;i>l;l++){var c=4*(s*i+l),u=(l-.5*i)*(s-.5*o)>0;a[c]=a[c+1]=a[c+2]=u?0:255,a[c+3]=255}var p=new r(e,i,o,6408);return p.uploadImage(a,t,n,!0,!0),p},r.prototype.uploadImage=function(t,r,n,i,o,a,s){void 0===i&&(i=!0),void 0===o&&(o=!1),void 0===a&&(a=!1),void 0===s&&(s=!1),this.mipmap=r;var l=e.WebGLCapabilities.webgl;if(l){l.bindTexture(l.TEXTURE_2D,this.texture),l.pixelStorei(l.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i?1:0),l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,0);var c=this.format;ArrayBuffer.isView(t)?l.texImage2D(l.TEXTURE_2D,0,c,this.width,this.height,0,c,l.UNSIGNED_BYTE,t):l.texImage2D(l.TEXTURE_2D,0,c,c,l.UNSIGNED_BYTE,t),r?(l.generateMipmap(l.TEXTURE_2D),n?(l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.LINEAR),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.LINEAR_MIPMAP_LINEAR)):(l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST_MIPMAP_NEAREST))):n?(l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.LINEAR),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.LINEAR)):(l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST));var u=l.CLAMP_TO_EDGE,p=l.CLAMP_TO_EDGE;o&&(u=a?l.MIRRORED_REPEAT:l.REPEAT,p=s?l.MIRRORED_REPEAT:l.REPEAT),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,u),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,p)}},r.prototype.caclByteLength=function(){var e=1;6408===this.format?e=4:6407===this.format&&(e=3);var t=this.width*this.height*e;return this.mipmap&&(t=t*(1-Math.pow(.25,10))/.75),t},r.prototype.dispose=function(){return t.prototype.dispose.call(this)?(null!==this.texture&&e.WebGLCapabilities.webgl.deleteTexture(this.texture),!0):!1},r.prototype.getReader=function(e){if(void 0===e&&(e=!1),null!==this._reader){if(this._reader.gray!==e)throw new Error("get param diff with this.reader");return this._reader}if(6408!==this.format)throw new Error("only rgba texture can read");return null===this.texture?null:(null===this._reader&&(this._reader=new n(this.texture,this.width,this.height,e)),this._reader)},r}(t);e.GLTexture2D=r,__reflect(r.prototype,"egret3d.GLTexture2D");var n=function(){function t(t,r,n,i){void 0===i&&(i=!0),this.gray=i,this.width=r,this.height=n;var o=new Uint8Array(this.width*this.height*4);o[0]=2;var a=e.WebGLCapabilities.webgl;if(a){var s=a.createFramebuffer(),l=a.getParameter(a.FRAMEBUFFER_BINDING);a.bindFramebuffer(a.FRAMEBUFFER,s),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,t,0),a.readPixels(0,0,this.width,this.height,a.RGBA,a.UNSIGNED_BYTE,o),a.deleteFramebuffer(s),a.bindFramebuffer(a.FRAMEBUFFER,l)}if(i){this.data=new Uint8Array(this.width*this.height);for(var c=0;r*n>c;c++)this.data[c]=o[4*c]}else this.data=o}return t.prototype.getPixel=function(t,r){var n=t*this.width|0,i=r*this.height|0;if(0>n||n>=this.width||0>i||i>=this.height)return 0;if(this.gray)return this.data[i*this.width+n];var o=4*(i*this.width+n);return e.Color.create(this.data[o],this.data[o+1],this.data[o+2],this.data[o+3])},t}();e.TextureReader=n,__reflect(n.prototype,"egret3d.TextureReader");var i;!function(e){e[e.RGBA=1]="RGBA",e[e.RGB=2]="RGB",e[e.Gray=3]="Gray",e[e.PVRTC4_RGB=4]="PVRTC4_RGB",e[e.PVRTC4_RGBA=4]="PVRTC4_RGBA",e[e.PVRTC2_RGB=4]="PVRTC2_RGB",e[e.PVRTC2_RGBA=4]="PVRTC2_RGBA"}(i=e.TextureFormatEnum||(e.TextureFormatEnum={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(t){function r(e,r,n,i,o,a,s){void 0===i&&(i=!1),void 0===o&&(o=!1),void 0===a&&(a=!1),void 0===s&&(s=!1);var l=t.call(this,e)||this;return l.width=r,l.height=n,l._depth=i,l._stencil=o,l._mipmap=a,l._linear=s,l.createFramebuffer(),l}return __extends(r,t),r.prototype.createFramebuffer=function(){var t=this.width,r=this.height,n=this._depth,i=this._stencil,o=e.WebGLCapabilities.webgl;this._fbo=o.createFramebuffer(),this._fbo.width=t,this._fbo.height=r,o.bindFramebuffer(o.FRAMEBUFFER,this._fbo),(n||i)&&(this._renderbuffer=o.createRenderbuffer(),o.bindRenderbuffer(o.RENDERBUFFER,this._renderbuffer),n&&i?(o.renderbufferStorage(o.RENDERBUFFER,o.DEPTH_STENCIL,t,r),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.RENDERBUFFER,this._renderbuffer)):n?(o.renderbufferStorage(o.RENDERBUFFER,o.DEPTH_COMPONENT16,t,r),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.DEPTH_ATTACHMENT,o.RENDERBUFFER,this._renderbuffer)):(o.renderbufferStorage(o.RENDERBUFFER,o.STENCIL_INDEX8,t,r),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.STENCIL_ATTACHMENT,o.RENDERBUFFER,this._renderbuffer)),o.bindRenderbuffer(o.RENDERBUFFER,null)),this.createTexture(),o.bindFramebuffer(o.FRAMEBUFFER,null)},r.prototype.createTexture=function(){},r.prototype.use=function(){},r.prototype.generateMipmap=function(){return!1},r.prototype.dispose=function(){if(!t.prototype.dispose.call(this))return!1;var r=e.WebGLCapabilities.webgl;this._renderbuffer&&r.deleteRenderbuffer(this._renderbuffer),null!==this.texture&&r.deleteTexture(this.texture),this._fbo&&r.deleteFramebuffer(this._fbo),this._renderbuffer=null,this.texture=null,this._fbo=null},r.prototype.caclByteLength=function(){return this.width*this.height*4},r}(e.Texture);e.BaseRenderTarget=t,__reflect(t.prototype,"egret3d.BaseRenderTarget");var r=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return __extends(r,t),r.prototype.createTexture=function(){t.prototype.createTexture.call(this);var r=e.WebGLCapabilities.webgl;this.texture=r.createTexture(),r.bindTexture(r.TEXTURE_2D,this.texture),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,0),r.pixelStorei(r.UNPACK_ALIGNMENT,4),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,this.width,this.height,0,r.RGBA,r.UNSIGNED_BYTE,null),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE);var n=e.isPowerOfTwo(this.width)&&e.isPowerOfTwo(this.height);n?this._linear?(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,this._mipmap?r.LINEAR_MIPMAP_LINEAR:r.LINEAR)):(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,this._mipmap?r.NEAREST_MIPMAP_NEAREST:r.NEAREST)):this._linear?(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR)):(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST)),this._mipmap&&n&&r.generateMipmap(r.TEXTURE_2D),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,this.texture,0)},r.prototype.use=function(){var t=e.WebGLCapabilities.webgl;t.bindFramebuffer(t.FRAMEBUFFER,this._fbo)},r.prototype.generateMipmap=function(){if(this._mipmap){var t=e.WebGLCapabilities.webgl;return t.bindTexture(t.TEXTURE_2D,this.texture),t.generateMipmap(t.TEXTURE_2D),t.bindTexture(t.TEXTURE_2D,null),!0}return!1},r}(t);e.GlRenderTarget=r,__reflect(r.prototype,"egret3d.GlRenderTarget")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=0,r=function(){function e(e){this.id=t++,this.attributes=[],this.contextUniforms=[],this.uniforms=[],this.program=e}return e}();e.GlProgram=r,__reflect(r.prototype,"egret3d.GlProgram")}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){var r=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e._canvas=null,e}return __extends(r,t),r.prototype._updateCanvas=function(e){var t=this._canvas,r=e.screenSize,n=e.viewport,i=t.parentElement;if(t.width=n.w,t.height=n.h,t.style.top=(i?i.offsetTop:0)+"px",t.style.position="absolute",t.style[egret.web.getPrefixStyleName("transformOrigin")]="0% 0% 0px",e.rotated){t.style.left=(i?i.offsetLeft:0)+r.w+"px";var o="matrix(0,"+r.h/t.width+","+-r.w/t.height+",0,0,0)";t.style[egret.web.getPrefixStyleName("transform")]=o}else{t.style.left=(i?i.offsetLeft:0)+"px";var o="matrix("+r.w/t.width+",0,0,"+r.h/t.height+",0,0)";t.style[egret.web.getPrefixStyleName("transform")]=o}},r.prototype.onAwake=function(t){var r=this,n=paper.GameObject.globalGameObject;this._canvas=t.canvas;var i=egret.Capabilities.runtimeType===egret.RuntimeType.WXGAME||void 0===this._canvas.parentElement,o=i?window.innerWidth:this._canvas.parentElement.clientWidth,a=i?window.innerHeight:this._canvas.parentElement.clientHeight;n.addComponent(e.Stage,{size:{w:t.option.contentWidth,h:t.option.contentHeight},screenSize:{w:o,h:a}}),n.getOrAddComponent(e.WebGLCapabilities,!1,t),n.getOrAddComponent(e.DefaultMeshes),n.getOrAddComponent(e.DefaultShaders),n.getOrAddComponent(e.DefaultTextures),n.getOrAddComponent(e.DefaultMaterials),n.getOrAddComponent(e.InputCollecter),this._updateCanvas(e.stage),e.stage.onScreenResize.add(function(){r._updateCanvas(e.stage)},this),e.stage.onResize.add(function(){r._updateCanvas(e.stage)},this)},r.prototype.onUpdate=function(){var t=egret.Capabilities.runtimeType===egret.RuntimeType.WXGAME||void 0===this._canvas.parentElement,r=t?window.innerWidth:this._canvas.parentElement.clientWidth,n=t?window.innerHeight:this._canvas.parentElement.clientHeight,i=e.stage.screenSize;(r!==i.w||n!==i.h)&&(e.stage.screenSize={w:r,h:n})},r}(paper.BaseSystem);t.BeginSystem=r,__reflect(r.prototype,"egret3d.web.BeginSystem")}(t=e.web||(e.web={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){var r=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._interests=[[{componentClass:e.Camera}],[{componentClass:e.Egret2DRenderer}],[{componentClass:[e.DirectionalLight,e.SpotLight,e.PointLight]}]],r._egret2DOrderCount=0,r._cameraAndLightCollecter=paper.GameObject.globalGameObject.getOrAddComponent(e.CameraAndLightCollecter),r._renderState=paper.GameObject.globalGameObject.getOrAddComponent(e.WebGLRenderState,!1,r),r._lightCamera=paper.GameObject.globalGameObject.getOrAddComponent(e.Camera),r._cacheMaterialVerision=-1,r._cacheMaterial=null,r._cacheSubMeshIndex=-1,r._cacheMesh=null,r}return __extends(r,t),r.prototype._render=function(t,r){var n=this._renderState;n.updateViewport(t.viewport,r);var i=16640;t.clearOption_Depth||(i&=-257),t.clearOption_Color||(i&=-16385),n.clearBuffer(i,t.backgroundColor);for(var o=t.context.opaqueCalls,a=t.context.transparentCalls,s=0,l=o;s<l.length;s++){var c=l[s];this.draw(t,c)}for(var u=0,p=a;u<p.length;u++){var c=p[u];this.draw(t,c)}r&&r.generateMipmap()&&n.clearState();for(var d=0,h=this._groups[1].gameObjects;d<h.length;d++){var f=h[d],_=f.getComponent(e.Egret2DRenderer);t.cullingMask&_.gameObject.layer&&(_._order<0&&(_._order=this._egret2DOrderCount++),_._draw(),n.clearState())}},r.prototype.draw=function(t,r){if(r.renderer&&r.renderer.gameObject._beforeRenderBehaviors.length>0){var n=!1;e.Camera.current=t;for(var i=0,o=r.renderer.gameObject._beforeRenderBehaviors;i<o.length;i++){var a=o[i];n=!a.onBeforeRender()||n}if(n)return}var s=r.material,l=t.context,c=l.updateDrawCall(r),u=e.WebGLCapabilities.webgl,p=s._glTFTechnique,d=p.states||null,h=this._renderState,f=h.getProgram(s,p,c+s.shaderDefine),_=h.useProgram(f);h.updateState(d),this._updateGlobalUniforms(f,l),this._updateUniforms(f,s,p,_),this._updateAttributes(f,r.mesh,r.subMeshIndex,p,_);var m=r.mesh,v=m.glTFMesh,g=v.primitives[r.subMeshIndex],y=m.getAccessor(v.primitives[0].attributes.POSITION||0),b=m.getBufferOffset(y),x=void 0===g.mode?4:g.mode;if(void 0!==g.indices){var T=m.getAccessor(g.indices);u.drawElements(x,T.count,u.UNSIGNED_SHORT,b)}else u.drawArrays(x,b,y.count)},r.prototype._updateGlobalUniforms=function(t,r){for(var n=e.WebGLCapabilities.webgl,i=t.contextUniforms,o=r.camera,a=r.drawCall,s=a.matrix,l=0,c=i;l<c.length;l++){var u=c[l],p=u.semantic;if(p){var d=u.location;switch(p){case"MODEL":n.uniformMatrix4fv(d,!1,s.rawData);break;case"MODELVIEW":n.uniformMatrix4fv(d,!1,r.matrix_mv.rawData);break;case"MODELVIEWPROJECTION":n.uniformMatrix4fv(d,!1,r.matrix_mvp.rawData);break;case"MODELVIEWINVERSE":n.uniformMatrix3fv(d,!1,r.matrix_mv_inverse.rawData);break;case"VIEW":n.uniformMatrix4fv(d,!1,o.transform.worldToLocalMatrix.rawData);
break;case"PROJECTION":n.uniformMatrix4fv(d,!1,o.projectionMatrix.rawData);break;case"_VIEWPROJECTION":n.uniformMatrix4fv(d,!1,o.worldToClipMatrix.rawData);break;case"_CAMERA_POS":n.uniform3fv(d,r.cameraPosition);break;case"_CAMERA_FORWARD":n.uniform3fv(d,r.cameraForward);break;case"_CAMERA_UP":n.uniform3fv(d,r.cameraUp);break;case"JOINTMATRIX":n.uniformMatrix4fv(d,!1,a.renderer.boneMatrices);break;case"_DIRECTLIGHTS":r.directLightCount>0&&n.uniform1fv(d,r.directLightArray);break;case"_POINTLIGHTS":r.pointLightCount>0&&n.uniform1fv(d,r.pointLightArray);break;case"_SPOTLIGHTS":r.spotLightCount>0&&n.uniform1fv(d,r.spotLightArray);break;case"_AMBIENTLIGHTCOLOR":var h=a.renderer?a.renderer.gameObject.scene.ambientColor:paper.Scene.activeScene.ambientColor;n.uniform3f(d,h.r,h.g,h.b);break;case"_DIRECTIONSHADOWMAT":n.uniformMatrix4fv(d,!1,r.directShadowMatrix);break;case"_SPOTSHADOWMAT":n.uniformMatrix4fv(d,!1,r.spotShadowMatrix);break;case"_POINTSHADOWMAT":n.uniformMatrix4fv(d,!1,r.pointShadowMatrix);break;case"_DIRECTIONSHADOWMAP":var f=r.directShadowMaps.length;if(f>0&&u.textureUnits){var _=u.textureUnits;n.uniform1iv(d,_);for(var m=0,v=_.length;v>m;m++)r.directShadowMaps[m]&&(n.activeTexture(n.TEXTURE0+_[m]),n.bindTexture(n.TEXTURE_2D,r.directShadowMaps[m]))}break;case"_POINTSHADOWMAP":var g=r.pointShadowMaps.length;if(g>0&&u.textureUnits){var _=u.textureUnits;n.uniform1iv(d,_);for(var m=0,v=_.length;v>m;m++)r.pointShadowMaps[m]&&(n.activeTexture(n.TEXTURE0+_[m]),n.bindTexture(n.TEXTURE_2D,r.pointShadowMaps[m]))}break;case"_SPOTSHADOWMAP":var y=r.spotShadowMaps.length;if(y>0&&u.textureUnits){var _=u.textureUnits;n.uniform1iv(d,_);for(var m=0,v=_.length;v>m;m++)r.spotShadowMaps[m]&&(n.activeTexture(n.TEXTURE0+_[m]),n.bindTexture(n.TEXTURE_2D,r.spotShadowMaps[m]))}break;case"_LIGHTMAPTEX":if(u.textureUnits&&1===u.textureUnits.length&&r.lightmap){var b=u.textureUnits[0];n.uniform1i(d,b),n.activeTexture(n.TEXTURE0+b),n.bindTexture(n.TEXTURE_2D,r.lightmap.texture)}else console.error("Error texture unit.");break;case"_LIGHTMAPINTENSITY":n.uniform1f(d,r.lightmapIntensity);break;case"_LIGHTMAP_SCALE_OFFSET":n.uniform4fv(d,r.lightmapScaleOffset);break;case"_REFERENCEPOSITION":break;case"_NEARDICTANCE":n.uniform1f(d,r.lightShadowCameraNear);break;case"_FARDISTANCE":n.uniform1f(d,r.lightShadowCameraFar);break;case"_FOG_COLOR":n.uniform3fv(d,r.fogColor);break;case"_FOG_DENSITY":n.uniform1f(d,r.fogDensity);break;case"_FOG_NEAR":n.uniform1f(d,r.fogNear);break;case"_FOG_FAR":n.uniform1f(d,r.fogFar);break;default:console.warn("不识别的Uniform语义:"+p)}}}},r.prototype._updateUniforms=function(t,r,n,i){var o=this._cacheMaterial!==r||this._cacheMaterialVerision!==r._version||i;if(o){this._cacheMaterial=r,this._cacheMaterialVerision=r._version;for(var a=e.WebGLCapabilities.webgl,s=n.uniforms,l=t.uniforms,c=0,u=l;c<u.length;c++){var p=u[c],d=s[p.name];if(!d.semantic){var h=p.location,f=d.value;switch(d.type){case 35670:case 5124:p.size>1?a.uniform1iv(h,f):a.uniform1i(h,f);break;case 35671:case 35667:a.uniform2iv(h,f);break;case 35672:case 35668:a.uniform3iv(h,f);break;case 35673:case 35669:a.uniform4iv(h,f);break;case 5126:p.size>1?a.uniform1fv(h,f):a.uniform1f(h,f);break;case 35664:a.uniform2fv(h,f);break;case 35665:a.uniform3fv(h,f);break;case 35666:a.uniform4fv(h,f);break;case 35674:a.uniformMatrix2fv(h,!1,f);break;case 35675:a.uniformMatrix3fv(h,!1,f);break;case 35676:a.uniformMatrix4fv(h,!1,f);break;case 35678:if(p.textureUnits&&1===p.textureUnits.length){var _=p.textureUnits[0];a.uniform1i(h,_),a.activeTexture(a.TEXTURE0+_),a.bindTexture(a.TEXTURE_2D,f.texture)}else console.error("Error texture unit")}}}}},r.prototype._updateAttributes=function(t,r,n,i,o){var a=o||this._cacheSubMeshIndex!==n||this._cacheMesh!==r;if(a){this._cacheSubMeshIndex=n,this._cacheMesh=r;var s=e.WebGLCapabilities.webgl,l=r.glTFMesh.primitives[n],c=t.attributes;s.bindBuffer(s.ARRAY_BUFFER,r._vbo);for(var u=0,p=c;u<p.length;u++){var d=p[u],h=d.location,f=l.attributes[d.semantic];if(void 0!==f){var _=r.getAccessor(f),m=r.getBufferOffset(_),v=r.getAccessorTypeCount(_.type);s.vertexAttribPointer(h,v,_.componentType,_.normalized?!0:!1,0,m),s.enableVertexAttribArray(h)}else s.disableVertexAttribArray(h)}var g=r._ibos[n];g&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,g)}},r.prototype.render=function(t){if(e.Camera.current=t,t._update(),this._cameraAndLightCollecter.lightDirty&&t.context.updateLights(this._cameraAndLightCollecter.lights),0===t.postQueues.length)this._render(t,t.renderTarget);else{this._render(t,t.postProcessingRenderTarget);for(var r=0,n=t.postQueues;r<n.length;r++){var i=n[r];i.render(t)}}},r.prototype.onUpdate=function(){if(e.WebGLCapabilities.webgl){var t=0===paper.Application.playerMode,r=this._cameraAndLightCollecter,n=this._renderState,i=paper.Application.sceneManager.editorScene,o=r.cameras,a=r.lights;if(a.length>0)for(var s=0,l=a;s<l.length;s++){var c=l[s];c.castShadows}if(o.length>0){this._egret2DOrderCount=0;for(var u=0,p=o;u<p.length;u++){var d=p[u],h=d.gameObject.scene;(t?h!==i:h===i)&&this.render(d)}}else n.clearBuffer(16640,e.Color.BLACK)}},r}(paper.BaseSystem);t.WebGLRenderSystem=r,__reflect(r.prototype,"egret3d.web.WebGLRenderSystem",["egret3d.IRenderSystem"])}(t=e.web||(e.web={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){var r=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._hasTouch=!1,r._canvas=null,r._onPointerEvent=function(t){if(e.inputCollecter.isActiveAndEnabled){var n=e.stage.rotated,i=r._canvas,o=e.inputCollecter._downPointers,a=e.inputCollecter._holdPointers,s=e.inputCollecter.getPointer(t.pointerId),l=s.event;switch(s.event=t,s.position.set(t.clientX-(i.offsetLeft||0),t.clientY-(i.offsetTop||0),0),n&&(s.position.x+=e.stage.screenSize.w),e.stage.screenToStage(s.position,s.position),t.type){case"pointerover":a.length>0&&0===t.buttons&&r._pointerUp(s,!0),e.inputCollecter.onPointerOver.dispatch(s,e.inputCollecter.onPointerOver),t.preventDefault();break;case"pointerenter":e.inputCollecter.onPointerEnter.dispatch(s,e.inputCollecter.onPointerEnter),t.preventDefault();break;case"pointerdown":o.indexOf(s)<0&&a.indexOf(s)<0&&(s.downPosition.copy(s.position),o.push(s),a.push(s),e.inputCollecter.onPointerDown.dispatch(s,e.inputCollecter.onPointerDown),t.preventDefault());break;case"pointermove":t.target===i||a.length>0?(e.inputCollecter.onPointerMove.dispatch(s,e.inputCollecter.onPointerMove),t.preventDefault()):s.event=l;break;case"pointerup":r._pointerUp(s,!1)||(s.event=l,t.preventDefault());break;case"pointercancel":r._pointerUp(s,!0)||(s.event=l,t.preventDefault());break;case"pointerout":e.inputCollecter.onPointerOut.dispatch(s,e.inputCollecter.onPointerOut),t.preventDefault();break;case"pointerleave":e.inputCollecter.onPointerLeave.dispatch(s,e.inputCollecter.onPointerLeave),t.preventDefault()}}},r._onMouseWheelEvent=function(t){e.inputCollecter.isActiveAndEnabled&&(t.detail?e.inputCollecter.mouseWheel=-1*t.detail:t.wheelDelta?e.inputCollecter.mouseWheel=t.wheelDelta/120:e.inputCollecter.mouseWheel=0,e.inputCollecter.onMouseWheel.dispatch(r),t.preventDefault())},r._onMouseEvent=function(t){if(e.inputCollecter.isActiveAndEnabled){t.isPrimary=!0,t.pointerId=1,t.pressure=0,t.tangentialPressure=0,t.twist=0,t.width=1,t.height=1,t.tiltX=0,t.tiltY=0,t.pointerType="mouse";var n=e.stage.rotated,i=t,o=r._canvas,a=e.inputCollecter._downPointers,s=e.inputCollecter._holdPointers,l=e.inputCollecter.getPointer(i.pointerId),c=l.event;switch(l.event=i,l.position.set(t.clientX-(o.offsetLeft||0),t.clientY-(o.offsetTop||0),0),n&&(l.position.x+=e.stage.screenSize.w),e.stage.screenToStage(l.position,l.position),t.type){case"mouseover":s.length>0&&0===t.buttons&&(t.type="pointerup",r._pointerUp(l,!0)),t.type="pointerover",e.inputCollecter.onPointerOver.dispatch(l,e.inputCollecter.onPointerOver),t.preventDefault();break;case"mouseenter":t.type="pointerenter",e.inputCollecter.onPointerEnter.dispatch(l,e.inputCollecter.onPointerEnter),t.preventDefault();break;case"mousedown":a.indexOf(l)<0&&s.indexOf(l)<0&&(l.downPosition.copy(l.position),a.push(l),s.push(l),t.type="pointerdown",e.inputCollecter.onPointerDown.dispatch(l,e.inputCollecter.onPointerDown),t.preventDefault());break;case"mousemove":t.target===o||s.length>0?(t.type="pointermove",e.inputCollecter.onPointerMove.dispatch(l,e.inputCollecter.onPointerMove),t.preventDefault()):l.event=c;break;case"mouseup":t.type="pointerup",r._pointerUp(l,!1)||(l.event=c,t.preventDefault());break;case"mousecancel":t.type="pointercancel",r._pointerUp(l,!0)||(l.event=c,t.preventDefault());break;case"mouseout":t.type="pointerout",e.inputCollecter.onPointerOut.dispatch(l,e.inputCollecter.onPointerOut),t.preventDefault();break;case"mouseleave":t.type="pointerleave",e.inputCollecter.onPointerLeave.dispatch(l,e.inputCollecter.onPointerLeave),t.preventDefault()}}},r._onTouchEvent=function(t){if(e.inputCollecter.isActiveAndEnabled){r._hasTouch||(r._hasTouch=!0,r._removeMouseEvent());var n=t.changedTouches[0];t.isPrimary=!0,t.pointerId=n.identifier+2,t.pressure=n.force||.5,t.tangentialPressure=0,t.twist=0,t.width=2*(n.radiusX||0),t.height=2*(n.radiusY||0),t.tiltX=0,t.tiltY=0,t.pointerType="touch",t.button=0,t.buttons="touchstart"===t.type||"touchmove"===t.type?1:0,t.clientX=n.clientX,t.clientY=n.clientY,t.pageX=n.pageX,t.pageY=n.pageY,t.screenX=n.screenX,t.screenY=n.screenY;var i=e.stage.rotated,o=t,a=r._canvas,s=e.inputCollecter._downPointers,l=e.inputCollecter._holdPointers,c=e.inputCollecter.getPointer(o.pointerId),u=c.event;switch(c.event=o,c.position.set(o.clientX-(a.offsetLeft||0),o.clientY-(a.offsetTop||0),0),i&&(c.position.x+=e.stage.screenSize.w),e.stage.screenToStage(c.position,c.position),t.type){case"touchstart":s.indexOf(c)<0&&l.indexOf(c)<0&&(c.downPosition.copy(c.position),s.push(c),l.push(c),t.type="pointerdown",e.inputCollecter.onPointerDown.dispatch(c,e.inputCollecter.onPointerDown),t.preventDefault());break;case"touchmove":if(t.target===a||l.length>0){t.type="pointermove",e.inputCollecter.onPointerMove.dispatch(c,e.inputCollecter.onPointerMove);for(var p=0,d=t.targetTouches.length;d>p;++p){var h=t.targetTouches[p];if(h!==n){var f=e.inputCollecter.getPointer(h.identifier+2),_=f.event;_.pressure=h.force||.5,_.width=2*(h.radiusX||0),_.height=2*(h.radiusY||0),_.clientX=h.clientX,_.clientY=h.clientY,_.pageX=h.pageX,_.pageY=h.pageY,_.screenX=h.screenX,_.screenY=h.screenY,_.type="pointermove",f.position.set(_.clientX-(a.offsetLeft||0),_.clientY-(a.offsetTop||0),0),i&&(f.position.x+=e.stage.screenSize.w),e.stage.screenToStage(f.position,f.position),e.inputCollecter.onPointerMove.dispatch(f,e.inputCollecter.onPointerMove)}}t.preventDefault()}else c.event=u;break;case"touchend":t.type="pointerup",r._pointerUp(c,!1)||(c.event=u,t.preventDefault());break;case"touchcancel":t.type="pointercancel",r._pointerUp(c,!0)||(c.event=u,t.preventDefault())}}},r._onContextMenu=function(t){(e.inputCollecter._downPointers.length>0||e.inputCollecter._holdPointers.length>0||e.inputCollecter._upPointers.length>0)&&t.preventDefault()},r._onKeyEvent=function(t){if(e.inputCollecter.isActiveAndEnabled){var r=e.inputCollecter._downKeys,n=e.inputCollecter._holdKeys,i=e.inputCollecter._upKeys,o=e.inputCollecter.getKey(t.code);switch(o.event=t,t.type){case"keydown":r.indexOf(o)<0&&n.indexOf(o)<0&&(r.push(o),n.push(o),e.inputCollecter.onKeyDown.dispatch(o,e.inputCollecter.onKeyDown));break;case"keyup":var a=!1,s=r.indexOf(o);s>=0&&(a=!0,r.splice(s,1)),s=n.indexOf(o),s>=0&&(a=!0,n.splice(s,1)),a&&i.indexOf(o)<0&&(i.push(o),e.inputCollecter.onKeyUp.dispatch(o,e.inputCollecter.onKeyUp))}}},r}return __extends(r,t),r.prototype._pointerUp=function(t,r){if(0!==t.event.buttons)return!1;var n=!1,i=e.inputCollecter._downPointers,o=e.inputCollecter._holdPointers,a=e.inputCollecter._upPointers,s=i.indexOf(t);return s>=0&&(n=!0,i.splice(s,1)),s=o.indexOf(t),s>=0&&(n=!0,o.splice(s,1)),n&&a.indexOf(t)<0?(e.inputCollecter.removePointer(t.event.pointerId),a.push(t),r?e.inputCollecter.onPointerCancel.dispatch(t,e.inputCollecter.onPointerCancel):e.inputCollecter.onPointerUp.dispatch(t,e.inputCollecter.onPointerUp),!0):!1},r.prototype._removeMouseEvent=function(){var e=this._canvas;e.removeEventListener("mouseover",this._onMouseEvent),e.removeEventListener("mouseenter",this._onMouseEvent),e.removeEventListener("mousedown",this._onMouseEvent),window.removeEventListener("mousemove",this._onMouseEvent),window.removeEventListener("mouseup",this._onMouseEvent),e.removeEventListener("mouseout",this._onMouseEvent),e.removeEventListener("mouseleave",this._onMouseEvent)},r.prototype.onAwake=function(e){this._canvas=e.canvas},r.prototype.onEnable=function(){var e=this._canvas;this._hasTouch||(e.addEventListener("mousedown",this._onMouseEvent),e.addEventListener("mouseover",this._onMouseEvent),e.addEventListener("mouseenter",this._onMouseEvent),window.addEventListener("mousemove",this._onMouseEvent),window.addEventListener("mouseup",this._onMouseEvent),e.addEventListener("mouseout",this._onMouseEvent),e.addEventListener("mouseleave",this._onMouseEvent)),e.addEventListener("touchstart",this._onTouchEvent),e.addEventListener("touchmove",this._onTouchEvent),e.addEventListener("touchend",this._onTouchEvent),window.addEventListener("touchcancel",this._onTouchEvent),window.addEventListener("contextmenu",this._onContextMenu),e.addEventListener("mousewheel",this._onMouseWheelEvent),window.addEventListener("keydown",this._onKeyEvent),window.addEventListener("keyup",this._onKeyEvent)},r.prototype.onDisable=function(){var t=this._canvas;t.removeEventListener("pointerover",this._onPointerEvent),t.removeEventListener("pointerenter",this._onPointerEvent),t.removeEventListener("pointerdown",this._onPointerEvent),window.removeEventListener("pointermove",this._onPointerEvent),window.removeEventListener("pointerup",this._onPointerEvent),t.removeEventListener("pointercancel",this._onPointerEvent),t.removeEventListener("pointerout",this._onPointerEvent),t.removeEventListener("pointerleave",this._onPointerEvent),this._removeMouseEvent(),t.removeEventListener("touchstart",this._onTouchEvent),t.removeEventListener("touchmove",this._onTouchEvent),t.removeEventListener("touchend",this._onTouchEvent),window.removeEventListener("touchcancel",this._onTouchEvent),window.removeEventListener("contextmenu",this._onContextMenu),t.removeEventListener("mousewheel",this._onMouseWheelEvent),window.removeEventListener("keydown",this._onKeyEvent),window.removeEventListener("keyup",this._onKeyEvent),e.inputCollecter.clear()},r.prototype.onUpdate=function(t){e.inputCollecter.isActiveAndEnabled&&e.inputCollecter.update(t).clear()},r}(paper.BaseSystem);t.InputSystem=r,__reflect(r.prototype,"egret3d.web.InputSystem")}(t=e.web||(e.web={}))}(egret3d||(egret3d={}));var egret3d;!function(e){var t;!function(t){var r=function(t){function r(){var r=null!==t&&t.apply(this,arguments)||this;return r._contactCollecter=paper.GameObject.globalGameObject.getOrAddComponent(e.ContactCollecter),r}return __extends(r,t),r.prototype.onUpdate=function(e){var t=this._contactCollecter;t.isActiveAndEnabled&&this._contactCollecter.update(e)},r}(paper.BaseSystem);t.EndSystem=r,__reflect(r.prototype,"egret3d.web.EndSystem")}(t=e.web||(e.web={}))}(egret3d||(egret3d={}));var egret3d;!function(e){function t(e){r(e.gameObjects)}function r(e){p.length=0,d=0;for(var t={},r=0,o=e;r<o.length;r++){var a=o[r];n(a,t)}console.log("合并前:"+d);var s=0;for(var l in t)for(var c=t[l],u=0,h=c;u<h.length;u++){var f=h[u];i(f),s++}console.log("合并后:"+s+"节省:"+(d-s)),p.length=0}function n(t,r,i){if(!(p.indexOf(t.uuid)>=0)){p.push(t.uuid);for(var o=0,a=t.transform.children;o<a.length;o++){var s=a[o];s&&n(s.gameObject,r,i)}if(t.isStatic){var l=t.getComponent(e.MeshFilter),c=t.getComponent(e.MeshRenderer);if(l&&l.mesh&&c&&c.materials&&!(c.materials.length<1)){d++;var u=c.materials,f=l.mesh,_=c.lightmapIndex+"_";u.forEach(function(e){_=_+"_"+e.uuid}),r[_]||(r[_]=[],r[_].push(new h));var m=r[_],v=m[m.length-1];v.vertexCount+f.vertexCount>e.MAX_VERTEX_COUNT_PER_BUFFER&&(v=new h,r[_].push(v)),v.root||(v.root=i?i:t,v.lightmapIndex=c.lightmapIndex);for(var g=f.glTFMesh.primitives,y=0;y<g.length;y++){var b=g[y];for(var x in g[y].attributes){var T=x;v.meshAttribute[T]||(v.vertexBufferSize+=f.getAccessorTypeCount(f.getAccessor(b.attributes[x]).type)),v.meshAttribute[T]=T}v.indexBufferTotalSize+=f.getBufferLength(f.getAccessor(b.indices))/Uint16Array.BYTES_PER_ELEMENT}v.vertexCount+=f.vertexCount,v.instances.push(t)}}}}function i(t){var r=o(t),n=t.root,i=n.getComponent(e.MeshFilter);i.mesh=r}function o(t){u.copy(t.root.transform.worldToLocalMatrix);var r=t.meshAttribute,n=t.root.renderer.lightmapScaleOffset,i=[],o=[],p={};for(var d in r)p[d]=[],i.push(d);for(var h=0,f=0,_=0,m=t.instances;_<m.length;_++){for(var v=m[_],g=v.getComponent(e.MeshFilter),y=v.getComponent(e.MeshRenderer),b=v.transform.localToWorldMatrix,x=g.mesh,T=y.lightmapScaleOffset,C=x.glTFMesh.primitives,S=!0,E=0;E<C.length;E++){var M=C[E];if(S){S=!1;for(var A=x.vertexCount,R=C[E].attributes,w=x.createTypeArrayFromAccessor(x.getAccessor(R.POSITION)),O=0;O<w.length;O+=3)l.x=w[O+0],l.y=w[O+1],l.z=w[O+2],b.transformVector3(l,c),u.transformVector3(c,l),p.POSITION.push(l.x,l.y,l.z);if(r.NORMAL)if(R.NORMAL){var L=x.createTypeArrayFromAccessor(x.getAccessor(R.NORMAL)),P=p.NORMAL,D=L.length,I=P.length;P.length+=D;for(var O=0;D>O;O+=3)l.x=L[O+0],l.y=L[O+1],l.z=L[O+2],b.transformNormal(l),u.transformNormal(l),l.normalize(),P[I+O]=l.x,P[I+O+1]=l.y,P[I+O+2]=l.z}else s(p.NORMAL,A,[0,0,0]);if(r.TANGENT)if(R.TANGENT){var z=x.createTypeArrayFromAccessor(x.getAccessor(R.TANGENT)),P=p.TANGENT,D=z.length,U=P.length;P.length+=D;for(var O=0;D>O;O+=4)l.x=z[O+0],l.y=z[O+1],l.z=z[O+2],b.transformNormal(l),u.transformNormal(l),l.normalize(),P[U+O]=l.x,P[U+O+1]=l.y,P[U+O+2]=l.z,P[U+O+3]=z[O+3]}else s(p.TANGENT,A,[0,0,0,1]);if(r.COLOR_0&&(R.COLOR_0?a(x,R.COLOR_0,p.COLOR_0):s(p.COLOR_0,A,[1,1,1,1])),r.TEXCOORD_0&&(R.TEXCOORD_0?a(x,R.TEXCOORD_0,p.TEXCOORD_0):s(p.TEXCOORD_0,A,[0,0])),r.TEXCOORD_1)if(t.lightmapIndex>=0)for(var N=R.TEXCOORD_1?x.createTypeArrayFromAccessor(x.getAccessor(R.TEXCOORD_1)):x.createTypeArrayFromAccessor(x.getAccessor(R.TEXCOORD_0)),O=0;O<N.length;O+=2){var V=N[O+0],F=N[O+1];V=(V*T.x+T.z-n.z)/n.x,F=(F*T.y-T.y-T.w+n.w+n.x)/n.x,p.TEXCOORD_1.push(V,F)}else void 0!==R.TEXCOORD_1?a(x,R.TEXCOORD_1,p.TEXCOORD_1):s(p.TEXCOORD_1,A,[0,0]);r.JOINTS_0&&(R.JOINTS_0?a(x,R.JOINTS_0,p.JOINTS_0):s(p.JOINTS_0,A,[0,0,0,0])),r.WEIGHTS_0&&(R.WEIGHTS_0?a(x,R.WEIGHTS_0,p.WEIGHTS_0):s(p.WEIGHTS_0,A,[1,0,0,0])),r.COLOR_1&&(R.COLOR_1?a(x,R.COLOR_1,p.COLOR_1):s(p.COLOR_1,A,[1,1,1,1]))}var B=x.createTypeArrayFromAccessor(x.getAccessor(M.indices));o[E]||(o[E]=[]);for(var O=0;O<B.length;O++){var G=B[O]+h;o[E].push(G),f=G>f?G:f}}h=f+1,g.mesh=null}var j=new e.Mesh(t.vertexCount,t.indexBufferTotalSize,i,void 0,35048),H=j.buffers[0],k=j.buffers[1],X=0;for(var d in p)for(var W=p[d],q=0,Y=W;q<Y.length;q++){var F=Y[q];H[X++]=F}var K=0;for(var d in o)for(var W=o[d],Z=0,Q=W;Z<Q.length;Z++){var F=Q[Z];k[K++]=F}for(var J=0,E=0;E<o.length;E++){var $=o[E].length;j.addSubMesh(J,$,E),J+=$}return j}function a(e,t,r){var n=e.createTypeArrayFromAccessor(e.getAccessor(t)),i=n.length,o=r.length;r.length+=i;for(var a=0;i>a;a++)r[o+a]=n[a]}function s(e,t,r){var n=e.length,i=r.length;e.length+=t*i;for(var o=0;t>o;o++)for(var a=0;i>a;a++)e[n++]=r[a]}e.MAX_VERTEX_COUNT_PER_BUFFER=5e4;var l=e.Vector3.create(),c=e.Vector3.create(),u=e.Matrix4.create(),p=[],d=0;e.autoCombine=t,e.combine=r;var h=function(){function e(){this.vertexCount=0,this.vertexBufferSize=0,this.indexBufferTotalSize=0,this.lightmapIndex=-1,this.meshAttribute={},this.root=null,this.instances=[]}return e}();__reflect(h.prototype,"CombineInstance")}(egret3d||(egret3d={}));var egret3d;!function(e){var t=function(){function e(){}return e._getNow=function(){return(new Date).getTime()},e._print=function(e){for(var t=0,r=0,n=e;r<n.length;r++){var i=n[r];t+=i.time}console.log("------------------------");for(var o=0,a=e;o<a.length;o++){var i=a[o];console.log(i.key+":用时"+i.time+"平均:"+i.time/i.count+"最大值:"+i.maxTime+" 权重:"+Math.round(i.time/t*100)+"%")}},e.clear=function(){this.profileList.keys.length=0,this.profileList.values.length=0},e.startTime=function(e,t){if(void 0===t&&(t=0),this.debug){var r=this.profileList.keys.indexOf(e);0>r&&(this.profileList.keys.push(e),r=this.profileList.values.length,this.profileList.values.push({key:e,count:0,startTime:0,time:0,group:t,maxTime:0}));var n=this.profileList.values[r];n.count++,n.startTime=this._getNow()}},e.endTime=function(e){if(this.debug){var t=this.profileList.keys.indexOf(e);if(0>t)console.log("invalid key error.",this);else{var r=this.profileList.values[t],n=this._getNow()-r.startTime;r.time+=n,r.maxTime=r.maxTime>n?r.maxTime:n}}},e.printAll=function(){if(this.debug){for(var e={},t=0,r=this.profileList.values;t<r.length;t++){var n=r[t];e[n.group]||(e[n.group]=[]),e[n.group].push(n)}for(var i in e)this._print(e[i])}},e.print=function(e){if(void 0===e&&(e=0),this.debug){for(var t=[],r=0,n=this.profileList.values;r<n.length;r++){var i=n[r];i.group===e&&t.push(i)}this._print(t)}},e.test=function(){for(var e=[],t={},r=0;1e3>r;r++)e.push(r),t[r]=r;for(var n=this._getNow(),i=0,o=e;i<o.length;i++){o[i];console.log("list:")}console.log("list of用时:"+(this._getNow()-n)),n=this._getNow();for(var a in e)console.log("list:");console.log("list in用时:"+(this._getNow()-n)),n=this._getNow();for(var a in t)console.log("map:");console.log("map用时:"+(this._getNow()-n))},e.debug=!1,e.profileList={keys:[],values:[]},e}();e.Profile=t,__reflect(t.prototype,"egret3d.Profile")}(egret3d||(egret3d={}));var egret3d;!function(e){function t(t){void 0===t&&(t={antialias:!1,alpha:!1}),console.info("Egret version:",paper.Application.version),console.info("Egret start."),egret.Sound=egret.web?egret.web.HtmlSound:egret.wxgame.HtmlSound,egret.Capabilities.renderMode="webgl";var i=n(t),o=r(t);t.option=i,t.canvas=o,t.webgl=o.getContext("webgl",t)||o.getContext("experimental-webgl",t),paper.Application.initialize(t);var a=paper.Application.systemManager;a.register(e.web.BeginSystem,0,t),a.register(e.AnimationSystem,5e3),a.register(e.MeshRendererSystem,7e3),a.register(e.SkinnedMeshRendererSystem,7e3),a.register(e.particle.ParticleSystem,7e3),a.register(e.Egret2DRendererSystem,7e3,t),a.register(e.CameraAndLightSystem,8e3),a.register(e.web.WebGLRenderSystem,8e3,t),a.register(e.web.InputSystem,1e4,t),a.register(e.web.EndSystem,1e4,t),a._preRegisterSystems(),console.info("Egret start complete.")}function r(e){if(window.canvas)return window.canvas;if(e.canvas)return e.canvas;var t=document.getElementsByClassName("egret-player")[0],r=document.createElement("canvas");return t.appendChild(r),r}function n(e){if(window.canvas)return{antialias:e.antialias,antialiasSamples:4,contentWidth:e.contentWidth||640,contentHeight:e.contentHeight||1136};var t=document.getElementsByClassName("egret-player")[0];return{antialias:e.antialias,antialiasSamples:4,contentWidth:parseInt(t.getAttribute("data-content-width")),contentHeight:parseInt(t.getAttribute("data-content-height"))}}e.runEgret=t}(egret3d||(egret3d={})),window.paper=paper,window.egret3d=egret3d;var egret3d;!function(e){e.RAD_DEG=57.29577951308232,e.DEG_RAD=.017453292519943295,e.EPSILON=2.220446049250313e-16,e.floatClamp=e.math.clamp,e.numberLerp=e.math.lerp,e.AABB=e.Box,e.Matrix=e.Matrix4,e.Prefab=paper.Prefab,e.RawScene=paper.RawScene,e.InputManager={mouse:{isPressed:function(t){var r=[1,4,2];return e.inputCollecter.defaultPointer.isHold(r[t])},wasPressed:function(t){var r=[1,4,2];return e.inputCollecter.defaultPointer.isDown(r[t])},wasReleased:function(t){var r=[1,4,2];return e.inputCollecter.defaultPointer.isUp(r[t])}},touch:{getTouch:function(t){return e.inputCollecter.getHoldPointers()[t]}},keyboard:{isPressed:function(t){return e.inputCollecter.getKey(t).isHold()},wasPressed:function(t){return e.inputCollecter.getKey(t).isUp()}}}}(egret3d||(egret3d={}));