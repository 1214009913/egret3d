namespace egret3d.ShaderLib {
    export const cube = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"cube_vert","type":35633,"uri":"varying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <common2>\r\n\r\nvoid main() {\r\n\r\n\tvWorldPosition = transformDirection( position, modelMatrix );\r\n\r\n\t#include <begin_vertex>\r\n\t#include <project_vertex>\r\n\r\n\tgl_Position.z = gl_Position.w; // set z to camera.far\r\n\r\n}\r\n"},{"name":"cube_frag","type":35632,"uri":"uniform samplerCube tCube;\r\nuniform float tFlip;\r\nuniform float opacity;\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\r\n\tgl_FragColor.a *= opacity;\r\n\r\n}\r\n"}],"techniques":[{"name":"cube","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"}},"uniforms":{"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"tCube":{"type":35680},"tFlip":{"type":5126},"opacity":{"type":5126,"value":1}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const depth = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"depth_vert","type":35633,"uri":"#include <common>\r\n#include <common2>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\r\n\t#include <skinbase_vertex>\r\n\r\n\t#ifdef USE_DISPLACEMENTMAP\r\n\r\n\t\t#include <beginnormal_vertex>\r\n\t\t#include <morphnormal_vertex>\r\n\t\t#include <skinnormal_vertex>\r\n\r\n\t#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n}\r\n"},{"name":"depth_frag","type":35632,"uri":"#if DEPTH_PACKING == 3200\r\n\r\n\tuniform float opacity;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( 1.0 );\r\n\r\n\t#if DEPTH_PACKING == 3200\r\n\r\n\t\tdiffuseColor.a = opacity;\r\n\r\n\t#endif\r\n\r\n\t#include <map_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\r\n\t#if DEPTH_PACKING == 3200\r\n\r\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\r\n\r\n\t#elif DEPTH_PACKING == 3201\r\n\r\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\r\n\r\n\t#endif\r\n\r\n}\r\n"}],"techniques":[{"name":"depth","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"}},"uniforms":{"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"uvTransform":{"type":35675,"value":[1,0,0,0,1,0,0,0,1]},"displacementMap":{"type":35678},"displacementScale":{"type":5126},"displacementBias":{"type":5126},"morphTargetInfluences[0]":{"type":5126},"bindMatrix":{"type":35676,"semantic":"_BINDMATRIX"},"bindMatrixInverse":{"type":35676,"semantic":"_BINDMATRIXINVERSE"},"boneTexture":{"type":35678},"boneTextureSize":{"type":5124},"boneMatrices[0]":{"type":35676},"logDepthBufFC":{"type":5126},"opacity":{"type":5126,"value":1},"map":{"type":35678},"alphaMap":{"type":35678},"clippingPlanes[0]":{"type":35666}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const diffuse = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"diffuse_vert","type":35633,"uri":"#include <common>\r\n#include <skinning_pars_vert>\r\n#include <lightmap_pars_vert> \r\nattribute vec4 position;\r\nattribute vec4 uv;\r\nuniform highp mat4 modelViewProjectionMatrix;\r\nuniform highp mat3 uvTransform;  \r\nvarying highp vec2 xlv_TEXCOORD0;\r\n\r\nvoid main() {\r\n    #include <skinning_base_vert>\r\n    xlv_TEXCOORD0 = ( uvTransform * vec3( uv.xy, 1 ) ).xy;\r\n    #include <lightmap_vert>\r\n    gl_Position = (modelViewProjectionMatrix * tmpVertex);\r\n}"},{"name":"diffuse_frag","type":35632,"uri":"#include <common>\r\n#include <lightmap_pars_frag>\r\nuniform vec3 diffuse;\r\nuniform sampler2D map;\r\nuniform lowp float _AlphaCut;\r\nvarying highp vec2 xlv_TEXCOORD0;\r\nvoid main() {\r\n    lowp vec4 outColor = texture2D(map, xlv_TEXCOORD0) * vec4(diffuse, 1.0);\r\n    if(outColor.a < _AlphaCut)\r\n        discard;\r\n    #include <lightmap_frag>    \r\n}"}],"techniques":[{"name":"diffuse","attributes":{"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"},"uv2":{"semantic":"TEXCOORD_1"},"position":{"semantic":"POSITION"},"uv":{"semantic":"TEXCOORD_0"}},"uniforms":{"glstate_vec4_bones[0]":{"type":35666,"semantic":"_BONESVEC4"},"lightMapOffset":{"type":35666,"semantic":"_LIGHTMAPOFFSET"},"lightMapUV":{"type":5126,"semantic":"_LIGHTMAPUV"},"modelViewProjectionMatrix":{"type":35676,"semantic":"MODELVIEWPROJECTION"},"uvTransform":{"type":35675,"value":[1,0,0,0,1,0,0,0,1]},"lightMap":{"type":35678,"semantic":"_LIGHTMAPTEX"},"lightMapIntensity":{"type":5126,"semantic":"_LIGHTMAPINTENSITY"},"diffuse":{"type":35665,"value":[1,1,1]},"map":{"type":35678},"_AlphaCut":{"type":5126,"value":[]}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const distanceRGBA = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"distanceRGBA_vert","type":35633,"uri":"#define DISTANCE\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <common2>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\r\n\t#include <skinbase_vertex>\r\n\r\n\t#ifdef USE_DISPLACEMENTMAP\r\n\r\n\t\t#include <beginnormal_vertex>\r\n\t\t#include <morphnormal_vertex>\r\n\t\t#include <skinnormal_vertex>\r\n\r\n\t#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <worldpos_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvWorldPosition = worldPosition.xyz;\r\n\r\n}\r\n"},{"name":"distanceRGBA_frag","type":35632,"uri":"#define DISTANCE\r\n\r\nuniform vec3 referencePosition;\r\nuniform float nearDistance;\r\nuniform float farDistance;\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main () {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( 1.0 );\r\n\r\n\t#include <map_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\r\n\tfloat dist = length( vWorldPosition - referencePosition );\r\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\r\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\r\n\r\n\tgl_FragColor = packDepthToRGBA( dist );\r\n\r\n}\r\n"}],"techniques":[{"name":"distanceRGBA","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"}},"uniforms":{"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"uvTransform":{"type":35675,"value":[1,0,0,0,1,0,0,0,1]},"displacementMap":{"type":35678},"displacementScale":{"type":5126},"displacementBias":{"type":5126},"morphTargetInfluences[0]":{"type":5126},"bindMatrix":{"type":35676,"semantic":"_BINDMATRIX"},"bindMatrixInverse":{"type":35676,"semantic":"_BINDMATRIXINVERSE"},"boneTexture":{"type":35678},"boneTextureSize":{"type":5124},"boneMatrices[0]":{"type":35676},"referencePosition":{"type":35665,"semantic":"_REFERENCEPOSITION"},"nearDistance":{"type":5126,"semantic":"_NEARDICTANCE"},"farDistance":{"type":5126,"semantic":"_FARDISTANCE"},"map":{"type":35678},"alphaMap":{"type":35678},"clippingPlanes[0]":{"type":35666}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const equirect = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"equirect_vert","type":35633,"uri":"varying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <common2>\r\n\r\nvoid main() {\r\n\r\n\tvWorldPosition = transformDirection( position, modelMatrix );\r\n\r\n\t#include <begin_vertex>\r\n\t#include <project_vertex>\r\n\r\n}\r\n"},{"name":"equirect_frag","type":35632,"uri":"uniform sampler2D tEquirect;\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n\tvec3 direction = normalize( vWorldPosition );\r\n\r\n\tvec2 sampleUV;\r\n\r\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\r\n\r\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\r\n\r\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\r\n\r\n}\r\n"}],"techniques":[{"name":"equirect","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"}},"uniforms":{"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"tEquirect":{"type":35678}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const linedashed = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"linedashed_vert","type":35633,"uri":"uniform float scale;\r\nattribute float lineDistance;\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <common2>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <color_vertex>\r\n\r\n\tvLineDistance = scale * lineDistance;\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n"},{"name":"linedashed_frag","type":35632,"uri":"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\nuniform float dashSize;\r\nuniform float totalSize;\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\r\n\r\n\t\tdiscard;\r\n\r\n\t}\r\n\r\n\tvec3 outgoingLight = vec3( 0.0 );\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <color_fragment>\r\n\r\n\toutgoingLight = diffuseColor.rgb; // simple shader\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\r\n}\r\n"}],"techniques":[{"name":"linedashed","attributes":{"lineDistance":{"semantic":"Unknown"},"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"}},"uniforms":{"scale":{"type":5126},"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"logDepthBufFC":{"type":5126},"diffuse":{"type":35665,"value":[1,1,1]},"opacity":{"type":5126,"value":1},"dashSize":{"type":5126},"totalSize":{"type":5126},"fogColor":{"type":35665},"fogDensity":{"type":5126},"fogNear":{"type":5126},"fogFar":{"type":5126},"clippingPlanes[0]":{"type":35666}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const meshbasic = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"meshbasic_vert","type":35633,"uri":"#include <common>\r\n#include <common2>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <uv2_vertex>\r\n\t#include <color_vertex>\r\n\t#include <skinbase_vertex>\r\n\r\n\t#ifdef USE_ENVMAP\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\r\n\t#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\t#include <envmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n"},{"name":"meshbasic_frag","type":35632,"uri":"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <specularmap_fragment>\r\n\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\r\n\t// accumulation (baked indirect lighting only)\r\n\t#ifdef USE_LIGHTMAP\r\n\t\t   lowp vec4 lightmapTex = texture2D(lightMap, vUv2);\r\n\t\t   highp float power =pow( 2.0 ,lightmapTex.a * 255.0 - 128.0);\r\n\t\t   reflectedLight.indirectDiffuse +=lightmapTex.rgb * power * lightMapIntensity * 1.2;//EGRET\r\n\t\t// reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\r\n\r\n\t#else\r\n\r\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\r\n\r\n\t#endif\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\r\n\r\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\r\n\r\n\t#include <envmap_fragment>\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t// #include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\r\n}\r\n"}],"techniques":[{"name":"meshbasic","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"},"uv2":{"semantic":"TEXCOORD_1"}},"uniforms":{"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"uvTransform":{"type":35675,"value":[1,0,0,0,1,0,0,0,1]},"refractionRatio":{"type":5126,"value":[]},"morphTargetInfluences[0]":{"type":5126},"bindMatrix":{"type":35676,"semantic":"_BINDMATRIX"},"bindMatrixInverse":{"type":35676,"semantic":"_BINDMATRIXINVERSE"},"boneTexture":{"type":35678},"boneTextureSize":{"type":5124},"boneMatrices[0]":{"type":35676},"logDepthBufFC":{"type":5126},"diffuse":{"type":35665,"value":[1,1,1]},"opacity":{"type":5126,"value":1},"map":{"type":35678},"alphaMap":{"type":35678},"aoMap":{"type":35678},"aoMapIntensity":{"type":5126,"value":1},"lightMap":{"type":35678,"semantic":"_LIGHTMAPTEX"},"lightMapIntensity":{"type":5126,"semantic":"_LIGHTMAPINTENSITY"},"reflectivity":{"type":5126,"value":[]},"envMapIntensity":{"type":5126,"value":1},"envMap":{"type":35678},"flipEnvMap":{"type":5126,"value":1},"maxMipLevel":{"type":5124,"value":[]},"fogColor":{"type":35665},"fogDensity":{"type":5126},"fogNear":{"type":5126},"fogFar":{"type":5126},"specularMap":{"type":35678},"clippingPlanes[0]":{"type":35666}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const meshlambert = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"meshlambert_vert","type":35633,"uri":"#define LAMBERT\r\nvarying vec3 vLightFront;\r\n\r\n#ifdef DOUBLE_SIDED\r\n\r\n\tvarying vec3 vLightBack;\r\n\r\n#endif\r\n#include <common>\r\n#include <common2>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_pars_maps>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <uv2_vertex>\r\n\t#include <color_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <envmap_vertex>\r\n\t#include <lights_lambert_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n"},{"name":"meshlambert_frag","type":35632,"uri":"uniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float opacity;\r\n\r\nvarying vec3 vLightFront;\r\n\r\n#ifdef DOUBLE_SIDED\r\n\r\n\tvarying vec3 vLightBack;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_pars_maps>\r\n#include <fog_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <shadowmask_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\tvec3 totalEmissiveRadiance = emissive;\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <specularmap_fragment>\r\n\t#include <emissivemap_fragment>\r\n\r\n\t// accumulation\r\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\r\n\r\n\t#include <lightmap_fragment>\r\n\r\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\r\n\r\n\t#ifdef DOUBLE_SIDED\r\n\r\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\r\n\r\n\t#else\r\n\r\n\t\treflectedLight.directDiffuse = vLightFront;\r\n\r\n\t#endif\r\n\r\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\r\n\r\n\t#include <envmap_fragment>\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <tonemapping_fragment>\r\n\t// #include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n"}],"techniques":[{"name":"meshlambert","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"},"uv2":{"semantic":"TEXCOORD_1"}},"uniforms":{"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"uvTransform":{"type":35675,"value":[1,0,0,0,1,0,0,0,1]},"refractionRatio":{"type":5126,"value":[]},"ambientLightColor":{"type":35665,"semantic":"_AMBIENTLIGHTCOLOR"},"directionalLights[0]":{"type":5126,"semantic":"_DIRECTLIGHTS"},"pointLights[0]":{"type":5126,"semantic":"_POINTLIGHTS"},"spotLights[0]":{"type":5126,"semantic":"_SPOTLIGHTS"},"ltc_1":{"type":35678,"semantic":"Unknown"},"ltc_2":{"type":35678,"semantic":"Unknown"},"rectAreaLights[0]":{"type":-1,"semantic":"Unknown"},"hemisphereLights[0]":{"type":-1,"semantic":"Unknown"},"morphTargetInfluences[0]":{"type":5126},"bindMatrix":{"type":35676,"semantic":"_BINDMATRIX"},"bindMatrixInverse":{"type":35676,"semantic":"_BINDMATRIXINVERSE"},"boneTexture":{"type":35678},"boneTextureSize":{"type":5124},"boneMatrices[0]":{"type":35676},"directionalShadowMatrix[0]":{"type":35676,"semantic":"_DIRECTIONSHADOWMAT"},"spotShadowMatrix[0]":{"type":35676,"semantic":"_SPOTSHADOWMAT"},"pointShadowMatrix[0]":{"type":35676,"semantic":"_POINTSHADOWMAT"},"logDepthBufFC":{"type":5126},"diffuse":{"type":35665,"value":[1,1,1]},"emissive":{"type":35665,"value":[0,0,0]},"opacity":{"type":5126,"value":1},"map":{"type":35678},"alphaMap":{"type":35678},"aoMap":{"type":35678},"aoMapIntensity":{"type":5126,"value":1},"lightMap":{"type":35678,"semantic":"_LIGHTMAPTEX"},"lightMapIntensity":{"type":5126,"semantic":"_LIGHTMAPINTENSITY"},"emissiveMap":{"type":35678},"reflectivity":{"type":5126,"value":[]},"envMapIntensity":{"type":5126,"value":1},"envMap":{"type":35678},"flipEnvMap":{"type":5126,"value":1},"maxMipLevel":{"type":5124,"value":[]},"fogColor":{"type":35665},"fogDensity":{"type":5126},"fogNear":{"type":5126},"fogFar":{"type":5126},"directionalShadowMap[0]":{"type":35678,"semantic":"_DIRECTIONSHADOWMAP"},"spotShadowMap[0]":{"type":35678,"semantic":"_SPOTSHADOWMAP"},"pointShadowMap[0]":{"type":35678,"semantic":"_POINTSHADOWMAT"},"specularMap":{"type":35678},"clippingPlanes[0]":{"type":35666}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const meshphong = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"meshphong_vert","type":35633,"uri":"#define PHONG\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <common2>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <uv2_vertex>\r\n\t#include <color_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\tvNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <envmap_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n"},{"name":"meshphong_frag","type":35632,"uri":"#define PHONG\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <gradientmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_phong_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\tvec3 totalEmissiveRadiance = emissive;\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <specularmap_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\t#include <emissivemap_fragment>\r\n\r\n\t// accumulation\r\n\t#include <lights_phong_fragment>\r\n\t#include <lights_fragment_begin>\r\n\t#include <lights_fragment_maps>\r\n\t#include <lights_fragment_end>\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n\t#include <envmap_fragment>\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n"}],"techniques":[{"name":"meshphong","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"},"uv2":{"semantic":"TEXCOORD_1"}},"uniforms":{"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"uvTransform":{"type":35675,"value":[1,0,0,0,1,0,0,0,1]},"displacementMap":{"type":35678},"displacementScale":{"type":5126},"displacementBias":{"type":5126},"refractionRatio":{"type":5126,"value":[]},"morphTargetInfluences[0]":{"type":5126},"bindMatrix":{"type":35676,"semantic":"_BINDMATRIX"},"bindMatrixInverse":{"type":35676,"semantic":"_BINDMATRIXINVERSE"},"boneTexture":{"type":35678},"boneTextureSize":{"type":5124},"boneMatrices[0]":{"type":35676},"directionalShadowMatrix[0]":{"type":35676,"semantic":"_DIRECTIONSHADOWMAT"},"spotShadowMatrix[0]":{"type":35676,"semantic":"_SPOTSHADOWMAT"},"pointShadowMatrix[0]":{"type":35676,"semantic":"_POINTSHADOWMAT"},"logDepthBufFC":{"type":5126},"diffuse":{"type":35665,"value":[1,1,1]},"emissive":{"type":35665,"value":[0,0,0]},"specular":{"type":35665,"value":[1,1,1]},"shininess":{"type":5126,"value":1},"opacity":{"type":5126,"value":1},"map":{"type":35678},"alphaMap":{"type":35678},"aoMap":{"type":35678},"aoMapIntensity":{"type":5126,"value":1},"lightMap":{"type":35678,"semantic":"_LIGHTMAPTEX"},"lightMapIntensity":{"type":5126,"semantic":"_LIGHTMAPINTENSITY"},"emissiveMap":{"type":35678},"reflectivity":{"type":5126,"value":[]},"envMapIntensity":{"type":5126,"value":1},"envMap":{"type":35678},"flipEnvMap":{"type":5126,"value":1},"maxMipLevel":{"type":5124,"value":[]},"gradientMap":{"type":35678},"fogColor":{"type":35665},"fogDensity":{"type":5126},"fogNear":{"type":5126},"fogFar":{"type":5126},"ambientLightColor":{"type":35665,"semantic":"_AMBIENTLIGHTCOLOR"},"directionalLights[0]":{"type":5126,"semantic":"_DIRECTLIGHTS"},"pointLights[0]":{"type":5126,"semantic":"_POINTLIGHTS"},"spotLights[0]":{"type":5126,"semantic":"_SPOTLIGHTS"},"ltc_1":{"type":35678,"semantic":"Unknown"},"ltc_2":{"type":35678,"semantic":"Unknown"},"rectAreaLights[0]":{"type":-1,"semantic":"Unknown"},"hemisphereLights[0]":{"type":-1,"semantic":"Unknown"},"directionalShadowMap[0]":{"type":35678,"semantic":"_DIRECTIONSHADOWMAP"},"spotShadowMap[0]":{"type":35678,"semantic":"_SPOTSHADOWMAP"},"pointShadowMap[0]":{"type":35678,"semantic":"_POINTSHADOWMAT"},"bumpMap":{"type":35678},"bumpScale":{"type":5126},"normalMap":{"type":35678},"normalScale":{"type":35664},"specularMap":{"type":35678},"clippingPlanes[0]":{"type":35666}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const meshphysical = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"meshphysical_vert","type":35633,"uri":"#define PHYSICAL\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <common2>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <uv2_vertex>\r\n\t#include <color_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\tvNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n"},{"name":"meshphysical_frag","type":35632,"uri":"#define PHYSICAL\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float roughness;\r\nuniform float metalness;\r\nuniform float opacity;\r\n\r\n#ifndef STANDARD\r\n\tuniform float clearCoat;\r\n\tuniform float clearCoatRoughness;\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <bsdfs>\r\n#include <cube_uv_reflection_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <envmap_physical_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <lights_pars_begin>\r\n#include <lights_physical_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <roughnessmap_pars_fragment>\r\n#include <metalnessmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\tvec3 totalEmissiveRadiance = emissive;\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <roughnessmap_fragment>\r\n\t#include <metalnessmap_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\t#include <emissivemap_fragment>\r\n\r\n\t// accumulation\r\n\t#include <lights_physical_fragment>\r\n\t#include <lights_fragment_begin>\r\n\t#include <lights_fragment_maps>\r\n\t#include <lights_fragment_end>\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n"}],"techniques":[{"name":"meshphysical","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"},"uv2":{"semantic":"TEXCOORD_1"}},"uniforms":{"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"uvTransform":{"type":35675,"value":[1,0,0,0,1,0,0,0,1]},"displacementMap":{"type":35678},"displacementScale":{"type":5126},"displacementBias":{"type":5126},"morphTargetInfluences[0]":{"type":5126},"bindMatrix":{"type":35676,"semantic":"_BINDMATRIX"},"bindMatrixInverse":{"type":35676,"semantic":"_BINDMATRIXINVERSE"},"boneTexture":{"type":35678},"boneTextureSize":{"type":5124},"boneMatrices[0]":{"type":35676},"directionalShadowMatrix[0]":{"type":35676,"semantic":"_DIRECTIONSHADOWMAT"},"spotShadowMatrix[0]":{"type":35676,"semantic":"_SPOTSHADOWMAT"},"pointShadowMatrix[0]":{"type":35676,"semantic":"_POINTSHADOWMAT"},"logDepthBufFC":{"type":5126},"diffuse":{"type":35665,"value":[1,1,1]},"emissive":{"type":35665,"value":[0,0,0]},"roughness":{"type":5126},"metalness":{"type":5126},"opacity":{"type":5126,"value":1},"clearCoat":{"type":5126},"clearCoatRoughness":{"type":5126},"map":{"type":35678},"alphaMap":{"type":35678},"aoMap":{"type":35678},"aoMapIntensity":{"type":5126,"value":1},"lightMap":{"type":35678,"semantic":"_LIGHTMAPTEX"},"lightMapIntensity":{"type":5126,"semantic":"_LIGHTMAPINTENSITY"},"emissiveMap":{"type":35678},"reflectivity":{"type":5126,"value":[]},"envMapIntensity":{"type":5126,"value":1},"envMap":{"type":35678},"flipEnvMap":{"type":5126,"value":1},"maxMipLevel":{"type":5124,"value":[]},"refractionRatio":{"type":5126,"value":[]},"fogColor":{"type":35665},"fogDensity":{"type":5126},"fogNear":{"type":5126},"fogFar":{"type":5126},"ambientLightColor":{"type":35665,"semantic":"_AMBIENTLIGHTCOLOR"},"directionalLights[0]":{"type":5126,"semantic":"_DIRECTLIGHTS"},"pointLights[0]":{"type":5126,"semantic":"_POINTLIGHTS"},"spotLights[0]":{"type":5126,"semantic":"_SPOTLIGHTS"},"ltc_1":{"type":35678,"semantic":"Unknown"},"ltc_2":{"type":35678,"semantic":"Unknown"},"rectAreaLights[0]":{"type":-1,"semantic":"Unknown"},"hemisphereLights[0]":{"type":-1,"semantic":"Unknown"},"directionalShadowMap[0]":{"type":35678,"semantic":"_DIRECTIONSHADOWMAP"},"spotShadowMap[0]":{"type":35678,"semantic":"_SPOTSHADOWMAP"},"pointShadowMap[0]":{"type":35678,"semantic":"_POINTSHADOWMAT"},"bumpMap":{"type":35678},"bumpScale":{"type":5126},"normalMap":{"type":35678},"normalScale":{"type":35664},"roughnessMap":{"type":35678},"metalnessMap":{"type":35678},"clippingPlanes[0]":{"type":35666}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const normal = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"normal_vert","type":35633,"uri":"#define NORMAL\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\r\n\r\n\tvarying vec3 vViewPosition;\r\n\r\n#endif\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common2>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\r\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\tvNormal = normalize( transformedNormal );\r\n\r\n#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n#endif\r\n\r\n}\r\n"},{"name":"normal_frag","type":35632,"uri":"#define NORMAL\r\n\r\nuniform float opacity;\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\r\n\r\n\tvarying vec3 vViewPosition;\r\n\r\n#endif\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\r\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\r\n\r\n}\r\n"}],"techniques":[{"name":"normal","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"}},"uniforms":{"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"uvTransform":{"type":35675,"value":[1,0,0,0,1,0,0,0,1]},"displacementMap":{"type":35678},"displacementScale":{"type":5126},"displacementBias":{"type":5126},"morphTargetInfluences[0]":{"type":5126},"bindMatrix":{"type":35676,"semantic":"_BINDMATRIX"},"bindMatrixInverse":{"type":35676,"semantic":"_BINDMATRIXINVERSE"},"boneTexture":{"type":35678},"boneTextureSize":{"type":5124},"boneMatrices[0]":{"type":35676},"logDepthBufFC":{"type":5126},"opacity":{"type":5126,"value":1},"bumpMap":{"type":35678},"bumpScale":{"type":5126},"normalMap":{"type":35678},"normalScale":{"type":35664}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const particle = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"particle_vert","type":35633,"uri":"//inspired by layaair:https://github.com/layabox/layaair/blob/master/src/d3/src/laya/d3/shader/files/ParticleShuriKen.vs\r\n#include <common>\r\n#if defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\r\n\tattribute vec2 corner;\r\n#endif\r\n#ifdef RENDERMESH\r\n\tattribute vec3 position;\r\n\tattribute vec4 color;\r\n#endif\r\nattribute vec2 uv;\r\nattribute vec3 startPosition;\r\nattribute vec3 startVelocity;\r\nattribute vec4 startColor;\r\nattribute vec3 startSize;\r\nattribute vec3 startRotation;\r\nattribute vec2 time;\r\n#if defined(COLOROGRADIENT)||defined(COLORTWOGRADIENTS)||defined(SIZETWOCURVES)||defined(SIZETWOCURVESSEPERATE)||defined(ROTATIONTWOCONSTANTS)||defined(ROTATIONTWOCURVES)\r\n  attribute vec4 random0;\r\n#endif\r\n#if defined(TEXTURESHEETANIMATIONTWOCURVE)||defined(VELOCITYTWOCONSTANT)||defined(VELOCITYTWOCURVE)\r\n  attribute vec4 random1;\r\n#endif\r\nattribute vec3 startWorldPosition;\r\nattribute vec4 startWorldRotation;\r\n\r\n#include <particle_common>\r\n\r\nvoid main()\r\n{\r\n\tfloat age = u_currentTime - time.y;\r\n\tfloat t = age/time.x;\r\n\tif(t>1.0){ \t\t\t\r\n\t\t\tv_discard=1.0;\r\n\t\t\treturn;\r\n  }\r\n\t  \r\n\t#include <particle_affector>\r\n\tgl_Position=viewProjectionMatrix*vec4(center,1.0);\r\n\tv_color = computeColor(startColor, t);\r\n\tv_texcoord =computeUV(uv, t);\r\n\tv_discard=0.0;\r\n}\r\n\r\n"},{"name":"particle_frag","type":35632,"uri":"//inspired by layaair:https://github.com/layabox/layaair/blob/master/src/d3/src/laya/d3/shader/files/ParticleShuriKen.ps\r\n#include <common>\r\nuniform sampler2D map;\r\nuniform vec3 diffuse;\r\nuniform float opacity;\r\nvarying float v_discard;\r\nvarying vec4 v_color;\r\nvarying vec2 v_texcoord;\r\n\r\n#ifdef RENDERMODE_MESH\r\n\tvarying vec4 v_mesh_color;\r\n#endif\r\n\r\nvoid main()\r\n{\t\r\n\t#ifdef RENDERMODE_MESH\r\n\t\tgl_FragColor=v_mesh_color;\r\n\t#else\r\n\t\tgl_FragColor=vec4(1.0);\t\r\n\t#endif\r\n\r\n\tif(v_discard!=0.0)\r\n\t\tdiscard;\r\n\tgl_FragColor*=texture2D(map,v_texcoord)*vec4(diffuse, opacity)*v_color*2.0;\r\n}"}],"techniques":[{"name":"particle","attributes":{"corner":{"semantic":"_CORNER"},"position":{"semantic":"POSITION"},"color":{"semantic":"COLOR_0"},"uv":{"semantic":"TEXCOORD_0"},"startPosition":{"semantic":"_START_POSITION"},"startVelocity":{"semantic":"_START_VELOCITY"},"startColor":{"semantic":"_START_COLOR"},"startSize":{"semantic":"_START_SIZE"},"startRotation":{"semantic":"_START_ROTATION"},"time":{"semantic":"_TIME"},"random0":{"semantic":"_RANDOM0"},"random1":{"semantic":"_RANDOM1"},"startWorldPosition":{"semantic":"_WORLD_POSITION"},"startWorldRotation":{"semantic":"_WORLD_ROTATION"}},"uniforms":{"u_currentTime":{"type":5126},"u_gravity":{"type":35665},"u_worldPosition":{"type":35665,"value":[0,0,0]},"u_worldRotation":{"type":35666,"value":[0,0,0,1]},"u_startRotation3D":{"type":35670},"u_scalingMode":{"type":5124},"u_positionScale":{"type":35665},"u_sizeScale":{"type":35665},"viewProjectionMatrix":{"type":35676,"semantic":"_VIEWPROJECTION"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"cameraForward":{"type":35665,"semantic":"_CAMERA_FORWARD"},"cameraUp":{"type":35665,"semantic":"CAMERA_UP"},"u_lengthScale":{"type":5126},"u_speeaScale":{"type":5126},"u_simulationSpace":{"type":5124},"u_spaceType":{"type":5124},"u_velocityConst":{"type":35665},"u_velocityCurveX[0]":{"type":35664},"u_velocityCurveY[0]":{"type":35664},"u_velocityCurveZ[0]":{"type":35664},"u_velocityConstMax":{"type":35665},"u_velocityCurveMaxX[0]":{"type":35664},"u_velocityCurveMaxY[0]":{"type":35664},"u_velocityCurveMaxZ[0]":{"type":35664},"u_colorGradient[0]":{"type":35666},"u_alphaGradient[0]":{"type":35664},"u_colorGradientMax[0]":{"type":35666},"u_alphaGradientMax[0]":{"type":35664},"u_sizeCurve[0]":{"type":35664},"u_sizeCurveMax[0]":{"type":35664},"u_sizeCurveX[0]":{"type":35664},"u_sizeCurveY[0]":{"type":35664},"u_sizeCurveZ[0]":{"type":35664},"u_sizeCurveMaxX[0]":{"type":35664},"u_sizeCurveMaxY[0]":{"type":35664},"u_sizeCurveMaxZ[0]":{"type":35664},"u_rotationConst":{"type":5126},"u_rotationConstMax":{"type":5126},"u_rotationCurve[0]":{"type":35664},"u_rotationCurveMax[0]":{"type":35664},"u_rotationConstSeprarate":{"type":35665},"u_rotationConstMaxSeprarate":{"type":35665},"u_rotationCurveX[0]":{"type":35664},"u_rotationCurveY[0]":{"type":35664},"u_rotationCurveZ[0]":{"type":35664},"u_rotationCurveW[0]":{"type":35664},"u_rotationCurveMaxX[0]":{"type":35664},"u_rotationCurveMaxY[0]":{"type":35664},"u_rotationCurveMaxZ[0]":{"type":35664},"u_rotationCurveMaxW[0]":{"type":35664},"u_cycles":{"type":5126},"u_subUV":{"type":35666},"u_uvCurve[0]":{"type":35664},"u_uvCurveMax[0]":{"type":35664},"map":{"type":35678},"diffuse":{"type":35665,"value":[1,1,1]},"opacity":{"type":5126,"value":1}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const points = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"points_vert","type":35633,"uri":"uniform float size;\r\nuniform float scale;\r\n\r\n#include <common>\r\n#include <common2>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <color_vertex>\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <project_vertex>\r\n\r\n\tgl_PointSize = size;\r\n\r\n\t#ifdef USE_SIZEATTENUATION\r\n\r\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\r\n\r\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\r\n\r\n\t#endif\r\n\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\t#include <worldpos_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n"},{"name":"points_frag","type":35632,"uri":"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <map_particle_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec3 outgoingLight = vec3( 0.0 );\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_particle_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphatest_fragment>\r\n\r\n\toutgoingLight = diffuseColor.rgb;\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\r\n}\r\n"}],"techniques":[{"name":"points","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"}},"uniforms":{"size":{"type":5126},"scale":{"type":5126},"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"morphTargetInfluences[0]":{"type":5126},"logDepthBufFC":{"type":5126},"diffuse":{"type":35665,"value":[1,1,1]},"opacity":{"type":5126,"value":1},"uvTransform":{"type":35675,"value":[1,0,0,0,1,0,0,0,1]},"map":{"type":35678},"fogColor":{"type":35665},"fogDensity":{"type":5126},"fogNear":{"type":5126},"fogFar":{"type":5126},"clippingPlanes[0]":{"type":35666}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const shadow = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"shadow_vert","type":35633,"uri":"\r\n#include <common2>\r\n#include <fog_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <begin_vertex>\r\n\t#include <project_vertex>\r\n\t#include <worldpos_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n"},{"name":"shadow_frag","type":35632,"uri":"uniform vec3 color;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <shadowmap_pars_fragment>\r\n#include <shadowmask_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\r\n\r\n\t#include <fog_fragment>\r\n\r\n}\r\n"}],"techniques":[{"name":"shadow","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"}},"uniforms":{"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"directionalShadowMatrix[0]":{"type":35676,"semantic":"_DIRECTIONSHADOWMAT"},"spotShadowMatrix[0]":{"type":35676,"semantic":"_SPOTSHADOWMAT"},"pointShadowMatrix[0]":{"type":35676,"semantic":"_POINTSHADOWMAT"},"color":{"type":35665},"opacity":{"type":5126,"value":1},"fogColor":{"type":35665},"fogDensity":{"type":5126},"fogNear":{"type":5126},"fogFar":{"type":5126},"ambientLightColor":{"type":35665,"semantic":"_AMBIENTLIGHTCOLOR"},"directionalLights[0]":{"type":5126,"semantic":"_DIRECTLIGHTS"},"pointLights[0]":{"type":5126,"semantic":"_POINTLIGHTS"},"spotLights[0]":{"type":5126,"semantic":"_SPOTLIGHTS"},"ltc_1":{"type":35678,"semantic":"Unknown"},"ltc_2":{"type":35678,"semantic":"Unknown"},"rectAreaLights[0]":{"type":-1,"semantic":"Unknown"},"hemisphereLights[0]":{"type":-1,"semantic":"Unknown"},"directionalShadowMap[0]":{"type":35678,"semantic":"_DIRECTIONSHADOWMAP"},"spotShadowMap[0]":{"type":35678,"semantic":"_SPOTSHADOWMAP"},"pointShadowMap[0]":{"type":35678,"semantic":"_POINTSHADOWMAT"}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const sprite = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"sprite_vert","type":35633,"uri":"uniform float rotation;\r\nuniform vec2 center;\r\n\r\n#include <common>\r\n#include <common2>\r\n#include <uv_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\r\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\r\n\tvec2 scale;\r\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\r\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\r\n\r\n\t#ifndef USE_SIZEATTENUATION\r\n\r\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\r\n\r\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\r\n\r\n\t#endif\r\n\r\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\r\n\r\n\tvec2 rotatedPosition;\r\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\r\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\r\n\r\n\tmvPosition.xy += rotatedPosition;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n"},{"name":"sprite_frag","type":35632,"uri":"uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec3 outgoingLight = vec3( 0.0 );\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <alphatest_fragment>\r\n\r\n\toutgoingLight = diffuseColor.rgb;\r\n\r\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\r\n}\r\n"}],"techniques":[{"name":"sprite","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"uv":{"semantic":"TEXCOORD_0"},"color":{"semantic":"COLOR_0"},"morphTarget0":{"semantic":"WEIGHTS_0"},"morphTarget1":{"semantic":"WEIGHTS_1"},"morphTarget2":{"semantic":"WEIGHTS_2"},"morphTarget3":{"semantic":"WEIGHTS_3"},"morphNormal0":{"semantic":"MORPHNORMAL_0"},"morphNormal1":{"semantic":"MORPHNORMAL_1"},"morphNormal2":{"semantic":"MORPHNORMAL_2"},"morphNormal3":{"semantic":"MORPHNORMAL_3"},"morphTarget4":{"semantic":"WEIGHTS_4"},"morphTarget5":{"semantic":"WEIGHTS_5"},"morphTarget6":{"semantic":"WEIGHTS_6"},"morphTarget7":{"semantic":"WEIGHTS_7"},"skinIndex":{"semantic":"JOINTS_0"},"skinWeight":{"semantic":"WEIGHTS_0"}},"uniforms":{"rotation":{"type":5126},"center":{"type":35664},"modelMatrix":{"type":35676,"semantic":"MODEL"},"modelViewMatrix":{"type":35676,"semantic":"MODELVIEW"},"projectionMatrix":{"type":35676,"semantic":"PROJECTION"},"viewMatrix":{"type":35676,"semantic":"VIEW"},"normalMatrix":{"type":35675,"semantic":"MODELVIEWINVERSE"},"cameraPosition":{"type":35665,"semantic":"_CAMERA_POS"},"uvTransform":{"type":35675,"value":[1,0,0,0,1,0,0,0,1]},"logDepthBufFC":{"type":5126},"diffuse":{"type":35665,"value":[1,1,1]},"opacity":{"type":5126,"value":1},"map":{"type":35678},"fogColor":{"type":35665},"fogDensity":{"type":5126},"fogNear":{"type":5126},"fogFar":{"type":5126},"clippingPlanes[0]":{"type":35666}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
    export const vertcolor = {"version":"3","asset":{"version":"2.0"},"extensions":{"KHR_techniques_webgl":{"shaders":[{"name":"vertcolor_vert","type":35633,"uri":"#include <common>\r\nattribute vec4 position;   \r\nattribute vec4 normal;   \r\nattribute vec4 color;                  \r\nattribute vec4 uv;        \r\nuniform highp mat4 modelViewProjectionMatrix;   \r\nuniform highp vec4 _MainTex_ST;       \r\n\r\nvarying lowp vec4 xlv_COLOR;                \r\nvarying highp vec2 xlv_TEXCOORD0;   \r\n\r\nvoid main()                                     \r\n{                                               \r\n    highp vec4 tmpvar_1;                        \r\n    tmpvar_1.w = 1.0;                           \r\n    tmpvar_1.xyz = position.xyz;             \r\n    xlv_COLOR = color;                     \r\n    xlv_TEXCOORD0 = uv.xy * _MainTex_ST.xy + _MainTex_ST.zw;   \r\n\r\n    //xlv_COLOR.xyz =pos.xyz;\r\n    gl_Position = (modelViewProjectionMatrix * tmpvar_1);  \r\n}\r\n"},{"name":"vertcolor_frag","type":35632,"uri":"#include <common>\r\nuniform sampler2D map;                                                 \r\nvarying lowp vec4 xlv_COLOR;                                                 \r\nvarying highp vec2 xlv_TEXCOORD0;   \r\nvoid main() \r\n{\r\n    lowp vec4 col_1;    \r\n    mediump vec4 prev_2;\r\n    lowp vec4 tmpvar_3;\r\n\r\n    tmpvar_3 = (texture2D(map, xlv_TEXCOORD0));\r\n    //prev_2 = tmpvar_3;\r\n    //mediump vec4 tmpvar_4;\r\n    //tmpvar_4 = mix(vec4(1.0, 1.0, 1.0, 1.0), prev_2, prev_2.wwww);\r\n    //col_1 = tmpvar_4;\r\n    //col_1.x = xlv_TEXCOORD0.x;\r\n    //col_1.y = xlv_TEXCOORD0.y;\r\n    gl_FragData[0] = tmpvar_3;\r\n}"}],"techniques":[{"name":"vertcolor","attributes":{"position":{"semantic":"POSITION"},"normal":{"semantic":"NORMAL"},"color":{"semantic":"COLOR_0"},"uv":{"semantic":"TEXCOORD_0"}},"uniforms":{"modelViewProjectionMatrix":{"type":35676,"semantic":"MODELVIEWPROJECTION"},"_MainTex_ST":{"type":35666,"value":[1,1,0,0]},"map":{"type":35678}},"states":{"enable":[],"functions":{}}}]},"paper":{}},"extensionsRequired":["paper"],"extensionsUsed":["paper"],"materials":[]};
}
